[
   {
      "terms":"accusative",
      "definition_text":"See case.",
      "definition_html":"<p><a name=\"accusative\"><strong class=\"plus\">accusative</strong></a>&#xA0;&#xA0;See <a href=\"#case\">case</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"active",
      "definition_text":"An active sentence is one which has a basic pattern like the man is running or the dog bit the cat, i.e. it describes what one thing (the subject) does, often to another thing (the object). The verb in an active sentence can be said to be in the active voice. See also passive.",
      "definition_html":"<p><a name=\"active\"><strong class=\"plus\">active</strong></a>&#xA0;&#xA0;An active sentence is one which has a basic pattern like <i class=\"word\">the man is running</i> or <i class=\"word\">the dog bit the cat,</i> i.e. it describes what one thing (the <a href=\"#subject\">subject</a>) does, often to another thing (the <a href=\"#object\">object</a>). The <a href=\"#verb\">verb</a> in an active sentence can be said to be in the active <a href=\"#voice\">voice</a>. See also <a href=\"#passive\">passive</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"adjective",
      "definition_text":"A word which qualifies or further describes a noun or noun phrase. Examples are colourless and green which qualify ideas in Colourless green ideas sleep furiously. Adjectives can also appear after verbs like be, e.g. The apples were green.",
      "definition_html":"<p><a name=\"adjective\"><strong class=\"plus\">adjective</strong></a>&#xA0;&#xA0;A word which qualifies or further describes a <a href=\"#noun\">noun</a> or noun <a href=\"#phrase\">phrase</a>. Examples are <i class=\"word\">colourless</i> and <i class=\"word\">green</i> which qualify <i class=\"word\">ideas</i> in <i class=\"word\">Colourless green ideas sleep furiously.</i> Adjectives can also appear after verbs like <i class=\"word\">be</i>, e.g. <i class=\"word\">The apples were green.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"adjunct theta role",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"adjunct_theta_role\"><strong class=\"plus\">adjunct theta-role</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"adverb",
      "definition_text":"A word which qualifies or further describes a verb, adjective or adverb. Examples are furiously which qualifies the verb sleep in Colourless green ideas sleep furiously, or intensely which qualifies stared in He stared at me intensely. Adverbs can also qualify adjectives, e.g. astonishingly qualifies the adjective vivid in an astonishingly vivid colour, or other adverbs, e.g. extremely qualifies the adverb slowly in the phrase extremely slowly. Many English adverbs are formed from an adjective plus the ending -ly. Words like very, which can only qualify adjectives or adverbs but not verbs, are sometimes called adverbs, but are perhaps best put in a separate category.",
      "definition_html":"<p><a name=\"adverb\"><strong class=\"plus\">adverb</strong></a>&#xA0;&#xA0;A word which qualifies or further describes a <a href=\"#verb\">verb</a>, <a href=\"#adjective\">adjective</a> or <a href=\"#adverb\">adverb</a>. Examples are <i class=\"word\">furiously</i> which qualifies the verb <i class=\"word\">sleep</i> in <i class=\"word\">Colourless green ideas sleep furiously,</i> or <i class=\"word\">intensely</i> which qualifies <i class=\"word\">stared</i> in <i class=\"word\">He stared at me intensely.</i> Adverbs can also qualify <a href=\"#adjective\">adjectives</a>, e.g. <i class=\"word\">astonishingly</i> qualifies the adjective <i class=\"word\">vivid</i> in <i class=\"word\">an astonishingly vivid colour,</i> or other adverbs, e.g. <i class=\"word\">extremely</i> qualifies the adverb <i class=\"word\">slowly</i> in the phrase <i class=\"word\">extremely slowly.</i> Many English adverbs are formed from an adjective plus the ending <i class=\"word\">-ly</i>. Words like <i class=\"word\">very,</i> which can only qualify adjectives or adverbs but not verbs, are sometimes called adverbs, but are perhaps best put in a separate category.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"affix",
      "definition_text":"An affix is a morpheme which is added to a root morpheme in the formation of a word. In its broadest sense, an affix can be a prefix, a suffix, or an infix. More narrowly, infixes are sometimes treated separately. See also morphology.",
      "definition_html":"<p><a name=\"affix\"><strong class=\"plus\">affix</strong></a>&#xA0;&#xA0;An affix is a morpheme which is added to a root morpheme in the formation of a word. In its broadest sense, an affix can be a <a href=\"#prefix\">prefix</a>, a <a href=\"#suffix\">suffix</a>, or an <a href=\"#infix\">infix</a>. More narrowly, infixes are sometimes treated separately. See also <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"affricative",
      "definition_text":"An affricative is a phone which can be thought of as a very rapid, blended sequence of a stop and a fricative. The stop and fricative must be produced in a very similar positions in the mouth. An English example is the 'ch sound' in choose, which is like a sequence of a 't sound' (a stop) and a 'sh sound' (a fricative). The phrases white shoes and why choose? sound very similar when spoken rapidly (but only in those dialects of English in which the [t] is not replaced by a glottal stop). In the IPA an affricative is represented by the corresponding stop symbol followed by the fricative symbol. It is important to note that the two symbols represent a SINGLE phone.",
      "definition_html":"<p><a name=\"affricative\"><strong class=\"plus\">affricative</strong></a>&#xA0;&#xA0;An affricative is a <a href=\"#phone\">phone</a> which can be thought of as a very rapid, blended sequence of a <a href=\"#stop\">stop</a> and a <a href=\"#fricative\">fricative</a>. The stop and fricative must be produced in a very similar positions in the mouth. An English example is the &apos;ch sound&apos; in <i class=\"word\">choose,</i> which is like a sequence of a &apos;t sound&apos; (a stop) and a &apos;sh sound&apos; (a fricative). The phrases <i class=\"word\">white shoes</i> and <i class=\"word\">why choose?</i> sound very similar when spoken rapidly (but only in those <a href=\"#dialect\">dialects</a> of English in which the [t] is not replaced by a <a href=\"#glottal\">glottal</a> <a href=\"#stop\">stop</a>). In the <a href=\"#IPA\">IPA</a> an affricative is represented by the corresponding stop symbol followed by the fricative symbol. It is important to note that the two symbols represent a SINGLE phone.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"Agent",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"agent\"><strong class=\"plus\">Agent</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"agreement",
      "definition_text":"The syntax of a natural language often requires some words in a sentence to share certain grammatical features, which can show up as changes in the morphology of the words. This is called agreement; the words are said to agree in the relevant feature(s). For example, in English, determiners and nouns must agree in number within a noun phrase. Thus this cat is acceptable since this and cat are singular, but these cat is unacceptable since these is plural but cat is singular.",
      "definition_html":"<p><a name=\"agreement\"><strong class=\"plus\">agreement</strong></a>&#xA0;&#xA0;The <a href=\"#syntax\">syntax</a> of a <a href=\"#natural_language\">natural language</a> often requires some words in a sentence to share certain grammatical features, which can show up as changes in the <a href=\"#morphology\">morphology</a> of the words. This is called agreement; the words are said to agree in the relevant feature(s). For example, in English, <a href=\"#determiner\">determiners</a> and <a href=\"#noun\">nouns</a> must agree in <a href=\"#number\">number</a> within a noun <a href=\"#phrase\">phrase</a>. Thus<i class=\"word\"> this cat</i> is acceptable since <i class=\"word\">this</i> and <i class=\"word\">cat</i> are <a href=\"#number\">singular</a>, but <i class=\"word\">these cat</i> is unacceptable since <i class=\"word\">these</i> is <a href=\"#number\">plural</a> but <i class=\"word\">cat</i> is singular.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"allophone",
      "definition_text":"Each of the set of phones which correspond to a single phoneme of a language is called an allophone. Allophones of the same phoneme generally occur in different contexts and never distinguish one word from another. As an example, the 't sounds' in tea and tree constitute allophones of one English /t/ phoneme. The production of the two sounds differs in that speaker's tongue is in a slightly different place. A speech spectrograph will show a resulting sound difference. However, no English words differ ONLY in the substitution of one of these 't sounds' for the other. Allophones are written in square brackets (e.g. [t]) where it is necessary to distinguish them from phonemes (e.g. /t/).",
      "definition_html":"<p><a name=\"allophone\"><strong class=\"plus\">allophone</strong></a>&#xA0;&#xA0;Each of the set of <a href=\"#phone\">phones</a> which correspond to a single <a href=\"#phoneme\">phoneme</a> of a language is called an allophone. Allophones of the same phoneme generally occur in different contexts and never distinguish one word from another. As an example, the &apos;t sounds&apos; in <i class=\"word\">tea</i> and <i class=\"word\">tree</i> constitute allophones of one English /t/ phoneme. The production of the two sounds differs in that speaker&apos;s tongue is in a slightly different place. A speech spectrograph will show a resulting sound difference. However, no English words differ ONLY in the substitution of one of these &apos;t sounds&apos; for the other. Allophones are written in square brackets (e.g. [t]) where it is necessary to distinguish them from phonemes (e.g. /t/).</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"alveolar",
      "definition_text":"A phone produced when the tongue touches the tooth ridge behind the teeth (alveolus). See the diagram of a head for the location of the tooth ridge. The 't sound' in English is an alveolar stop, produced by stopping and then releasing the air flow out of the mouth by closing the tongue onto the tooth ridge.",
      "definition_html":"<p><a name=\"alveolar\"><strong class=\"plus\">alveolar</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced when the tongue touches the tooth ridge behind the teeth (alveolus). See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a> for the location of the tooth ridge. The &apos;t sound&apos; in English is an alveolar <a href=\"#stop\">stop</a>, produced by stopping and then releasing the air flow out of the mouth by closing the tongue onto the tooth ridge.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"anaphora",
      "definition_text":"Some words in a sentence have little or no meaning of their own but instead refer to other words in the same or other sentences. This process is called anaphora. Pronouns are a good example. Consider the sentences: London had snow yesterday. It fell to a depth of a metre. To understand the second sentence it is necessary to identify it with snow rather than London or yesterday. English allows various forms of anaphora with verbs. For example, in I wanted to finish today, but I couldn't do it, the words do it refer to finish today and hence can be called anaphoric.",
      "definition_html":"<p><a name=\"anaphora\"><strong class=\"plus\">anaphora</strong></a>&#xA0;&#xA0;Some words in a sentence have little or no meaning of their own but instead refer to other words in the same or other sentences. This process is called anaphora. <a href=\"#pronoun\">Pronouns</a> are a good example. Consider the sentences: <i class=\"word\">London had snow yesterday. It fell to a depth of a metre.</i> To understand the second sentence it is necessary to identify <i class=\"word\">it</i> with <i class=\"word\">snow</i> rather than <i class=\"word\">London</i> or <i class=\"word\">yesterday.</i> English allows various forms of anaphora with <a href=\"#verb\">verbs</a>. For example, in <i class=\"word\">I wanted to finish today, but I couldn&apos;t do it,</i> the words <i class=\"word\">do it</i> refer to <i class=\"word\">finish today</i> and hence can be called anaphoric.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"approximant",
      "definition_text":"An approximant is a phone in which the tongue partly closes the airway, but not enough to cause a fricative. Examples in English are the phones that begin lap and woo. Approximants can be divided into liquids and glides. Approximants (especially glides) have some similarities to vowels.",
      "definition_html":"<p><a name=\"approximant\"><strong class=\"plus\">approximant</strong></a>&#xA0;&#xA0;An approximant is a <a href=\"#phone\">phone</a> in which the tongue partly closes the airway, but not enough to cause a <a href=\"#fricative\">fricative</a>. Examples in English are the phones that begin <i class=\"word\">lap</i> and <i class=\"word\">woo.</i> Approximants can be divided into <a href=\"#liquid\">liquids</a> and <a href=\"#glide\">glides</a>. Approximants (especially glides) have some similarities to <a href=\"#vowel\">vowels</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"argument theta role",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"argument_theta_role\"><strong class=\"plus\">argument theta-role</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"article",
      "definition_text":"In English, a / an and the are called the indefinite and definite articles respectively. See also determiner.",
      "definition_html":"<p><a name=\"article\"><strong class=\"plus\">article</strong></a>&#xA0;&#xA0;In English, <i class=\"word\">a</i> / <i class=\"word\">an</i> and <i class=\"word\">the</i> are called the indefinite and definite articles respectively. See also <a href=\"#determiner\">determiner</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"aspect",
      "definition_text":"(of a verb)  Verbs can show not only the time location of an action (by grammatical tense), but also features such as whether the action is thought of as completed or continuing. A change in a verb which shows such a feature is often called an aspect of the verb. Compare ate with was eating in He ate rapidly when I came in and He was eating rapidly when I came in. Both refer to events in the past time; the difference lies in the implied relationship between the actions of 'eating' and 'coming in'. Syntactically, English has two marked aspects: progressive and perfect. The progressive aspect is formed by using the auxiliary be and the verb ending -ing. For example, I am eating it now implies both that the time is the present and that the 'eating' is currently in progress. The perfect aspect is formed by using the auxiliary have and the appropriate verb ending (usually -en or -ed): e.g. I have eaten it now, which implies both that the time is the present and that the 'eating' is finished. An English verb can show no aspect (e.g. runs or ran), progressive aspect (e.g. is running or was running), perfect aspect (e.g. has run or had run) or both perfect and progressive aspects (e.g. has been running or had been running). The table below shows the possible combinations of tense and aspect in English verbs.",
      "definition_html":"<p><a name=\"aspect\"><strong class=\"plus\">aspect</strong></a> (of a <a href=\"#verb\">verb</a>)&#xA0;&#xA0;Verbs can show not only the time location of an action (by grammatical <a href=\"#tense\">tense</a>), but also features such as whether the action is thought of as completed or continuing. A change in a verb which shows such a feature is often called an aspect of the verb. Compare <i class=\"word\">ate</i> with <i class=\"word\">was eating</i> in <i class=\"word\">He ate rapidly when I came in</i> and <i class=\"word\">He was eating rapidly when I came in.</i> Both refer to events in the past time; the difference lies in the implied relationship between the actions of &apos;eating&apos; and &apos;coming in&apos;. Syntactically, English has two marked aspects: progressive and perfect. The progressive aspect is formed by using the <a href=\"#auxiliary\">auxiliary</a> <i class=\"word\">be</i> and the verb ending <i class=\"word\">-ing.</i> For example, <i class=\"word\">I am eating it now</i> implies both that the time is the present and that the &apos;eating&apos; is currently in progress. The perfect aspect is formed by using the auxiliary <i class=\"word\">have</i> and the appropriate verb ending (usually <i class=\"word\">-en</i> or <i class=\"word\">-ed</i>): e.g. <i class=\"word\">I have eaten it now,</i> which implies both that the time is the present and that the &apos;eating&apos; is finished. An English verb can show no aspect (e.g. <i class=\"word\">runs</i> or <i class=\"word\">ran</i>), progressive aspect (e.g. <i class=\"word\">is running</i> or <i class=\"word\">was running</i>), perfect aspect (e.g. <i class=\"word\">has run</i> or <i class=\"word\">had run</i>) or both perfect and progressive aspects (e.g. <i class=\"word\">has been running</i> or <i class=\"word\">had been running</i>). The table below shows the possible combinations of <a href=\"#tense\">tense</a> and aspect in English verbs.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"aspiration",
      "definition_text":"If a phone is accompanied by a 'puff of air' it can be said to be aspirated. The 'p sound' in the English word pit is aspirated and is thus slightly different from the 'p sound' in spit, which is not aspirated.",
      "definition_html":"<p><a name=\"aspiration\"><strong class=\"plus\">aspiration</strong></a>&#xA0;&#xA0;If a <a href=\"#phone\">phone</a> is accompanied by a &apos;puff of air&apos; it can be said to be aspirated. The &apos;p sound&apos; in the English word <i class=\"word\">pit</i> is aspirated and is thus slightly different from the &apos;p sound&apos; in <i class=\"word\">spit,</i> which is not aspirated.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"assimilation",
      "definition_text":"Particularly in rapid speech there is a tendency for neighbouring phones to become more similar, presumably to make pronunciation easier. For example, although the words Aston and Asda are both written with an s, the second word is normally pronounced as if spelt Azda. The reason seems to be that [s] and [t] are both voiceless, whereas [z] and [d] are both voiced. The sequence fricative followed by stop is easier to say if both have the same voicing.",
      "definition_html":"<p><a name=\"assimilation\"><strong class=\"plus\">assimilation</strong></a>&#xA0;&#xA0;Particularly in rapid speech there is a tendency for neighbouring <a href=\"#phone\">phones</a> to become more similar, presumably to make pronunciation easier. For example, although the words <i class=\"word\">Aston</i> and <i class=\"word\">Asda</i> are both written with an s, the second word is normally pronounced as if spelt <i class=\"word\">Azda.</i> The reason seems to be that [s] and [t] are both <a href=\"#voicing\">voiceless</a>, whereas [z] and [d] are both <a href=\"#voicing\">voiced</a>. The sequence <a href=\"#fricative\">fricative</a> followed by <a href=\"#stop\">stop</a> is easier to say if both have the same voicing.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"ATN",
      "definition_text":"= Augmented Transition Network.",
      "definition_html":"<p><a name=\"ATN\"><strong class=\"plus\">ATN</strong></a> = Augmented Transition Network.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"auxiliary",
      "definition_text":"In English, one of a small set of verb-like words which can precede a main verb in a verb phrase. The auxiliaries and verbs are sometimes said to form a 'verb group' or 'compound verb'. Examples of auxiliaries are do in I really do not know, or may in I may see him tomorrow. Auxiliaries have verb-like properties, and may show changes in number, person and tense. Some words (e.g. have) can be either an auxiliary (e.g. I have seen him) or a verb (e.g. I have a car).",
      "definition_html":"<p><a name=\"auxiliary\"><strong class=\"plus\">auxiliary</strong></a>&#xA0;&#xA0;In English, one of a small set of verb-like words which can precede a main <a href=\"#verb\">verb</a> in a verb <a href=\"#phrase\">phrase</a>. The auxiliaries and verbs are sometimes said to form a &apos;verb group&apos; or &apos;compound verb&apos;. Examples of auxiliaries are <i class=\"word\">do</i> in <i class=\"word\">I really do not know,</i> or <i class=\"word\">may</i> in <i class=\"word\">I may see him tomorrow.</i> Auxiliaries have verb-like properties, and may show changes in number, person and tense. Some words (e.g. <i class=\"word\">have</i>) can be either an auxiliary (e.g. <i class=\"word\">I have seen him</i>) or a verb (e.g. <i class=\"word\">I have a car</i>).</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"bilabial",
      "definition_text":"A phone produced by the closure or partial closure of both lips. See the diagram of a head. The English sounds represented by the letters p in pit and b in bad are bilabial stops, produced by stopping and then releasing the air flow out of the mouth by closing the lips. Bilabial and labiodental phones are together classed as labial.",
      "definition_html":"<p><a name=\"bilabial\"><strong class=\"plus\">bilabial</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced by the closure or partial closure of both lips. See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a>. The English sounds represented by the letters <i class=\"word\">p</i> in <i class=\"word\">pit</i> and <i class=\"word\">b</i> in <i class=\"word\">bad</i> are bilabial <a href=\"#stop\">stops,</a> produced by stopping and then releasing the air flow out of the mouth by closing the lips. Bilabial and <a href=\"#labiodental\">labiodental</a> phones are together classed as <strong>labial</strong>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"case",
      "definition_text":"Nouns, noun phrases and pronouns play different syntactic roles in sentences. These roles correspond to changes of case in many languages. Consider, for example, the sentences She saw him and He saw her. The words she and he are used when they form the subject of the sentence and are said to be in the nominative case. She and he must be changed to her and him respectively when they form the object of the sentence and are said to be in the accusative case. Changes due to case are restricted to pronouns in English, but in other languages (e.g. Russian, Modern Greek), most nouns, pronouns, articles, adjectives, etc. will vary according to case.",
      "definition_html":"<p><a name=\"case\"><strong class=\"plus\">case</strong></a>&#xA0;&#xA0;<a href=\"#noun\">Nouns</a>, noun <a href=\"#phrase\">phrases</a> and <a href=\"#pronoun\">pronouns</a> play different syntactic roles in sentences. These roles correspond to changes of case in many languages. Consider, for example, the sentences <i class=\"word\">She saw him</i> and <i class=\"word\">He saw her.</i> The words <i class=\"word\">she</i> and <i class=\"word\">he</i> are used when they form the <a href=\"#subject\">subject</a> of the sentence and are said to be in the <strong>nominative</strong> case. <i class=\"word\">She</i> and <i class=\"word\">he</i> must be changed to <i class=\"word\">her</i> and <i class=\"word\">him</i> respectively when they form the <a href=\"#object\">object</a> of the sentence and are said to be in the <strong>accusative</strong> case. Changes due to case are restricted to pronouns in English, but in other languages (e.g. Russian, Modern Greek), most nouns, pronouns, articles, adjectives, etc. will vary according to case.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"circumstantial theta role",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"circumstantial_theta_role\"><strong class=\"plus\">circumstantial theta-role</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"consonant",
      "definition_text":"(1) A phone which is produced other by allowing lung air to pass over the vibrating vocal cords and then freely out of the mouth, i.e. a phone other than a vowel. Consonants include stops, fricatives, affricatives and approximants.  (2) A letter of the alphabet usually pronounced using a consonant phone is also called a consonant. Be careful to distinguish these two usages. In a language with non-phonemic spelling, such as English, they can be quite different. The word mute, for example, begins with a single consonant letter, but in many British English dialects is pronounced with two opening consonant phones ([m] and [j] in IPA).",
      "definition_html":"<div><p><a name=\"consonant\"><strong class=\"plus\">consonant</strong></a>&#xA0;&#xA0;(1) A <a href=\"#phone\">phone</a> which is produced other by allowing lung air to pass over the vibrating vocal cords and then freely out of the mouth, i.e. a phone other than a <a href=\"#vowel\">vowel</a>. Consonants include <a href=\"#stop\">stops</a>, <a href=\"#fricative\">fricatives</a>, <a href=\"#affricatives\">affricatives</a> and <a href=\"#approximants\">approximants</a>.  (2) A letter of the alphabet usually pronounced using a consonant phone is also called a consonant.</p>Be careful to distinguish these two usages. In a language with non-phonemic spelling, such as English, they can be quite different. The word <i class=\"word\">mute,</i> for example, begins with a single consonant letter, but in many British English dialects is pronounced with two opening consonant phones ([m] and [j] in <a href=\"#IPA\">IPA</a>).</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"dental",
      "definition_text":"A phone produced when the tongue touches the teeth. See the diagram of a head. The English sounds beginning the words this and think are alveolar fricatives, produced by partially stopping the air flow out of the mouth by touching the tongue on the teeth.",
      "definition_html":"<p><a name=\"dental\"><strong class=\"plus\">dental</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced when the tongue touches the teeth. See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a>. The English sounds beginning the words <i class=\"word\">this</i> and <i class=\"word\">think</i> are alveolar <a href=\"#fricative\">fricatives,</a> produced by partially stopping the air flow out of the mouth by touching the tongue on the teeth.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"derivational morphology",
      "definition_text":"See morphology.",
      "definition_html":"<p><a name=\"derivational_morphology\"><strong class=\"plus\">derivational morphology</strong></a>&#xA0;&#xA0;See <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"determiner",
      "definition_text":"(det)  The definite and indefinite articles plus a small set of other similar words (e.g. genitive pronouns) which qualify nouns or noun phrases can be grouped as determiners. Examples of determiners are this, that, my. An English noun phrase always contains at most one determiner; singular noun phrases generally require exactly one determiner. Semantically, they determine that a particular instance of the noun is being referred (back) to. For example, There's a man at the door -- the word a introduces a man into the conversation. Tell the man I'll come in a minute -- the word the refers back to the previously mentioned man. Noun phrases in the genitive act as determiners. Thus in I saw the old lady's cat, the genitive noun phrase the old lady's can be replaced by the single word determiner her.",
      "definition_html":"<div><p><a name=\"determiner\"><strong class=\"plus\">determiner</strong></a> (det)&#xA0;&#xA0;The definite and indefinite <a href=\"#article\">articles</a> plus a small set of other similar words (e.g. <a href=\"#genitive\">genitive</a> <a href=\"#pronoun\">pronouns</a>) which qualify <a href=\"#noun\">nouns</a> or noun <a href=\"#phrase\">phrases</a> can be grouped as determiners. Examples of determiners are <i class=\"word\">this</i>, <i class=\"word\">that</i>, <i class=\"word\">my</i>. An English noun phrase always contains at most one determiner; <a href=\"#number\">singular</a> noun phrases generally require exactly one determiner. Semantically, they determine that a particular instance of the noun is being referred (back) to. For example, <i class=\"word\">There&apos;s a man at the door</i> -- the word <i class=\"word\">a</i> introduces a man into the conversation. <i class=\"word\">Tell the man I&apos;ll come in a minute</i> -- the word <i class=\"word\">the</i> refers back to the previously mentioned man.</p>Noun phrases in the genitive act as determiners. Thus in <i class=\"word\">I saw the old lady&apos;s cat</i>, the genitive noun phrase <i class=\"word\">the old lady&apos;s</i> can be replaced by the single word determiner <i class=\"word\">her</i>.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"dialect",
      "definition_text":"Generally dialects of a language are more similar than different languages. However, what is a dialect and what is a language is often a political rather than a linguistic question. The division of Serbo-Croat, the common language of former Yugoslavia, into two languages, Serbian and Croatian, shows this rather sharply. A further example of very similar languages which might be called dialects of the same language are Dutch (spoken in the Netherlands) and Flemish (spoken in north-western Belgium). On the other hand, in China there are languages which are mutually un-intelligible when spoken but are often called dialects of one Chinese language. It is important to note that although some dialects have more social prestige in a country than others, this says nothing about their linguistic qualities.",
      "definition_html":"<p><a name=\"dialect\"><strong class=\"plus\">dialect</strong></a>&#xA0;&#xA0;Generally dialects of a language are more similar than different languages. However, what is a dialect and what is a language is often a political rather than a linguistic question. The division of Serbo-Croat, the common language of former Yugoslavia, into two languages, Serbian and Croatian, shows this rather sharply. A further example of very similar languages which might be called dialects of the same language are Dutch (spoken in the Netherlands) and Flemish (spoken in north-western Belgium). On the other hand, in China there are languages which are mutually un-intelligible when spoken but are often called dialects of one Chinese language. It is important to note that although some dialects have more social prestige in a country than others, this says nothing about their linguistic qualities.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"diphthong",
      "definition_text":"If the tongue moves significantly during the production of a vowel phone, the result is a diphthong. A diphthong sounds like a rapid, blended sequence of two separate vowels. An example in English is the vowel sound in the word kite, which is like a rapid combination of a kind of 'a sound' and a kind of 'i sound'. In the IPA a diphthong is represented by two vowel symbols. It is important to note that the two symbols represent a SINGLE phone.",
      "definition_html":"<p><a name=\"diphthong\"><strong class=\"plus\">diphthong</strong></a>&#xA0;&#xA0;If the tongue moves significantly during the production of a <a href=\"#vowel\">vowel</a> <a href=\"#phone\">phone</a>, the result is a diphthong. A diphthong sounds like a rapid, blended sequence of two separate vowels. An example in English is the vowel sound in the word <i class=\"word\">kite,</i> which is like a rapid combination of a kind of &apos;a sound&apos; and a kind of &apos;i sound&apos;. In the <a href=\"#IPA\">IPA</a> a diphthong is represented by two vowel symbols. It is important to note that the two symbols represent a SINGLE phone.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"direct object",
      "definition_text":"See object.",
      "definition_html":"<p><a name=\"direct_object\"><strong class=\"plus\">direct object</strong></a>&#xA0;&#xA0;See <a href=\"#object\">object</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"ellipsis",
      "definition_text":"A technical term for leaving out words in sentences. For example, in Brian ate the ice-cream and Judy the peaches, there is ellipsis, since the word ate is omitted after Judy.",
      "definition_html":"<p><a name=\"ellipsis\"><strong class=\"plus\">ellipsis</strong></a>&#xA0;&#xA0;A technical term for leaving out words in sentences. For example, in <i class=\"word\">Brian ate the ice-cream and Judy the peaches,</i> there is ellipsis, since the word <i class=\"word\">ate</i> is omitted after <i class=\"word\">Judy.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"feature",
      "definition_text":"See semantic feature. (There are other uses of the term not covered here.)",
      "definition_html":"<p><a name=\"feature\"><strong class=\"plus\">feature</strong></a>&#xA0;&#xA0;See <a href=\"#semantic_feature\">semantic feature</a>. (There are other uses of the term not covered here.)</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"feminine",
      "definition_text":"See gender.",
      "definition_html":"<p><a name=\"feminine\"><strong class=\"plus\">feminine</strong></a>&#xA0;&#xA0;See <a href=\"#gender\">gender</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"fricative",
      "definition_text":"If during the production of a phone, air is made to pass through a narrow passage, a 'friction' sound or fricative is produced (i.e. a more-or-less 'hissing' sound). English examples are the 'f sound' in fee or the 'sh sound' in she.",
      "definition_html":"<p><a name=\"fricative\"><strong class=\"plus\">fricative</strong></a>&#xA0;&#xA0;If during the production of a <a href=\"#phone\">phone</a>, air is made to pass through a narrow passage, a &apos;friction&apos; sound or fricative is produced (i.e. a more-or-less &apos;hissing&apos; sound). English examples are the &apos;f sound&apos; in <i class=\"word\">fee</i> or the &apos;sh sound&apos; in <i class=\"word\">she.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"gender",
      "definition_text":"In some languages (but not English), nouns fall into a small number of classes which require changes in the articles, adjectives, etc. which qualify them. In Indo-European languages, these classes are traditionally called genders and labelled according to whether nouns for males (masculine gender), females (feminine gender) or neither (neuter gender) fall into these classes. French has two genders, masculine and feminine, shown for example by the use of le or la for the; German and Modern Greek have three genders, having neuter as well. Note that grammatical gender is not tied to biological sex, since, for example, the nouns meaning 'a young girl' are neuter in both German and Modern Greek. Thus as with number, grammatical gender is not the same as semantic gender.",
      "definition_html":"<p><a name=\"gender\"><strong class=\"plus\">gender</strong></a>&#xA0;&#xA0;In some languages (but not English), <a href=\"#noun\">nouns</a> fall into a small number of classes which require changes in the <a href=\"#article\">articles</a>, <a href=\"#adjective\">adjectives</a>, etc. which qualify them. In Indo-European languages, these classes are traditionally called genders and labelled according to whether nouns for males (masculine gender), females (feminine gender) or neither (neuter gender) fall into these classes. French has two genders, masculine and feminine, shown for example by the use of <i class=\"word\">le</i> or <i class=\"word\">la</i> for <i class=\"word\">the</i>; German and Modern Greek have three genders, having neuter as well. Note that grammatical gender is not tied to biological sex, since, for example, the nouns meaning &apos;a young girl&apos; are neuter in both German and Modern Greek. Thus as with <a href=\"#number\">number</a>, grammatical gender is not the same as semantic gender.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"genitive",
      "definition_text":"See also case. Genitive is an alternative word for possessive, i.e. the genitive case marks the noun or pronoun as the possessor of something. In English, the genitive case of a noun is shown in writing by adding an s together with an appropriately positioned apostrophe. Thus of the boy becomes boy's, of the boys becomes boys'. The genitive or possessive pronouns are my, your, his, her, its [without an apostrophe!], our, their. Genitive noun phrases act as determiners.",
      "definition_html":"<p><a name=\"genitive\"><strong class=\"plus\">genitive</strong></a>&#xA0;&#xA0;See also <a href=\"#case\">case</a>. Genitive is an alternative word for possessive, i.e. the genitive case marks the <a href=\"#noun\">noun</a> or <a href=\"#pronoun\">pronoun</a> as the possessor of something. In English, the genitive case of a noun is shown in writing by adding an <i class=\"word\">s</i> together with an appropriately positioned apostrophe. Thus <i class=\"word\">of the boy</i> becomes <i class=\"word\">boy&apos;s,</i> <i class=\"word\">of the boys</i> becomes <i class=\"word\">boys&apos;.</i> The genitive or possessive pronouns are <i class=\"word\">my</i>, <i class=\"word\">your</i>, <i class=\"word\">his</i>, <i class=\"word\">her</i>, <i class=\"word\">its</i> [without an apostrophe!], <i class=\"word\">our</i>, <i class=\"word\">their</i>. Genitive noun phrases act as <a href=\"#determiner\">determiners</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"glide",
      "definition_text":"A glide is an approximant in which the tongue and lips move during the production of the sound. English examples are the initial phones in woo [w] and you [j].",
      "definition_html":"<p><a name=\"glide\"><strong class=\"plus\">glide</strong></a>&#xA0;&#xA0;A glide is an <a href=\"#approximant\">approximant</a> in which the tongue and lips move during the production of the sound. English examples are the initial phones in <i class=\"word\">woo</i> [w] and <i class=\"word\">you</i> [j].</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"glottal",
      "definition_text":"A phone produced by closing or partially closing the vocal cords (or glottis). See the diagram of a head for the location of the vocal cords. The 'h sound' in English is a glottal fricative, produced by a strong air flow over partially open vocal cords.",
      "definition_html":"<p><a name=\"glottal\"><strong class=\"plus\">glottal</strong></a>&#xA0;&#xA0;A phone produced by closing or partially closing the vocal cords (or glottis). See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a> for the location of the vocal cords. The &apos;h sound&apos; in English is a glottal <a href=\"#fricative\">fricative</a>, produced by a strong air flow over partially open vocal cords.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"grammar (1)",
      "definition_text":"The word grammar is used as a collective word for morphology and syntax, i.e. for patterns both within and between words.",
      "definition_html":"<p><a name=\"grammar2\"><strong class=\"plus\">grammar (1)</strong></a>&#xA0;&#xA0;The word grammar is used as a collective word for <a href=\"#morphology\">morphology</a> and <a href=\"#syntax\">syntax</a>, i.e. for patterns both within and between words.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"grammar (2)",
      "definition_text":"The word grammar is also used a technical term for a rule-based approach which generates a particular set of sentences. Formally, a grammar consists of a set of nonterminal symbols (one of which is the start symbol), a set of terminal symbols and a set of productions or re-writing rules. Terminals  (e.g. words) are the basic units of the sentences which the grammar generates. Nonterminals are symbols used only in the grammar itself. A production is a rule which says that the symbols on the left-hand side can be re-written as those on the right-hand side. One of the nonterminals must be the start symbol, i.e. the symbol from which re-writing starts.",
      "definition_html":"<p><a name=\"grammar1\"><strong class=\"plus\">grammar (2)</strong></a>&#xA0;&#xA0;The word grammar is also used a technical term for a rule-based approach which generates a particular set of sentences. Formally, a grammar consists of a set of <strong>nonterminal</strong> symbols (one of which is the<strong> start symbol</strong>), a set of <strong>terminal</strong> symbols and a set of <strong>productions</strong> or re-writing rules. Terminals  (e.g. words) are the basic units of the sentences which the grammar generates. Nonterminals are symbols used only in the grammar itself. A production is a rule which says that the symbols on the left-hand side can be re-written as those on the right-hand side. One of the nonterminals must be the start symbol, i.e. the symbol from which re-writing starts.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"grapheme",
      "definition_text":"A grapheme is a 'spelling unit'. For example, in Spanish the combination ll represents a different sound from a single l. Thus these are two graphemes. In English, graphemes may be quite complex. For example -tion behaves more-or-less as a single grapheme in words like function.",
      "definition_html":"<p><a name=\"grapheme\"><strong class=\"plus\">grapheme</strong></a>&#xA0;&#xA0;A grapheme is a &apos;spelling unit&apos;. For example, in Spanish the combination <i class=\"word\">ll</i> represents a different sound from a single <i class=\"word\">l.</i> Thus these are two graphemes. In English, graphemes may be quite complex. For example <i class=\"word\">-tion</i> behaves more-or-less as a single grapheme in words like <i class=\"word\">function.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"idiolect",
      "definition_text":"The language used by one individual is sometimes called an idiolect. A dialect or language can then be regarded as a collection of mutually intelligible idiolects.",
      "definition_html":"<p><a name=\"idiolect\"><strong class=\"plus\">idiolect</strong></a>&#xA0;&#xA0;The language used by one individual is sometimes called an idiolect. A <a href=\"#dialect\">dialect</a> or language can then be regarded as a collection of mutually intelligible idiolects.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"indirect object",
      "definition_text":"See object.",
      "definition_html":"<p><a name=\"indirect_object\"><strong class=\"plus\">indirect object</strong></a>&#xA0;&#xA0;See <a href=\"#object\">object</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"Indo European",
      "definition_text":"Linguists divide languages into a number of families, based on similarity and shared descent. Indo-European languages were natively spoken in a broad band through Europe to northern India and Bangladesh. Historically, the only major non-Indo-European languages spoken in this area were Finnish/Estonian, Hungarian, Basque and Turkish. It is believed that all the Indo-European languages are descended from one language spoken around 4,000 BC. It is important to be aware that different language families may be based on quite different principles, both in their sounds and in their grammar.",
      "definition_html":"<p><a name=\"Indo-European\"><strong class=\"plus\">Indo-European</strong></a>&#xA0;&#xA0;Linguists divide languages into a number of families, based on similarity and shared descent. Indo-European languages were natively spoken in a broad band through Europe to northern India and Bangladesh. Historically, the only major non-Indo-European languages spoken in this area were Finnish/Estonian, Hungarian, Basque and Turkish. It is believed that all the Indo-European languages are descended from one language spoken around 4,000 BC. It is important to be aware that different language families may be based on quite different principles, both in their sounds and in their <a href=\"#grammar2\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"infix",
      "definition_text":"A strong definition of an infix might be a morpheme which is added inside a root morpheme in the formation of a word. In a language like English, infixes, so defined, do not occur, since the root morpheme is indivisible. In Semitic languages, the root morpheme consists only of consonants -- usually three in, e.g., Arabic or Hebrew. A particular set of vowels and/or affixes combines with this root to form a word. Thus in Hebrew the root sgr has a basic meaning connected with \"close\" or \"closed\". Adding the vowels -a-a- (where the dashes mark the position of the root consonants) forms the active verb sagar; adding the prefix ni and the vowel --a- forms the passive verb nisgar. The inserted components can be called infixes, so that nisgar = prefix ni + infix --a- + root sgr. A weaker definition of an infix might be one or more morphemes which are added inside a word to form another word. Such infixes are said to occur in English since, in colloquial speech, swear words can be inserted into other words, e.g. I hate this bloody university can become I hate this uni-bloody-versity. In English, such 'infixes' can apparently only be inserted before a stressed syllable. See also morphology.",
      "definition_html":"<div><div><p><a name=\"infix\"><strong class=\"plus\">infix</strong></a>&#xA0;&#xA0;A strong definition of an infix might be a <a href=\"#morpheme\">morpheme</a> which is added inside a root morpheme in the formation of a word. In a language like English, infixes, so defined, do not occur, since the root morpheme is indivisible. In Semitic languages, the root morpheme consists only of <a href=\"#consonant\">consonants</a> -- usually three in, e.g., Arabic or Hebrew. A particular set of <a href=\"#vowel\">vowels</a> and/or <a href=\"#affix\">affixes</a> combines with this root to form a word. Thus in Hebrew the root <i class=\"word\">sgr</i> has a basic meaning connected with &quot;close&quot; or &quot;closed&quot;. Adding the vowels <i class=\"word\">-a-a-</i> (where the dashes mark the position of the root consonants) forms the <a href=\"#active\">active</a> <a href=\"#verb\">verb</a> <i class=\"word\">sagar</i>; adding the <a href=\"#prefix\">prefix</a> <i class=\"word\">ni</i> and the vowel <i class=\"word\">--a-</i> forms the <a href=\"#passive\">passive</a> verb <i class=\"word\">nisgar</i>. The inserted components can be called infixes, so that <i class=\"word\">nisgar</i> = prefix <i class=\"word\">ni</i> + infix <i class=\"word\">--a-</i> + root <i class=\"word\">sgr</i>.</p>A weaker definition of an infix might be one or more morphemes which are added inside a word to form another word. Such infixes are said to occur in English since, in colloquial speech, swear words can be inserted into other words, e.g. <i class=\"word\">I hate this bloody university</i> can become <i class=\"word\">I hate this uni-bloody-versity</i>. In English, such &apos;infixes&apos; can apparently only be inserted before a stressed syllable.</div>See also <a href=\"#morphology\">morphology</a>.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"inflectional morphology",
      "definition_text":"See inflection and morphology.",
      "definition_html":"<p><a name=\"inflectional_morphology\"><strong class=\"plus\">inflectional morphology</strong></a>&#xA0;&#xA0;See <a href=\"#inflection\">inflection</a> and <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"inflection",
      "definition_text":"A grammatical change in the form of a word (more accurately of a lexeme), which leaves the 'base meaning' and the grammatical category of the word unchanged. In English, inflections are restricted to the endings of words (i.e. suffixes). Other languages may show changes elsewhere. As an example, the suffix s is the usual written plural inflection in English. Inflections in nouns may show changes of number, gender, case, etc.; in verbs, of number, person, tense, aspect, etc. See also morphology.",
      "definition_html":"<p><a name=\"inflection\"><strong class=\"plus\">inflection</strong></a>&#xA0;&#xA0;A grammatical change in the form of a word (more accurately of a <a href=\"#lexeme\">lexeme</a>), which leaves the &apos;base meaning&apos; and the grammatical category of the word unchanged. In English, inflections are restricted to the endings of words (i.e. <a href=\"#suffix\">suffixes</a>). Other languages may show changes elsewhere. As an example, the suffix <i class=\"word\">s</i> is the usual written plural inflection in English. Inflections in nouns may show changes of <a href=\"#number\">number</a>, <a href=\"#gender\">gender</a>, <a href=\"#case\">case</a>, etc.; in verbs, of <a href=\"#number\">number</a>, <a href=\"#person\">person</a>, <a href=\"#tense\">tense</a>, <a href=\"#aspect\">aspect</a>, etc. See also <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"intonation",
      "definition_text":"Intonation refers to changes in the tone or frequency of sounds during speech. For example, in English the tone usually falls at the end of a statement and rises at the end of a question, so that You want some coffee. and You want some coffee? can be distinguished by tone alone. In some languages (e.g. Chinese, Thai), sequences containing the same phones but with different intonation patterns correspond to different words.",
      "definition_html":"<p><a name=\"intonation\"><strong class=\"plus\">intonation</strong></a>&#xA0;&#xA0;Intonation refers to changes in the tone or frequency of sounds during speech. For example, in English the tone usually falls at the end of a statement and rises at the end of a question, so that <i class=\"word\">You want some coffee.</i> and <i class=\"word\">You want some coffee?</i> can be distinguished by tone alone. In some languages (e.g. Chinese, Thai), sequences containing the same phones but with different intonation patterns correspond to different words.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"IPA",
      "definition_text":"The International Phonetic Alphabet or IPA is a set of symbols which can be used to represent the phones and phonemes of natural languages. A subset which can be used to represent 'Standard English English' (roughly the dialect of middle-class people from the south east of England) is given in a separate table.",
      "definition_html":"<p><a name=\"IPA\"><strong class=\"plus\">IPA</strong></a>&#xA0;&#xA0;The International Phonetic Alphabet or IPA is a set of symbols which can be used to represent the <a href=\"#phone\">phones</a> and <a href=\"#phoneme\">phonemes</a> of natural languages. A subset which can be used to represent &apos;Standard English English&apos; (roughly the dialect of middle-class people from the south east of England) is given in a separate <a href=\"nlpipa.html\">table</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"labial",
      "definition_text":"Bilabial and labiodental phones are together classed as labial.",
      "definition_html":"<p><a name=\"labial\"><strong class=\"plus\">labial</strong></a>&#xA0;&#xA0;<a href=\"#bilabial\">Bilabial </a>and <a href=\"#labiodental\">labiodental</a> phones are together classed as labial.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"labiodental",
      "definition_text":"A phone produced by the partial closure of the lower lip on the upper teeth. See the diagram of a head. The English sounds represented by the letters f in fit and v in van are labiodental fricatives, produced by restricting the air flow out of the mouth by touching the lower lip on the upper teeth. Bilabial and labiodental phones are together classed as labial.",
      "definition_html":"<p><a name=\"labiodental\"><strong class=\"plus\">labiodental</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced by the partial closure of the lower lip on the upper teeth. See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a>. The English sounds represented by the letters <i class=\"word\">f</i> in <i class=\"word\">fit</i> and <i class=\"word\">v</i> in <i class=\"word\">van</i> are labiodental <a href=\"#fricative\">fricatives,</a> produced by restricting the air flow out of the mouth by touching the lower lip on the upper teeth. <a href=\"#bilabial\">Bilabial </a>and labiodental phones are together classed as <strong>labial</strong>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"language",
      "definition_text":"See natural language and dialect.",
      "definition_html":"<p><a name=\"language\"><strong class=\"plus\">language</strong></a>&#xA0;&#xA0;See <a href=\"#natural_language\">natural language</a> and <a href=\"#dialect\">dialect</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"length",
      "definition_text":"Length refers to the time duration of a phone. The English words beat and bead differ the length of the vowel as well as the voicing of the terminal stop; the vowel is longer in bead than in beat. In some languages the length of consonants may also be important.",
      "definition_html":"<p><a name=\"length\"><strong class=\"plus\">length</strong></a>&#xA0;&#xA0;Length refers to the time duration of a <a href=\"#phone\">phone</a>. The English words <i class=\"word\">beat</i> and <i class=\"word\">bead</i> differ the length of the <a href=\"#vowel\">vowel</a> as well as the <a href=\"#voicing\">voicing</a> of the terminal <a href=\"#stop\">stop</a>; the vowel is longer in <i class=\"word\">bead</i> than in <i class=\"word\">beat.</i> In some languages the length of <a href=\"#consonant\">consonants</a> may also be important.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"lexeme",
      "definition_text":"The four words eat, eats, eating and eaten are morphological variants of the word eat. The past tense ate is not so obviously morphologically connected to eat, but nevertheless has the same underlying meaning. Thus we may say that the five words eat, eats, eating, eaten and ate form a single lexeme, i.e. a single 'meaning entity'. A dictionary would be expected to contain only one definition for all five words. A lexeme is thus equivalent to what is often called a 'head word' in a dictionary.",
      "definition_html":"<p><a name=\"lexeme\"><strong class=\"plus\">lexeme</strong></a>&#xA0;&#xA0;The four words <i class=\"word\">eat, eats, eating and eaten</i> are <a href=\"#morphology\">morphological</a> variants of the word <i class=\"word\">eat</i>. The past tense <i class=\"word\">ate</i> is not so obviously morphologically connected to <i class=\"word\">eat,</i> but nevertheless has the same underlying meaning. Thus we may say that the five words <i class=\"word\">eat, eats, eating, eaten</i> and <i class=\"word\">ate</i> form a single lexeme, i.e. a single &apos;meaning entity&apos;. A dictionary would be expected to contain only one definition for all five words. A lexeme is thus equivalent to what is often called a &apos;head word&apos; in a dictionary.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"lexicon",
      "definition_text":"Often used as a technical term for the list of words and their types which is used with a grammar.",
      "definition_html":"<p><a name=\"lexicon\"><strong class=\"plus\">lexicon</strong></a>&#xA0;&#xA0;Often used as a technical term for the list of words and their types which is used with a <a href=\"#grammar1\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"liquid",
      "definition_text":"A liquid is a kind of approximant. English examples are the initial phones in lap and rap.",
      "definition_html":"<p><a name=\"liquid\"><strong class=\"plus\">liquid</strong></a>&#xA0;&#xA0;A liquid is a kind of <a href=\"#approximant\">approximant</a>. English examples are the initial <a href=\"#phone\">phones</a> in <i class=\"word\">lap</i> and <i class=\"word\">rap.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"Location",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"location\"><strong class=\"plus\">Location</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"masculine",
      "definition_text":"See gender.",
      "definition_html":"<p><a name=\"masculine\"><strong class=\"plus\">masculine</strong></a>&#xA0;&#xA0;See <a href=\"#gender\">gender</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"mood",
      "definition_text":"A verb may be in one of several moods. The 'base' mood of a verb is the indicative or declarative, where the verb (and hence the sentence which contains it) states what is the case. The imperative mood is used to give instructions or commands. Compare The cat chases the mouse (indicative) with Chase the mouse! (imperative). The subjunctive mood, used to show hypothetical conditions, is rarely shown grammatically in Modern English. (If I were to tell you rather than If I was to tell you is one of the few uses which are at all common.) Languages vary widely in their use of moods. As with other properties of verbs, it is important to distinguish between grammatical form and meaning. In the sentence I had finished my coursework before John came home, had finished is indicative in meaning, showing that the action was completed in the past before John came home. In the sentence If I had finished my coursework, I would have got a better mark, had finished is subjunctive in meaning, showing that the action was never completed.",
      "definition_html":"<div><p><a name=\"mood\"><strong class=\"plus\">mood</strong></a>&#xA0;&#xA0;A <a href=\"#verb\">verb</a> may be in one of several moods. The &apos;base&apos; mood of a verb is the indicative or declarative, where the verb (and hence the sentence which contains it) states what is the case. The imperative mood is used to give instructions or commands. Compare <i class=\"word\">The cat chases the mouse</i> (indicative) with <i class=\"word\">Chase the mouse!</i> (imperative). The subjunctive mood, used to show hypothetical conditions, is rarely shown grammatically in Modern English. (<i class=\"word\">If I were to tell you</i> rather than <i class=\"word\">If I was to tell you</i> is one of the few uses which are at all common.) Languages vary widely in their use of moods.</p>As with other properties of <a href=\"#verb\">verbs</a>, it is important to distinguish between grammatical form and meaning. In the sentence <i class=\"word\">I had finished my coursework before John came home</i>, <i class=\"word\">had finished</i> is indicative in meaning, showing that the action was completed in the past before John came home. In the sentence <i class=\"word\">If I had finished my coursework, I would have got a better mark</i>, <i class=\"word\">had finished</i> is subjunctive in meaning, showing that the action was never completed.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"morphology",
      "definition_text":"The structure of words and the study of this structure. For example, a morphological analysis of the English word unknowingly might yield four components, called morphemes.  These are the root know and three affixes, the prefix un indicating negation, and two suffixes ing and ly.  Note that both spelling and pronunciation changes can take place when morphemes are combined. Thus the root happy plus the affix ly yields happily not *happyly. Many English words appear to contain morphemes, but resist neat division.  For example, the suffix ish often indicates that the word refers to a language (e.g. English, Spanish, Danish, Swedish), but removing the suffix does not always leave a clear root morpheme (e.g. Spanish = ?Span(e) + ish). In other cases, it may be that a word was in the past created from distinct morphemes, but that this is not  obvious to a contemporary speaker as the morphemes are no longer used in forming new words. When an affix morpheme is an inflection, the word can be said to show inflectional morphology. Thus the word chased (= chase + ed) shows inflectional morphology. In many languages, including English, inflectional morphology is relatively predictable, and can be handled by rules. In other cases, the word can be said to show derivational morphology. Thus the word output = out + put shows derivational morphology: adding the prefix out to the verb put creates a noun with the approximate meaning \"that which was put out\". In many languages, including English, derivational morphology is unpredictable, and so cannot easily be handled by rules. Thus there's no noun *outgo meaning \"that which went out\" (although there is a noun, most often used in the plural, outgoings = out + go + ing + s).",
      "definition_html":"<div><div><p><a name=\"morphology\"><strong class=\"plus\">morphology</strong></a>&#xA0;&#xA0;The structure of words and the study of this structure. For example, a morphological analysis of the English word <i class=\"word\">unknowingly</i> might yield four components, called <a href=\"#morpheme\">morphemes</a>.  These are the root <i class=\"word\">know</i> and three <a href=\"#affix\">affixes</a>, the <a href=\"#prefix\">prefix</a> <i class=\"word\">un</i> indicating negation, and two <a href=\"#suffix\">suffixes</a> <i class=\"word\">ing</i> and <i class=\"word\">ly</i>.  Note that both spelling and pronunciation changes can take place when morphemes are combined. Thus the root <i class=\"word\">happy</i> plus the affix <i class=\"word\">ly</i> yields <i class=\"word\">happily</i> not *<i class=\"word\">happyly</i>. Many English words appear to contain morphemes, but resist neat division.  For example, the suffix <i class=\"word\">ish</i> often indicates that the word refers to a language (e.g. <i class=\"word\">English</i>, <i class=\"word\">Spanish</i>, <i class=\"word\">Danish</i>, <i class=\"word\">Swedish</i>), but removing the suffix does not always leave a clear root morpheme (e.g. <i class=\"word\">Spanish</i> = ?<i class=\"word\">Span(e)</i> + <i class=\"word\">ish</i>). In other cases, it may be that a word was in the past created from distinct morphemes, but that this is not  obvious to a contemporary speaker as the morphemes are no longer used in forming new words.</p>When an affix morpheme is an <a href=\"#inflection\">inflection</a>, the word can be said to show inflectional morphology. Thus the word <i class=\"word\">chased</i> (= <i class=\"word\">chase</i> + <i class=\"word\">ed</i>) shows inflectional morphology. In many languages, including English, inflectional morphology is relatively predictable, and can be handled by rules.</div>In other cases, the word can be said to show derivational morphology. Thus the word <i class=\"word\">output</i> = <i class=\"word\">out</i> + <i class=\"word\">put</i> shows derivational morphology: adding the prefix <i class=\"word\">out</i> to the verb <i class=\"word\">put</i> creates a noun with the approximate meaning &quot;that which was put out&quot;. In many languages, including English, derivational morphology is unpredictable, and so cannot easily be handled by rules. Thus there&apos;s no noun *<i class=\"word\">outgo</i> meaning &quot;that which went out&quot; (although there is a noun, most often used in the plural, <i class=\"word\">outgoings</i> = <i class=\"word\">out</i> + <i class=\"word\">go</i> + <i class=\"word\">ing</i> + <i class=\"word\">s</i>).</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"MT",
      "definition_text":"= Machine Translation",
      "definition_html":"<p><a name=\"MT\"><strong class=\"plus\">MT</strong></a> = Machine Translation</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"nasal",
      "definition_text":"A nasal is a phone made by allowing air to flow out of the nose while possibly stopping it in the mouth. Allowing air to flow out of the mouth is achieved by opening the uvula (see the diagram of a head). English has three such phones: the nasal stops which end the words rum, run and rung. In many languages (e.g. French, Punjabi), there are also nasal vowels, produced by allowing air to flow out of both the mouth and the nose.",
      "definition_html":"<div><p><a name=\"nasal\"><strong class=\"plus\">nasal</strong></a>&#xA0;&#xA0;A nasal is a <a href=\"#phone\">phone</a> made by allowing air to flow out of the nose while possibly stopping it in the mouth. Allowing air to flow out of the mouth is achieved by opening the <strong>uvula</strong> (see <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a>). English has three such phones: the nasal <a href=\"#stop\">stops</a> which end the words <i class=\"word\">rum,</i> <i class=\"word\">run</i> and <i class=\"word\">rung.</i></p>In many languages (e.g. French, Punjabi), there are also nasal <a href=\"#vowel\">vowels,</a> produced by allowing air to flow out of both the mouth and the nose.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"natural language",
      "definition_text":"Any language naturally used by people, i.e. not a man-made language like a programming language or Esperanto.",
      "definition_html":"<p><a name=\"natural_language\"><strong class=\"plus\">natural language</strong></a>&#xA0;&#xA0;Any language naturally used by people, i.e. not a man-made language like a programming language or Esperanto.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"neuter",
      "definition_text":"See gender.",
      "definition_html":"<p><a name=\"neuter\"><strong class=\"plus\">neuter</strong></a>&#xA0;&#xA0;See <a href=\"#gender\">gender</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"NL",
      "definition_text":"= Natural Language.",
      "definition_html":"<p><a name=\"NL\"><strong class=\"plus\">NL</strong></a> = <a href=\"#natural_language\">Natural Language</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"NLP",
      "definition_text":"= Natural Language Processing.",
      "definition_html":"<p><a name=\"NLP\"><strong class=\"plus\">NLP</strong></a> = Natural Language Processing.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"nominative",
      "definition_text":"See case.",
      "definition_html":"<p><a name=\"nominative\"><strong class=\"plus\">nominative</strong></a>&#xA0;&#xA0;See <a href=\"#case\">case</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"nonterminal",
      "definition_text":"See grammar.",
      "definition_html":"<p><a name=\"nonterminal\"><strong class=\"plus\">nonterminal</strong></a>&#xA0;&#xA0;See <a href=\"#grammar1\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"noun",
      "definition_text":"Semantically, a noun can be described as a word standing for the 'name of something.' A more useful test is that a noun or a noun phrase can be replaced by a pronoun, e.g. it or her. Examples of nouns are people, cats and intelligence in Many people think that cats have considerable intelligence. The strings of words many people and considerable intelligence are noun phrases in this example.",
      "definition_html":"<p><a name=\"noun\"><strong class=\"plus\">noun</strong></a>&#xA0;&#xA0;Semantically, a noun can be described as a word standing for the &apos;name of something.&apos; A more useful test is that a noun or a noun <a href=\"#phrase\">phrase</a> can be replaced by a <a href=\"#pronoun\">pronoun</a>, e.g. <i class=\"word\">it</i> or <i class=\"word\">her.</i> Examples of nouns are <i class=\"word\">people,</i> <i class=\"word\">cats</i> and <i class=\"word\">intelligence</i> in <i class=\"word\">Many people think that cats have considerable intelligence.</i> The strings of words<i class=\"word\"> many people</i> and <i class=\"word\">considerable intelligence</i> are noun phrases in this example.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"NP",
      "definition_text":"= Noun Phrase. See also phrase.",
      "definition_html":"<p><a name=\"NP\"><strong class=\"plus\">NP</strong></a> = Noun Phrase. See also <a href=\"#phrase\">phrase</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"number",
      "definition_text":"In English, nouns and verbs can be described as singular or plural, generally depending on whether the reference is to one or to many. Thus in the cat runs, cat is singular as is runs, whereas in cats run, cats is plural as is run. English nouns are generally clearly marked as singular or plural; verbs are clearly singular only in the third person singular of the present tense. However, grammatical number must be distinguished from semantic number; trousers is grammatically plural in English (since e.g. we must say my trousers are here and not *my trousers is here), but is clearly semantically singular. Some languages have dual number as well as singular and plural. For example, in Arabic, a special form of the noun corresponds to two rather than one or many. Other languages lack grammatical number (e.g. the Chinese languages).",
      "definition_html":"<p><a name=\"number\"><strong class=\"plus\">number</strong></a>&#xA0;&#xA0;In English, <a href=\"#noun\">nouns</a> and <a href=\"#verb\">verbs</a> can be described as singular or plural, generally depending on whether the reference is to one or to many. Thus in <i class=\"word\">the cat runs,</i> <i class=\"word\">cat</i> is singular as is <i class=\"word\">runs</i>, whereas in <i class=\"word\">cats run,</i> <i class=\"word\">cats</i> is plural as is <i class=\"word\">run.</i> English nouns are generally clearly marked as singular or plural; verbs are clearly singular only in the third <a href=\"#person\">person</a> singular of the present <a href=\"#tense\">tense</a>. However, grammatical number must be distinguished from semantic number; <i class=\"word\">trousers</i> is grammatically plural in English (since e.g. we must say <i class=\"word\">my trousers are here</i> and not *<i class=\"word\">my trousers is here</i>), but is clearly semantically singular. Some languages have dual number as well as singular and plural. For example, in Arabic, a special form of the noun corresponds to two rather than one or many. Other languages lack grammatical number (e.g. the Chinese languages).</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"object",
      "definition_text":"(of a sentence)  The direct object of an active sentence is a noun, noun phrase or pronoun which suffers the action of the verb. Thus in Those people dislike cats, cats is the object of the sentence. In English, only pronouns show case, and become accusative when forming the object of a sentence: thus, e.g., cats in the sentence above must be replaced by them rather than they. In other languages, nouns, adjectives, articles, etc. may all change case. The indirect object of a sentence in English is a noun or equivalent which, if the sentence were re-worded, would require a to (or sometimes a for). Thus in Your mother gave my brother a cake, a cake is the direct object and my brother the indirect object, since if we reverse brother and cake we need a to giving Your mother gave a cake to my brother. Direct and indirect objects may take different cases in some languages; e.g. in German, me is mich (accusative) when it is the direct object, but mir (dative) when it is the indirect object. See also subject.",
      "definition_html":"<p><a name=\"object\"><strong class=\"plus\">object</strong></a> (of a sentence)&#xA0;&#xA0;The <strong>direct</strong> <strong>object</strong> of an <a href=\"#active\">active</a> sentence is a <a href=\"#noun\">noun</a>, noun <a href=\"#phrase\">phrase</a> or <a href=\"#pronoun\">pronoun</a> which suffers the action of the <a href=\"#verb\">verb</a>. Thus in <i class=\"word\">Those people dislike cats,</i> <i class=\"word\">cats</i> is the object of the sentence. In English, only pronouns show <a href=\"#case\">case</a>, and become <a href=\"#accusative\">accusative</a> when forming the object of a sentence: thus, e.g., <i class=\"word\">cats</i> in the sentence above must be replaced by <i class=\"word\">them</i> rather than <i class=\"word\">they.</i> In other languages, nouns, adjectives, articles, etc. may all change case. The <strong>indirect</strong> <strong>object</strong> of a sentence in English is a noun or equivalent which, if the sentence were re-worded, would require a <i class=\"word\">to</i> (or sometimes a <i class=\"word\">for</i>). Thus in <i class=\"word\">Your mother gave my brother a cake,</i> <i class=\"word\">a cake</i> is the direct object and <i class=\"word\">my brother</i> the indirect object, since if we reverse <i class=\"word\">brother</i> and <i class=\"word\">cake</i> we need a <i class=\"word\">to</i> giving <i class=\"word\">Your mother gave a cake to my brother.</i> Direct and indirect objects may take different cases in some languages; e.g. in German, <i class=\"word\">me</i> is <i class=\"word\">mich</i> (<a href=\"#accusative\">accusative</a>) when it is the direct object, but <i class=\"word\">mir</i> (dative) when it is the indirect object. See also <a href=\"#subject\">subject</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"palatal",
      "definition_text":"A phone produced when the top of the tongue touches the hard palate. See the diagram of a head for the location of the hard palate. The English sounds represented by the letters sh in ship and s in measure are palatal fricatives, produced by partially stopping the air flow out of the mouth by touching the top of the tongue on the hard palate.",
      "definition_html":"<p><a name=\"palatal\"><strong class=\"plus\">palatal</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced when the top of the tongue touches the hard palate. See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a> for the location of the hard palate. The English sounds represented by the letters <i class=\"word\">sh</i> in <i class=\"word\">ship</i> and <i class=\"word\">s</i> in <i class=\"word\">measure</i> are palatal <a href=\"#fricative\">fricatives,</a> produced by partially stopping the air flow out of the mouth by touching the top of the tongue on the hard palate.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"parse",
      "definition_text":"To analyse a sentence using a grammar, including deciding whether it is valid and what its structure is according to the grammar.",
      "definition_html":"<p><a name=\"parse\"><strong class=\"plus\">parse</strong></a>&#xA0;&#xA0;To analyse a sentence using a grammar, including deciding whether it is valid and what its structure is according to the grammar.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"participant theta role",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"participant_theta_role\"><strong class=\"plus\">participant theta-role</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"passive",
      "definition_text":"A passive sentence is one which has a basic pattern like The cat was killed or The cat was killed by the dog, i.e. it describes what one thing (the subject) has done to it, often by another thing. The verb in an passive sentence can be said to be in the passive voice. See also active.",
      "definition_html":"<p><a name=\"passive\"><strong class=\"plus\">passive</strong></a>&#xA0;&#xA0;A passive sentence is one which has a basic pattern like <i class=\"word\">The cat was killed</i> or <i class=\"word\">The cat was killed by the dog,</i> i.e. it describes what one thing (the <a href=\"#subject\">subject</a>) has done to it, often by another thing. The <a href=\"#verb\">verb</a> in an passive sentence can be said to be in the passive <a href=\"#voice\">voice</a>. See also <a href=\"#active\">active</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"Patient",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"patient\"><strong class=\"plus\">Patient</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"person",
      "definition_text":"(of a verb)  Verbs (in Indo-European languages at least) often vary depending on whether the subject of the verb is in the first person (singular = I, plural = we), the second person (singular and plural = you in modern English), or the third person (singular = he, she or it, plural = they). Only the verb be in the singular shows a full set of changes due to person in modern English: I am, you are, it is.",
      "definition_html":"<p><a name=\"person\"><strong class=\"plus\">person</strong></a> (of a <a href=\"#verb\">verb</a>)&#xA0;&#xA0;Verbs (in Indo-European languages at least) often vary depending on whether the <a href=\"#subject\">subject</a> of the verb is in the first person (singular = <i class=\"word\">I,</i> plural = <i class=\"word\">we</i>), the second person (singular and plural = <i class=\"word\">you</i> in modern English), or the third person (singular = <i class=\"word\">he,</i> <i class=\"word\">she</i> or <i class=\"word\">it,</i> plural = <i class=\"word\">they</i>). Only the verb <i class=\"word\">be</i> in the singular shows a full set of changes due to person in modern English: <i class=\"word\">I am,</i> <i class=\"word\">you are,</i> <i class=\"word\">it is.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phone",
      "definition_text":"A phone is a 'unit sound' of a language in the sense that it is the minimal sound by which two words can differ. For example, the English word feed contains three phones since each can be independently substituted to form a different word. In the IPA, the three phones can be written as [f], [i] and [d]. Examples of substitutions are: [fid] - [f] + [s] gives [sid], i.e. seed; [fid] - [i] + [u] gives [fud], i.e. food; [fid] - [d] + [t] gives [fit], i.e. feet. The whole of each phone must be substituted to change one word into another. It is important to note that whether or not speakers can distinguish between sounds is not a test of whether they constitute distinct phones. The word tea could be represented as [ti] and the word tree as [tri]. However, the two 't sounds' are not quite the same: the tongue is further back in the mouth when pronouncing the [t] in [tri] than when pronouncing the [t] in [ti]. How far to divide up sounds into phones is essentially a pragmatic question. Using more phones will enable speech to represented more accurately but at a cost in terms of complexity. See also allophone, phoneme.",
      "definition_html":"<p><a name=\"phone\"><strong class=\"plus\">phone</strong></a>&#xA0;&#xA0;A phone is a &apos;unit sound&apos; of a language in the sense that it is the minimal sound by which two words can differ. For example, the English word <i class=\"word\">feed</i> contains three phones since each can be independently substituted to form a different word. In the <a href=\"#IPA\">IPA</a>, the three phones can be written as [f], [i] and [d]. Examples of substitutions are: [fid] - [f] + [s] gives [sid], i.e. <i class=\"word\">seed;</i> [fid] - [i] + [u] gives [fud], i.e. <i class=\"word\">food</i>; [fid] - [d] + [t] gives [fit], i.e. <i class=\"word\">feet.</i> The whole of each phone must be substituted to change one word into another. It is important to note that whether or not speakers can distinguish between sounds is not a test of whether they constitute distinct phones. The word <i class=\"word\">tea</i> could be represented as [ti] and the word <i class=\"word\">tree</i> as [tri]. However, the two &apos;t sounds&apos; are not quite the same: the tongue is further back in the mouth when pronouncing the [t] in [tri] than when pronouncing the [t] in [ti]. How far to divide up sounds into phones is essentially a pragmatic question. Using more phones will enable speech to represented more accurately but at a cost in terms of complexity. See also <a href=\"#allophone\">allophone</a>, <a href=\"#phoneme\">phoneme</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phoneme",
      "definition_text":"A phoneme is a minimally distinctive set of sounds in a language; sound sequences which differ in a single phoneme can constitute different words. Thus the pairs tip-dip and trip-drip show that English has two distinct phonemes, which we can write as /t/ and /d/, since substituting one for the other produces a different word. However, the pronunciation of /t/ (and /d/) is not the same in each pair: the tongue is further back in the mouth when /t/ is followed by /r/. Hence there are at least two phones corresponding to the /t/ phoneme. However there are no two English words in which the ONLY difference is that the 't sound in trip' is replaced by the 't sound in tip' -- these two sounds are allophones of the same phoneme. English speakers do not need to recognize the difference between them.",
      "definition_html":"<p><a name=\"phoneme\"><strong class=\"plus\">phoneme</strong></a>&#xA0;&#xA0;A phoneme is a minimally distinctive set of sounds in a language; sound sequences which differ in a single phoneme can constitute different words. Thus the pairs<i class=\"word\"> tip-dip</i> and <i class=\"word\">trip-drip</i> show that English has two distinct phonemes, which we can write as /t/ and /d/, since substituting one for the other produces a different word. However, the pronunciation of /t/ (and /d/) is not the same in each pair: the tongue is further back in the mouth when /t/ is followed by /r/. Hence there are at least two <a href=\"#phone\">phones</a> corresponding to the /t/ phoneme. However there are no two English words in which the ONLY difference is that the &apos;t sound in <i class=\"word\">trip&apos;</i> is replaced by the &apos;t sound in <i class=\"word\">tip&apos;</i> -- these two sounds are <a href=\"#allophone\">allophones</a> of the same phoneme. English speakers do not need to recognize the difference between them.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phonetics",
      "definition_text":"Phonetics is the study of the sounds of speech (i.e. the study of phones). It can be distinguished from phonology which is more concerned with the underlying theory (i.e. the phonemes which underlie phones and the rules which govern the conversion of phonemes to phones and vice versa).",
      "definition_html":"<p><a name=\"phonetics\"><strong class=\"plus\">phonetics</strong></a>&#xA0;&#xA0;Phonetics is the study of the sounds of speech (i.e. the study of <a href=\"#phone\">phones</a>). It can be distinguished from <strong>phonology</strong> which is more concerned with the underlying theory (i.e. the <a href=\"#phoneme\">phonemes</a> which underlie phones and the rules which govern the conversion of phonemes to phones and vice versa).</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phonological rule",
      "definition_text":"At some theoretical level, words can be considered to be composed of phonemes. The actual sound of a word then depends on which allophone is chosen for each phoneme. The context-sensitive rules which determine this are called phonological rules. Thus the word input can be considered to contain the phoneme /n/. However in fast speech in many dialects of English, the phone used will be [m]. The relevant phonological rule for English is that a nasal becomes articulated at the same position as a following stop.",
      "definition_html":"<p><a name=\"phonological_rule\"><strong class=\"plus\">phonological rule</strong></a>&#xA0;&#xA0;At some theoretical level, words can be considered to be composed of <a href=\"#phoneme\">phonemes</a>. The actual sound of a word then depends on which <a href=\"#allophone\">allophone</a> is chosen for each phoneme. The context-sensitive rules which determine this are called phonological rules. Thus the word <i class=\"word\">input</i> can be considered to contain the phoneme /n/. However in fast speech in many dialects of English, the phone used will be [m]. The relevant phonological rule for English is that a nasal becomes articulated at the same position as a following stop.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phonology",
      "definition_text":"See phonetics.",
      "definition_html":"<p><a name=\"phonology\"><strong class=\"plus\">phonology</strong></a>&#xA0;&#xA0;See <a href=\"#phonetics\">phonetics</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"phrase",
      "definition_text":"A string of words can often act as an exact grammatical substitute for a single word; such a string is called a 'phrase'. Thus e.g. a noun can be replaced by a noun phrase -- compare Whiskers is over there with That appalling pet of yours is over there, in which That appalling pet of yours is a noun phrase equivalent to the noun Whiskers.",
      "definition_html":"<p><a name=\"phrase\"><strong class=\"plus\">phrase</strong></a>&#xA0;&#xA0;A string of words can often act as an exact grammatical substitute for a single word; such a string is called a &apos;phrase&apos;. Thus e.g. a <a href=\"#noun\">noun</a> can be replaced by a noun phrase -- compare <i class=\"word\">Whiskers is over there</i> with <i class=\"word\">That appalling pet of yours is over there,</i> in which <i class=\"word\">That appalling pet of yours</i> is a noun phrase equivalent to the noun <i class=\"word\">Whiskers.</i></p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"plosive",
      "definition_text":"See stop.",
      "definition_html":"<p><a name=\"plosive\"><strong class=\"plus\">plosive</strong></a>&#xA0;&#xA0;See <a href=\"#stop\">stop</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"plural",
      "definition_text":"See number.",
      "definition_html":"<p><a name=\"plural\"><strong class=\"plus\">plural</strong></a>&#xA0;&#xA0;See <a href=\"#number\">number</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"possessive",
      "definition_text":"See genitive.",
      "definition_html":"<p><a name=\"possessive\"><strong class=\"plus\">possessive</strong></a>&#xA0;&#xA0;See <a href=\"#genitive\">genitive</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"pragmatics",
      "definition_text":"A technical term meaning, roughly, what the person speaking or writing actually meant, rather than what the words themselves mean.",
      "definition_html":"<p><a name=\"pragmatics\"><strong class=\"plus\">pragmatics</strong></a>&#xA0;&#xA0;A technical term meaning, roughly, what the person speaking or writing actually meant, rather than what the words themselves mean.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"prefix",
      "definition_text":"A prefix is a morpheme which is added before a root morpheme in the formation of a word. See morphology.",
      "definition_html":"<p><a name=\"prefix\"><strong class=\"plus\">prefix</strong></a>&#xA0;&#xA0;A prefix is a <a href=\"#morpheme\">morpheme</a> which is added before a root morpheme in the formation of a word. See <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"preposition",
      "definition_text":"A preposition is one of a finite set of words (e.g. at, from, by) which in English must usually be followed by a noun or its equivalent. A prepositional phrase (PP) consists of a preposition followed by a noun, pronoun or noun phrase. Two major uses of prepositional phrases are to show location (e.g. on the mat in the cat sits on the mat) and motion (e.g. into the house in the cat runs into the house). The word preposition comes from pre plus position. In other languages (e.g. Japanese), there are postpositions: words which come after a noun or its equivalent.",
      "definition_html":"<p><a name=\"preposition\"><strong class=\"plus\">preposition</strong></a>&#xA0;&#xA0;A preposition is one of a finite set of words (e.g. <i class=\"word\">at,</i> <i class=\"word\">from,</i> <i class=\"word\">by</i>) which in English must usually be followed by a <a href=\"#noun\">noun</a> or its equivalent. A prepositional <a href=\"#phrase\">phrase</a> (PP) consists of a preposition followed by a noun, <a href=\"#pronoun\">pronoun</a> or noun phrase. Two major uses of prepositional phrases are to show location (e.g. <i class=\"word\">on the mat</i> in <i class=\"word\">the cat sits on the mat</i>) and motion (e.g. <i class=\"word\">into the house</i> in <i class=\"word\">the cat runs into the house</i>). The word <i class=\"word\">preposition</i> comes from <i class=\"word\">pre</i> plus <i class=\"word\">position.</i> In other languages (e.g. Japanese), there are <strong>postpositions</strong>: words which come after a noun or its equivalent.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"production",
      "definition_text":"See grammar.",
      "definition_html":"<p><a name=\"production\"><strong class=\"plus\">production</strong></a>&#xA0;&#xA0;See <a href=\"#grammar1\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"pronoun",
      "definition_text":"A pronoun is one of a small set of words which can substitute for a noun or noun phrase. It usually refers back to a previous occurrence of the noun or noun phrase. Thus, e.g., it in the previous sentence is a pronoun which refers back to A pronoun in the sentence before. The process of referring is sometimes called anaphora.",
      "definition_html":"<p><a name=\"pronoun\"><strong class=\"plus\">pronoun</strong></a>&#xA0;&#xA0;A pronoun is one of a small set of words which can substitute for a <a href=\"#noun\">noun</a> or noun <a href=\"#phrase\">phrase</a>. It usually refers back to a previous occurrence of the noun or noun phrase. Thus, e.g., <i class=\"word\">it</i> in the previous sentence is a pronoun which refers back to <i class=\"word\">A pronoun</i> in the sentence before. The process of referring is sometimes called <a href=\"#anaphora\">anaphora</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"Recipient",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"recipient\"><strong class=\"plus\">Recipient</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"referential semantics",
      "definition_text":"A system where the meaning of a word just is the thing it refers to.",
      "definition_html":"<p><a name=\"referentialsemantics\"><strong class=\"plus\">referential semantics</strong></a>&#xA0;&#xA0;A system where the meaning of a word just is the thing it refers to.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"RTN",
      "definition_text":"= Recursive Transition Network.",
      "definition_html":"<p><a name=\"RTN\"><strong class=\"plus\">RTN</strong></a> = Recursive Transition Network.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"semantic feature",
      "definition_text":"A semantic feature is a 'primitive' which a language processor (human or computer) is assumed to be able to determine independently of the language system. The meaning of words such as nouns or adjectives can then be described in terms of sets of these features. For example we might describe the meaning of words such as boy, man, girl and woman in terms of the features YOUNG, MALE and HUMAN. Boy would be [+YOUNG, +MALE, +HUMAN], woman would be [-YOUNG, -MALE, +HUMAN].",
      "definition_html":"<p><a name=\"semantic_feature\"><strong class=\"plus\">semantic feature</strong></a>&#xA0;&#xA0;A semantic feature is a &apos;primitive&apos; which a language processor (human or computer) is assumed to be able to determine independently of the language system. The meaning of words such as <a href=\"#noun\">nouns</a> or <a href=\"#adjective\">adjectives</a> can then be described in terms of sets of these features. For example we might describe the meaning of words such as <i class=\"word\">boy,</i> <i class=\"word\">man,</i> <i class=\"word\">girl</i> and <i class=\"word\">woman</i> in terms of the features YOUNG, MALE and HUMAN. <i class=\"word\">Boy</i> would be [+YOUNG, +MALE, +HUMAN], <i class=\"word\">woman</i> would be [-YOUNG, -MALE, +HUMAN].</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"semantics",
      "definition_text":"Used as a technical term for the meaning of words and sentences (see also pragmatics).",
      "definition_html":"<p><a name=\"semantics\"><strong class=\"plus\">semantics</strong></a>&#xA0;&#xA0;Used as a technical term for the meaning of words and sentences (see also <a href=\"#pragmatics\">pragmatics</a>).</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"singular",
      "definition_text":"See number.",
      "definition_html":"<p><a name=\"singular\"><strong class=\"plus\">singular</strong></a>&#xA0;&#xA0;See <a href=\"#number\">number</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"start symbol",
      "definition_text":"See grammar.",
      "definition_html":"<p><a name=\"start_symbol\"><strong class=\"plus\">start symbol</strong></a>&#xA0;&#xA0;See <a href=\"#grammar1\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"stop",
      "definition_text":"Some phones are produced by completely stopping and then releasing the flow of air out of the mouth. These sounds are called stops. In most dialects of English there are three stop positions, corresponding to the initial phones in pale, tale and kale, or the terminal nasal phones in rum, run and rung. Some dialects of English (for example those spoken in England around London) also have a glottal stop, used, for example, instead of the 't sound' in words like bottle. [The current tendency is to use the term plosive instead of stop. I resist this for the following reason. A stop actually consists of two phases: closure (when air pressure builds up) and release (when air explodes out). These phases can be separated: in many languages, stops are often not released (e.g. in the Bahasa language spoken in Malaysia and Indonesia, or at the end of words in many dialects of English spoken in northern England). The term 'unreleased stop' makes sense, whereas an 'unreleased plosive' is a contradiction.]",
      "definition_html":"<div><p><a name=\"stop\"><strong class=\"plus\">stop</strong></a>&#xA0;&#xA0;Some <a href=\"#phone\">phones</a> are produced by completely stopping and then releasing the flow of air out of the mouth. These sounds are called stops. In most dialects of English there are three stop positions, corresponding to the initial phones in <i class=\"word\">pale,</i> <i class=\"word\">tale</i> and <i class=\"word\">kale,</i> or the terminal <a href=\"#nasal\">nasal</a> phones in <i class=\"word\">rum,</i> <i class=\"word\">run</i> and <i class=\"word\">rung.</i> Some dialects of English (for example those spoken in England around London) also have a <a href=\"#glottal\">glottal</a> stop, used, for example, instead of the &apos;t sound&apos; in words like <i class=\"word\">bottle.</i></p>[The current tendency is to use the term <b>plosive</b> instead of stop. I resist this for the following reason. A stop actually consists of two phases: closure (when air pressure builds up) and release (when air explodes out). These phases can be separated: in many languages, stops are often not released (e.g. in the Bahasa language spoken in Malaysia and Indonesia, or at the end of words in many dialects of English spoken in northern England). The term &apos;unreleased stop&apos; makes sense, whereas an &apos;unreleased plosive&apos; is a contradiction.]</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"stress",
      "definition_text":"Words can be divided into syllables, usually centred around a vowel. In many languages, including English, the duration and relative loudness of a syllable -- its stress -- are important. Thus only stress distinguishes the noun PROcess (as in the sentence This process is called assimilation) from the much less common verb proCESS (as in the sentence I usually process at the degree ceremony). The noun is stressed on the first syllable, the verb on the second.",
      "definition_html":"<p><a name=\"stress\"><strong class=\"plus\">stress</strong></a>&#xA0;&#xA0;Words can be divided into syllables, usually centred around a <a href=\"#vowel\">vowel</a>. In many languages, including English, the duration and relative loudness of a syllable -- its stress -- are important. Thus only stress distinguishes the <a href=\"#noun\">noun</a> <i class=\"word\">PROcess</i> (as in the sentence <i class=\"word\">This process is called assimilation</i>) from the much less common <a href=\"#verb\">verb</a> <i class=\"word\">proCESS</i> (as in the sentence <i class=\"word\">I usually process at the degree ceremony</i>). The noun is stressed on the first syllable, the verb on the second.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"STT",
      "definition_text":"= Speech To Text.",
      "definition_html":"<p><a name=\"STT\"><strong class=\"plus\">STT</strong></a> = Speech To Text.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"subject",
      "definition_text":"(of a sentence)  The subject of a sentence is the noun or noun equivalent which governs the verb, in the sense that if the language has agreements, the verb has to agree with the subject in number (as in English) or in gender (as in Arabic). Thus in English we have to say The dog chases the cats not The dog chase the cats; the verb chases agrees in number with the subject the dog rather than the object the cats. In the semantically equivalent passive sentence, The cats are chased by the dog, the fact that the cats is now the subject is shown by the need to use the plural auxiliary, are. In an active sentence, the subject is often the entity which performs the action of the verb; in a passive sentence the subject is the entity which is in some sense the recipient of the action. See also object.",
      "definition_html":"<div><div><p><a name=\"subject\"><strong class=\"plus\">subject</strong></a> (of a sentence)&#xA0;&#xA0;The subject of a sentence is the <a href=\"#noun\">noun</a> or noun equivalent which governs the <a href=\"#verb\">verb</a>, in the sense that if the language has agreements, the verb has to agree with the subject in <a href=\"#number\">number</a> (as in English) or in <a href=\"#gender\">gender</a> (as in Arabic). Thus in English we have to say <i class=\"word\">The dog chases the cats</i> not <i class=\"word\">The dog chase the cats</i>; the verb <i class=\"word\">chases</i> agrees in number with the subject <i class=\"word\">the dog</i> rather than the <a href=\"#object\">object</a> <i class=\"word\">the cats</i>. In the semantically equivalent <a href=\"#passive\">passive</a> sentence, <i class=\"word\">The cats are chased by the dog,</i> the fact that <i class=\"word\">the cats</i> is now the subject is shown by the need to use the plural auxiliary, <i class=\"word\">are.</i></p>In an <a href=\"#active\">active</a> sentence, the subject is often the entity which performs the action of the verb; in a passive sentence the subject is the entity which is in some sense the recipient of the action.</div>See also <a href=\"#object\">object</a>.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"suffix",
      "definition_text":"A suffix is a morpheme which is added after a root morpheme in the formation of a word. See morphology.",
      "definition_html":"<p><a name=\"suffix\"><strong class=\"plus\">suffix</strong></a>&#xA0;&#xA0;A suffix is a <a href=\"#morpheme\">morpheme</a> which is added after a root morpheme in the formation of a word. See <a href=\"#morphology\">morphology</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"syntax",
      "definition_text":"The syntax of a language comprises, roughly speaking, the patterns into which its words can be validly arranged to form sentences. The combination of morphology and syntax is sometimes called the grammar of a language.",
      "definition_html":"<p><a name=\"syntax\"><strong class=\"plus\">syntax</strong></a>&#xA0;&#xA0;The syntax of a language comprises, roughly speaking, the patterns into which its words can be validly arranged to form sentences. The combination of <a href=\"#morphology\">morphology</a> and syntax is sometimes called the <a href=\"#grammar2\">grammar</a> of a language.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"tense",
      "definition_text":"(of a verb)  The tense of a verb specifies the time at which its action occurs. The clearest examples in English are the present and past tenses. When saying I am eating an apple the speaker refers to the present; when saying I was eating an apple, s/he refers to the past. In its morphology, an English verb shows tense and aspect independently (see the table under aspect). Semantically, tense and aspect are not so easy to separate in English. I have eaten the apple is described morphologically as 'present perfect', but semantically is partly a reference to the past, and partly a reference to the action's being complete rather than continuing. The future tense in English is formed by the use of the auxiliary will or sometimes shall. Morphologically, these auxiliaries can show 'past tense'; thus I would have been eating is the 'future past perfect progressive' of eat. Semantically, the combination of 'future' and 'past' is used to express 'conditionality', so that this form of the verb is usually called 'conditional'.",
      "definition_html":"<div><p><a name=\"tense\"><strong class=\"plus\">tense</strong></a> (of a <a href=\"#verb\">verb</a>)&#xA0;&#xA0;The tense of a verb specifies the time at which its action occurs. The clearest examples in English are the present and past tenses. When saying <i class=\"word\">I am eating an apple</i> the speaker refers to the present; when saying <i class=\"word\">I was eating an apple,</i> s/he refers to the past. In its <a href=\"#morphology\">morphology</a>, an English verb shows tense and <a href=\"#aspect\">aspect</a> independently (see the table under <a href=\"#aspect\">aspect</a>). <a href=\"#semantics\">Semantically</a>, tense and aspect are not so easy to separate in English. <i class=\"word\">I have eaten the apple</i> is described morphologically as &apos;present perfect&apos;, but semantically is partly a reference to the past, and partly a reference to the action&apos;s being complete rather than continuing.</p>The future tense in English is formed by the use of the <a href=\"#auxiliary\">auxiliary</a> <i class=\"word\">will</i> or sometimes <i class=\"word\">shall</i>. Morphologically, these auxiliaries can show &apos;past tense&apos;; thus <i class=\"word\">I would have been eating</i> is the &apos;future past perfect progressive&apos; of <i class=\"word\">eat.</i> Semantically, the combination of &apos;future&apos; and &apos;past&apos; is used to express &apos;conditionality&apos;, so that this form of the verb is usually called &apos;conditional&apos;.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"terminal node",
      "definition_text":"A node in a transition network at which parsing can stop.",
      "definition_html":"<p><a name=\"terminal\"><strong class=\"plus\">terminal node</strong></a>&#xA0;&#xA0;A node in a transition network at which parsing can stop.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"terminal",
      "definition_text":"See grammar.",
      "definition_html":"<p><a name=\"terminal\"><strong class=\"plus\">terminal</strong></a>&#xA0;&#xA0;See <a href=\"#grammar1\">grammar</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"thematic role",
      "definition_text":"See theta role.",
      "definition_html":"<p><a name=\"thematic_role\"><strong class=\"plus\">thematic role</strong></a>&#xA0;&#xA0;See <a href=\"#theta_role\">theta role</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"theta role",
      "definition_text":"(Often written as \u03b8-role.) Verbs require a number of other components to be present in a sentence to complete their meaning. These components can be said to act as arguments to the verb, i.e. to be argument theta roles (or, alternatively, to play participant theta roles in relation to the action of the verb). For example, in the sentence The girl put the bottles on the table, the action of 'putting' involves three necessary thematic roles. These are Agent, the entity doing the putting; Patient, the entity which suffers the action of being put; and Location, where the Agent puts the Patient. A sentence containing the verb put will involve these three roles, even if they occur in different positions due to the syntax of the sentence. Thus exactly the same entities play exactly the same theta roles in the sentence The bottles were put on the table by the girl although the syntax is different from the previous sentence. Another common \u03b8-role is Recipient, the entity which receives something, typically the Patient. Thus the boy is the Recipient in both The girl gave the bottles to the boy and The boy was given the bottles. In addition to argument or participant theta roles, there are adjunct or circumstantial theta roles. These show additional, non-required components. For example, in the kitchen plays an argument theta role in He was putting apples in the kitchen but only an adjunct theta role in He was eating apples in the kitchen. In both cases in the kitchen is a location, but put requires this role, eat merely allows it to be present.",
      "definition_html":"<div><div><p><a name=\"theta_role\"><strong class=\"plus\">theta role</strong></a>&#xA0;&#xA0;(Often written as &#x3B8;-role.) <a href=\"#verb\">Verbs</a> require a number of other components to be present in a sentence to complete their meaning. These components can be said to act as arguments to the verb, i.e. to be <strong>argument</strong> theta roles (or, alternatively, to play <strong>participant</strong> theta roles in relation to the action of the verb). For example, in the sentence <i class=\"word\">The girl put the bottles on the table,</i> the action of &apos;putting&apos; involves three necessary thematic roles. These are Agent, the entity doing the putting; Patient, the entity which suffers the action of being put; and Location, where the Agent puts the Patient. A sentence containing the verb <i class=\"word\">put</i> will involve these three roles, even if they occur in different positions due to the <a href=\"#syntax\">syntax</a> of the sentence. Thus exactly the same entities play exactly the same theta roles in the sentence <i class=\"word\">The bottles were put on the table by the girl</i> although the syntax is different from the previous sentence.</p>Another common &#x3B8;-role is Recipient, the entity which receives something, typically the Patient. Thus <i class=\"word\">the boy</i> is the Recipient in both <i class=\"word\">The girl gave the bottles to the boy</i> and <i class=\"word\">The boy was given the bottles</i>.</div>In addition to argument or participant theta roles, there are <strong>adjunct</strong> or <strong>circumstantial</strong> theta roles. These show additional, non-required components. For example, <i class=\"word\">in the kitchen</i> plays an argument theta role in <i class=\"word\">He was putting apples in the kitchen</i> but only an adjunct theta role in <i class=\"word\">He was eating apples in the kitchen.</i> In both cases<i class=\"word\"> in the kitchen</i> is a location, but <i class=\"word\">put</i> requires this role, <i class=\"word\">eat</i> merely allows it to be present.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"TN",
      "definition_text":"= Transition Network.",
      "definition_html":"<p><a name=\"TN\"><strong class=\"plus\">TN</strong></a> = Transition Network.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"TTS",
      "definition_text":"= Text To Speech.",
      "definition_html":"<p><a name=\"TTS\"><strong class=\"plus\">TTS</strong></a> = Text To Speech.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"unvoiced",
      "definition_text":"See voicing.",
      "definition_html":"<p><a name=\"unvoiced\"><strong class=\"plus\">unvoiced</strong></a>&#xA0;&#xA0;See <a href=\"#voicing\">voicing</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"velar",
      "definition_text":"A phone produced when the top of the tongue touches the soft palate or velum. See the diagram of a head for the location of the soft palate. The English sounds represented by the letters k in kit and g in got are velar stops, produced by stopping and then releasing the air flow out of the mouth by touching the top of the tongue on the soft palate.",
      "definition_html":"<p><a name=\"velar\"><strong class=\"plus\">velar</strong></a>&#xA0;&#xA0;A <a href=\"#phone\">phone</a> produced when the top of the tongue touches the soft palate or velum. See <a onclick=\"msgWindow=window.open(&quot;image.html#nlphead.gif!1!Cross-section of a human head!2!&quot;,&quot;displayWindow&quot;,&quot;toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=440,height=400&quot;); return false\" href=\"nlphead.gif\">the diagram of a head</a> for the location of the soft palate. The English sounds represented by the letters <i class=\"word\">k</i> in <i class=\"word\">kit</i> and <i class=\"word\">g</i> in <i class=\"word\">got</i> are velar <a href=\"#stop\">stops,</a> produced by stopping and then releasing the air flow out of the mouth by touching the top of the tongue on the soft palate.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"verb",
      "definition_text":"A verb is traditionally described as a 'doing' word; thus in the sentences Colourless ideas sleep furiously and The dog bit the cat, sleep and bit are verbs. A more useful test is that a verb combines with an auxiliary in structures such as I can _ or I can _ them. English makes extensive use of 'verb groups' or 'compound verbs', such as has been eating in He has been eating fish in which one or more auxiliaries is combined with a verb. Verbs may show a wide range of grammatical properties, including gender, person, tense, aspect, voice and mood. There are major differences among languages in the way these properties are shown grammatically and in their associated meanings.",
      "definition_html":"<div><p><a name=\"verb\"><strong class=\"plus\">verb</strong></a>&#xA0;&#xA0;A verb is traditionally described as a &apos;doing&apos; word; thus in the sentences <i class=\"word\">Colourless ideas sleep furiously</i> and <i class=\"word\">The dog bit the cat,</i> <i class=\"word\">sleep</i> and <i class=\"word\">bit</i> are verbs. A more useful test is that a verb combines with an <a href=\"#auxiliary\">auxiliary</a> in structures such as <i class=\"word\">I can _</i> or <i class=\"word\">I can _ them.</i> English makes extensive use of &apos;verb groups&apos; or &apos;compound verbs&apos;, such as <i class=\"word\">has been eating</i> in <i class=\"word\">He has been eating fish</i> in which one or more <a href=\"#auxiliary\">auxiliaries</a> is combined with a verb.</p>Verbs may show a wide range of grammatical properties, including <a href=\"#gender\">gender</a>, <a href=\"#person\">person</a>, <a href=\"#tense\">tense</a>, <a href=\"#aspect\">aspect</a>, <a href=\"#voice\">voice</a> and <a href=\"#mood\">mood</a>. There are major differences among languages in the way these properties are shown grammatically and in their associated meanings.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"voice",
      "definition_text":"A verb may be in the active or passive voice, and hence so may the sentence in which the verb appears. Compare The dog chased the cat (active) with The cat was chased by the dog (passive). This use of the term 'voice' has no connection with 'voiced' or 'voiceless'. In English, the grammatical voice of a verb is closely related to its meaning. In a sentence with an active verb the subject is typically the Agent, whereas in a sentence with a passive verb the subject is typically the Patient or the Recipient. Compare the active sentence The girl gave her mother a present, in which the girl is the subject and the Agent, with the passive sentences A present was given to her mother, in which a present is the subject and the Patient, and Her mother was given a present, in which her mother is the subject and Recipient. In other languages, grammatical voice and meaning are less well aligned.  For example, in Greek, both Classical and Modern, verbs which are passive in form may have active meanings, usually when the agent and patient are the same.  Thus in Modern Greek, \u03c7\u03c4\u03b5\u03bd\u03af\u03b6\u03c9 means \"I comb\" or \"I am combing\" but is only used when the patient (the thing being combed) is not the subject. The passive form \u03c7\u03c4\u03b5\u03bd\u03af\u03b6\u03bf\u03bc\u03b1\u03b9 normally means \"I am combing [my hair]\" rather than \"I am being combed\". \r\n\r\n ",
      "definition_html":"<div><div><div><p><a name=\"voice\"><strong class=\"plus\">voice</strong></a>&#xA0;&#xA0;A <a href=\"#verb\">verb</a> may be in the <a href=\"#active\">active</a> or <a href=\"#passive\">passive</a> voice, and hence so may the sentence in which the verb appears. Compare <i class=\"word\">The dog chased the cat</i> (active) with <i class=\"word\">The cat was chased by the dog</i> (passive). This use of the term &apos;voice&apos; has no connection with &apos;<a href=\"#voicing\">voiced</a>&apos; or &apos;<a href=\"#voicing\">voiceless</a>&apos;.</p>In English, the grammatical voice of a verb is closely related to its meaning. In a sentence with an active verb the <a href=\"#subject\">subject</a> is typically the <a href=\"#theta_role\">Agent</a>, whereas in a sentence with a passive verb the subject is typically the <a href=\"#theta_role\">Patient</a> or the <a href=\"#theta_role\">Recipient</a>. Compare the active sentence <i class=\"word\">The girl gave her mother a present</i>, in which <i class=\"word\">the girl</i> is the subject and the Agent, with the passive sentences <i class=\"word\">A present was given to her mother</i>, in which <i class=\"word\">a present</i> is the subject and the Patient, and <i class=\"word\">Her mother was given a present</i>, in which <i class=\"word\">her mother</i> is the subject and Recipient.</div>In other languages, grammatical voice and meaning are less well aligned.  For example, in Greek, both Classical and Modern, verbs which are passive in form may have active meanings, usually when the agent and patient are the same.  Thus in Modern Greek, <i class=\"word\">&#x3C7;&#x3C4;&#x3B5;&#x3BD;&#x3AF;&#x3B6;&#x3C9;</i> means &quot;I comb&quot; or &quot;I am combing&quot; but is only used when the patient (the thing being combed) is not the subject. The passive form <i class=\"word\">&#x3C7;&#x3C4;&#x3B5;&#x3BD;&#x3AF;&#x3B6;&#x3BF;&#x3BC;&#x3B1;&#x3B9;</i> normally means &quot;I am combing [my hair]&quot; rather than &quot;I am being combed&quot;.</div>\r\n\r\n </div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"voiced",
      "definition_text":"See voicing.",
      "definition_html":"<p><a name=\"voiced\"><strong class=\"plus\">voiced</strong></a>&#xA0;&#xA0;See <a href=\"#voicing\">voicing</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"voiceless",
      "definition_text":"See voicing.",
      "definition_html":"<p><a name=\"voiceless\"><strong class=\"plus\">voiceless</strong></a>&#xA0;&#xA0;See <a href=\"#voicing\">voicing</a>.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"voicing",
      "definition_text":"Voicing refers to whether or not the vocal cords are vibrated during the production of a phone. Phones such as vowels or [b] or [d] in which the vocal cords are vibrated are said to be voiced. Phones such as [s] or [p] in which the vocal cords are not vibrated are said to be voiceless or unvoiced.",
      "definition_html":"<p><a name=\"voicing\"><strong class=\"plus\">voicing</strong></a>&#xA0;&#xA0;Voicing refers to whether or not the vocal cords are vibrated during the production of a <a href=\"#phone\">phone</a>. Phones such as <a href=\"#vowel\">vowels</a> or [b] or [d] in which the vocal cords are vibrated are said to be <strong>voiced</strong>. Phones such as [s] or [p] in which the vocal cords are not vibrated are said to be <strong>voiceless</strong> or unvoiced.</p>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"vowel",
      "definition_text":"(1) A phone which is produced by allowing lung air to pass over the vibrating vocal cords and then freely out of the mouth. Thus vowels can be continued until you run out of breath. The positions of the lips and tongue alter the size and shape of the resonating cavity to produce different sounds. (2) A letter of the alphabet usually pronounced using a vowel phone is also called a vowel. Be careful to distinguish these two usages. In a language with non-phonemic spelling, such as English, they can be quite different. The word site, for example, contains two vowel letters but only one vowel phone since the terminal e is not pronounced. See also consonant.",
      "definition_html":"<div><div><p><a name=\"vowel\"><strong class=\"plus\">vowel</strong></a>&#xA0;&#xA0;(1) A <a href=\"#phone\">phone</a> which is produced by allowing lung air to pass over the vibrating vocal cords and then freely out of the mouth. Thus vowels can be continued until you run out of breath. The positions of the lips and tongue alter the size and shape of the resonating cavity to produce different sounds. (2) A letter of the alphabet usually pronounced using a vowel phone is also called a vowel.</p>Be careful to distinguish these two usages. In a language with non-phonemic spelling, such as English, they can be quite different. The word <i class=\"word\">site,</i> for example, contains two vowel letters but only one vowel phone since the terminal <i class=\"word\">e</i> is not pronounced.</div>See also <a href=\"#consonant\">consonant</a>.</div>",
      "link":"https://www.cs.bham.ac.uk/~pxc/nlp/nlpgloss.html",
      "source":"University of Birmingham - Dr. Peter Coxhead"
   },
   {
      "terms":"AB testing",
      "definition_text":"A statistical way of comparing two (or more) techniques, typically an incumbent against a new rival. A/B testing aims to determine not only which technique performs better but also to understand whether the difference is statistically significant. A/B testing usually considers only two techniques using one measurement, but it can be applied to any finite number of techniques and measures.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"AB_testing\"></a>",
         "<h2 class=\"hide-from-toc\"> A/B testing</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#AB_testing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"accuracy",
      "definition_text":"The fraction of predictions that a classification model got right. In multi-class classification, accuracy is defined as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"accuracy\"></a>",
         "<h2 class=\"hide-from-toc\"> accuracy</h2>",
         "<p>The fraction of <a href=\"#prediction\"><strong>predictions</strong></a> that a\n<a href=\"#classification_model\"><strong>classification model</strong></a> got right. In\n<a href=\"#multi-class\"><strong>multi-class classification</strong></a>, accuracy\nis defined as follows:</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#classification_model\"><strong>classification model</strong></a>",
         "<strong>classification model</strong>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>",
         "<strong>multi-class classification</strong>",
         "<div>\n$$\\text{Accuracy} =\n\\frac{\\text{Correct Predictions}} {\\text{Total Number Of Examples}}$$\n</div>",
         "<p>In <a href=\"#binary_classification\"><strong>binary classification</strong></a>, accuracy has\nthe following definition:</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<div>\n$$\\text{Accuracy} = \\frac{\\text{True Positives} + \\text{True Negatives}}\n                         {\\text{Total Number Of Examples}}$$\n</div>",
         "<p>See <a href=\"#TP\"><strong>true positive</strong></a> and\n<a href=\"#TN\"><strong>true negative</strong></a>.</p>",
         "<a href=\"#TP\"><strong>true positive</strong></a>",
         "<strong>true positive</strong>",
         "<a href=\"#TN\"><strong>true negative</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#accuracy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"action",
      "definition_text":"In reinforcement learning, the mechanism by which the agent transitions between states of the environment. The agent chooses the action by using a policy.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"action\"></a>",
         "<h2 class=\"hide-from-toc\">action</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the mechanism by which the <a href=\"#agent\"><strong>agent</strong></a>\ntransitions between <a href=\"#state\"><strong>states</strong></a> of the\n<a href=\"#environment\"><strong>environment</strong></a>. The agent chooses the action by using a\n<a href=\"#policy\"><strong>policy</strong></a>.</p>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#state\"><strong>states</strong></a>",
         "<strong>states</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>",
         "<strong>environment</strong>",
         "<a href=\"#policy\"><strong>policy</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#action",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"activation function",
      "definition_text":"A function (for example, ReLU or sigmoid) that takes in the weighted sum of all of the inputs from the previous layer and then generates and passes an output value (typically nonlinear) to the next layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"activation_function\"></a>",
         "<h2 class=\"hide-from-toc\">activation function</h2>",
         "<p>A function (for example, <a href=\"#ReLU\"><strong>ReLU</strong></a> or <a href=\"#sigmoid_function\"><strong>sigmoid</strong></a>)\nthat takes in the weighted sum of all of the inputs from the previous layer\nand then generates and passes an output value (typically nonlinear) to the next\nlayer.</p>",
         "<a href=\"#ReLU\"><strong>ReLU</strong></a>",
         "<strong>ReLU</strong>",
         "<a href=\"#sigmoid_function\"><strong>sigmoid</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#activation_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"active learning",
      "definition_text":"A training approach in which the algorithm chooses some of the data it learns from. Active learning is particularly valuable when labeled examples are scarce or expensive to obtain. Instead of blindly seeking a diverse range of labeled examples, an active learning algorithm selectively seeks the particular range of examples it needs for learning.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"active_learning\"></a>",
         "<h2 class=\"hide-from-toc\">active learning</h2>",
         "<p>A <a href=\"#training\"><strong>training</strong></a> approach in which the\nalgorithm <em>chooses</em> some of the data it learns from. Active learning\nis particularly valuable when <a href=\"#labeled_example\"><strong>labeled examples</strong></a>\nare scarce or expensive to obtain. Instead of blindly seeking a diverse\nrange of labeled examples, an active learning algorithm selectively seeks\nthe particular range of examples it needs for learning.</p>",
         "<a href=\"#training\"><strong>training</strong></a>",
         "<strong>training</strong>",
         "<em>chooses</em>",
         "<a href=\"#labeled_example\"><strong>labeled examples</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#active_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"AdaGrad",
      "definition_text":"A sophisticated gradient descent algorithm that rescales the gradients of each parameter, effectively giving each parameter an independent learning rate. For a full explanation, see this paper.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"AdaGrad\"></a>",
         "<h2 class=\"hide-from-toc\"> AdaGrad</h2>",
         "<p>A sophisticated gradient descent algorithm that rescales the\ngradients of each parameter, effectively giving each parameter\nan independent <a href=\"#learning_rate\"><strong>learning rate</strong></a>. For a full explanation, see\n<a href=\"http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf\" target=\"T\">this paper</a>.</p>",
         "<a href=\"#learning_rate\"><strong>learning rate</strong></a>",
         "<strong>learning rate</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#AdaGrad",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"agent",
      "definition_text":"In reinforcement learning, the entity that uses a policy to maximize expected return gained from transitioning between states of the  environment.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"agent\"></a>",
         "<h2 class=\"hide-from-toc\"> agent</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the entity that uses a <a href=\"#policy\"><strong>policy</strong></a>\nto maximize expected <a href=\"#return\"><strong>return</strong></a> gained from transitioning\nbetween <a href=\"#state\"><strong>states</strong></a> of the  <a href=\"#environment\"><strong>environment</strong></a>.</p>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#return\"><strong>return</strong></a>",
         "<strong>return</strong>",
         "<a href=\"#state\"><strong>states</strong></a>",
         "<strong>states</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#agent",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"agglomerative clustering",
      "definition_text":"See hierarchical clustering.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"agglomerative_clustering\"></a>",
         "<h2 class=\"hide-from-toc\"> agglomerative clustering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>See <a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>.</p>",
         "<a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#agglomerative_clustering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"AR",
      "definition_text":"Abbreviation for augmented reality.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"AR\"></a>",
         "<h2 class=\"hide-from-toc\"> AR</h2>",
         "<p>Abbreviation for <a href=\"#augmented_reality\"><strong>augmented reality</strong></a>.</p>",
         "<a href=\"#augmented_reality\"><strong>augmented reality</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#AR",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"area under the pr curve",
      "definition_text":"See PR AUC (Area under the PR Curve).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"area_under_the_pr_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> area under the PR curve</h2>",
         "<p>See <a href=\"#PR_AUC\"><strong>PR AUC (Area under the PR Curve)</strong></a>.</p>",
         "<a href=\"#PR_AUC\"><strong>PR AUC (Area under the PR Curve)</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#area_under_the_pr_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"area under the ROC curve",
      "definition_text":"See AUC (Area under the ROC curve).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"area_under_the_ROC_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> area under the ROC curve</h2>",
         "<p>See <a href=\"#AUC\"><strong>AUC (Area under the ROC curve)</strong></a>.</p>",
         "<a href=\"#AUC\"><strong>AUC (Area under the ROC curve)</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#area_under_the_ROC_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"artificial general intelligence",
      "definition_text":"A non-human mechanism that demonstrates a broad range of problem solving, creativity, and adaptability. For example, a program demonstrating artificial general intelligence could translate text, compose symphonies, and excel at games that have not yet been invented.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"artificial_general_intelligence\"></a>",
         "<h2 class=\"hide-from-toc\"> artificial general intelligence</h2>",
         "<p>A non-human mechanism that demonstrates a <em>broad range</em> of problem solving,\ncreativity, and adaptability. For example, a program demonstrating artificial\ngeneral intelligence could translate text, compose symphonies, <em>and</em> excel at\ngames that have not yet been invented.</p>",
         "<em>broad range</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#artificial_general_intelligence",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"artificial intelligence",
      "definition_text":"A non-human program or model that can solve sophisticated tasks. For example, a program or model that translates text or a program or model that identifies diseases from radiologic images both exhibit artificial intelligence.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"artificial_intelligence\"></a>",
         "<h2 class=\"hide-from-toc\"> artificial intelligence</h2>",
         "<p>A non-human program or model that can solve sophisticated tasks. For example,\na program or model that translates text or a program or model that identifies\ndiseases from radiologic images both exhibit artificial intelligence.</p>",
         "<p>Formally, <a href=\"#machine_learning\"><strong>machine learning</strong></a> is a sub-field of artificial\nintelligence. However, in recent years, some organizations have begun using the\nterms <em>artificial intelligence</em> and <em>machine learning</em> interchangeably.</p>",
         "<a href=\"#machine_learning\"><strong>machine learning</strong></a>",
         "<strong>machine learning</strong>",
         "<em>artificial intelligence</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#artificial_intelligence",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"attribute",
      "definition_text":"Synonym for feature. In fairness, attributes often refer to characteristics pertaining to individuals.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"attribute\"></a>",
         "<h2 class=\"hide-from-toc\"> attribute</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Synonym for <a href=\"#feature\"><strong>feature</strong></a>. In fairness, attributes often refer to\ncharacteristics pertaining to individuals.</p>",
         "<a href=\"#feature\"><strong>feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#attribute",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"AUC",
      "definition_text":"An evaluation metric that considers all possible classification thresholds.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"AUC\"></a>",
         "<h2 class=\"hide-from-toc\"> AUC (Area under the ROC Curve)</h2>",
         "<p>An evaluation metric that considers all possible\n<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>.</p>",
         "<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>",
         "<strong>classification thresholds</strong>",
         "<p>The Area Under the <a href=\"#ROC\"><strong>ROC curve</strong></a> is the probability that a classifier\nwill be more confident that a randomly chosen positive example is actually\npositive than that a randomly chosen negative example is positive.</p>",
         "<a href=\"#ROC\"><strong>ROC curve</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#AUC",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"augmented reality",
      "definition_text":"A technology that superimposes a computer-generated image on a user's view of the real world, thus providing a composite view.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"augmented_reality\"></a>",
         "<h2 class=\"hide-from-toc\"> augmented reality</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#augmented_reality",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"automation bias",
      "definition_text":"When a human decision maker favors recommendations made by an automated decision-making system over information made without automation, even when the automated decision-making system makes errors.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"automation_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> automation bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#automation_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"average precision",
      "definition_text":"A metric for summarizing the performance of a ranked sequence of results. Average precision is calculated by taking the average of the precision values for each relevant result (each result in the ranked list where the recall increases relative to the previous result).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"average_precision\"></a>",
         "<h2 class=\"hide-from-toc\"> average precision </h2>",
         "<p>A metric for summarizing the performance of a ranked sequence of results.\nAverage precision is calculated by taking the average of the\n<a href=\"#precision\"><strong>precision</strong></a> values for each relevant result (each result in\nthe ranked list where the recall increases relative to the previous result).</p>",
         "<a href=\"#precision\"><strong>precision</strong></a>",
         "<strong>precision</strong>",
         "<p>See also <a href=\"#area_under_the_pr_curve\"><strong>Area under the PR Curve</strong></a>.</p>",
         "<a href=\"#area_under_the_pr_curve\"><strong>Area under the PR Curve</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#average_precision",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"backpropagation",
      "definition_text":"The primary algorithm for performing gradient descent on neural networks. First, the output values of each node are calculated (and cached) in a forward pass. Then, the partial derivative of the error with respect to each parameter is calculated in a backward pass through the graph.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"backpropagation\"></a>",
         "<h2 class=\"hide-from-toc\"> backpropagation</h2>",
         "<p>The primary algorithm for performing\n<a href=\"#gradient_descent\"><strong>gradient descent</strong></a> on\n<a href=\"#neural_network\"><strong>neural networks</strong></a>. First, the output values\nof each node are calculated (and cached) in a forward pass.\nThen, the <a href=\"#partial_derivative\"><strong>partial derivative</strong></a>\nof the error with respect to each parameter is calculated in a backward\npass through the graph.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<a href=\"#neural_network\"><strong>neural networks</strong></a>",
         "<strong>neural networks</strong>",
         "<a href=\"#partial_derivative\"><strong>partial derivative</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#backpropagation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bag of words",
      "definition_text":"A representation of the words in a phrase or passage, irrespective of order. For example, bag of words represents the following three phrases identically:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bag_of_words\"></a>",
         "<h2 class=\"hide-from-toc\"> bag of words</h2>",
         "<p>A representation of the words in a phrase or passage,\nirrespective of order. For example, bag of words represents the\nfollowing three phrases identically:</p>",
         "<ul>\n<li>the dog jumps</li>\n<li>jumps the dog</li>\n<li>dog jumps the</li>\n</ul>",
         "<li>the dog jumps</li>",
         "<li>jumps the dog</li>",
         "<li>dog jumps the</li>",
         "<p>Each word is mapped to an index in a <a href=\"#sparse_vector\"><strong>sparse vector</strong></a>, where\nthe vector has an index for every word in the vocabulary.  For example,\nthe phrase <em>the dog jumps</em> is mapped into a feature vector with non-zero\nvalues at the three indices corresponding to the words <em>the</em>, <em>dog</em>, and\n<em>jumps</em>. The non-zero value can be any of the following:</p>",
         "<a href=\"#sparse_vector\"><strong>sparse vector</strong></a>",
         "<strong>sparse vector</strong>",
         "<em>the dog jumps</em>",
         "<em>the</em>",
         "<em>dog</em>",
         "<em>jumps</em>",
         "<ul>\n<li>A 1 to indicate the presence of a word.</li>\n<li>A count of the number of times a word appears in the bag. For example,\nif the phrase were <em>the maroon dog is a dog with maroon fur</em>, then both\n<em>maroon</em> and <em>dog</em> would be represented as 2, while the other words would\nbe represented as 1.</li>\n<li>Some other value, such as the logarithm of the count of the number of\ntimes a word appears in the bag.</li>\n</ul>",
         "<li>A 1 to indicate the presence of a word.</li>",
         "<li>A count of the number of times a word appears in the bag. For example,\nif the phrase were <em>the maroon dog is a dog with maroon fur</em>, then both\n<em>maroon</em> and <em>dog</em> would be represented as 2, while the other words would\nbe represented as 1.</li>",
         "<em>the maroon dog is a dog with maroon fur</em>",
         "<em>maroon</em>",
         "<em>dog</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bag_of_words",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"baseline",
      "definition_text":"A model used as a reference point for comparing how well another model (typically, a more complex one) is performing. For example, a logistic regression model might serve as a good baseline for a deep model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"baseline\"></a>",
         "<h2 class=\"hide-from-toc\"> baseline</h2>",
         "<p>A <a href=\"#model\"><strong>model</strong></a> used as a reference point for comparing how well another\nmodel (typically, a more complex one) is performing. For example, a\n<a href=\"#logistic_regression\"><strong>logistic regression model</strong></a> might serve as a\ngood baseline for a <a href=\"#deep_model\"><strong>deep model</strong></a>.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<a href=\"#logistic_regression\"><strong>logistic regression model</strong></a>",
         "<strong>logistic regression model</strong>",
         "<a href=\"#deep_model\"><strong>deep model</strong></a>",
         "<strong>deep model</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#baseline",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"batch",
      "definition_text":"The set of examples used in one iteration (that is, one gradient update) of model training.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"batch\"></a>",
         "<h2 class=\"hide-from-toc\"> batch</h2>",
         "<p>The set of examples used in one <a href=\"#iteration\"><strong>iteration</strong></a> (that is, one\n<a href=\"#gradient\"><strong>gradient</strong></a> update) of\n<a href=\"#model_training\"><strong>model training</strong></a>.</p>",
         "<a href=\"#iteration\"><strong>iteration</strong></a>",
         "<strong>iteration</strong>",
         "<a href=\"#gradient\"><strong>gradient</strong></a>",
         "<strong>gradient</strong>",
         "<a href=\"#model_training\"><strong>model training</strong></a>",
         "<strong>model training</strong>",
         "<p>See also <a href=\"#batch_size\"><strong>batch size</strong></a>.</p>",
         "<a href=\"#batch_size\"><strong>batch size</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#batch",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"batch normalization",
      "definition_text":"Normalizing the input or output of the activation functions in a hidden layer. Batch normalization can provide the following benefits:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"batch_normalization\"></a>",
         "<h2 class=\"hide-from-toc\"> batch normalization</h2>",
         "<p><a href=\"#normalization\"><strong>Normalizing</strong></a> the input or output of the\n<a href=\"#activation_function\"><strong>activation functions</strong></a> in a\n<a href=\"#hidden_layer\"><strong>hidden layer</strong></a>. Batch normalization can\nprovide the following benefits:</p>",
         "<a href=\"#normalization\"><strong>Normalizing</strong></a>",
         "<strong>Normalizing</strong>",
         "<a href=\"#activation_function\"><strong>activation functions</strong></a>",
         "<strong>activation functions</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layer</strong></a>",
         "<strong>hidden layer</strong>",
         "<ul>\n<li>Make <a href=\"#neural_network\"><strong>neural networks</strong></a> more stable by protecting\nagainst <a href=\"#outliers\"><strong>outlier</strong></a> weights.</li>\n<li>Enable higher <a href=\"#learning_rate\"><strong>learning rates</strong></a>.</li>\n<li>Reduce <a href=\"#overfitting\"><strong>overfitting</strong></a>.</li>\n</ul>",
         "<li>Make <a href=\"#neural_network\"><strong>neural networks</strong></a> more stable by protecting\nagainst <a href=\"#outliers\"><strong>outlier</strong></a> weights.</li>",
         "<a href=\"#neural_network\"><strong>neural networks</strong></a>",
         "<strong>neural networks</strong>",
         "<a href=\"#outliers\"><strong>outlier</strong></a>",
         "<strong>outlier</strong>",
         "<li>Enable higher <a href=\"#learning_rate\"><strong>learning rates</strong></a>.</li>",
         "<a href=\"#learning_rate\"><strong>learning rates</strong></a>",
         "<strong>learning rates</strong>",
         "<li>Reduce <a href=\"#overfitting\"><strong>overfitting</strong></a>.</li>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#batch_normalization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"batch size",
      "definition_text":"The number of examples in a batch. For example, the batch size of SGD is 1, while the batch size of a mini-batch is usually between 10 and 1000. Batch size is usually fixed during training and inference; however, TensorFlow does permit dynamic batch sizes.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"batch_size\"></a>",
         "<h2 class=\"hide-from-toc\"> batch size</h2>",
         "<p>The number of examples in a <a href=\"#batch\"><strong>batch</strong></a>. For example, the batch size\nof <a href=\"#SGD\"><strong>SGD</strong></a> is 1, while the batch size of\na <a href=\"#mini-batch\"><strong>mini-batch</strong></a> is usually between 10 and 1000. Batch size is\nusually fixed during <a href=\"#training\"><strong>training</strong></a> and <a href=\"#inference\"><strong>inference</strong></a>;\nhowever, <a href=\"#TensorFlow\"><strong>TensorFlow</strong></a> does permit dynamic batch sizes.</p>",
         "<a href=\"#batch\"><strong>batch</strong></a>",
         "<strong>batch</strong>",
         "<a href=\"#SGD\"><strong>SGD</strong></a>",
         "<strong>SGD</strong>",
         "<a href=\"#mini-batch\"><strong>mini-batch</strong></a>",
         "<strong>mini-batch</strong>",
         "<a href=\"#training\"><strong>training</strong></a>",
         "<strong>training</strong>",
         "<a href=\"#inference\"><strong>inference</strong></a>",
         "<strong>inference</strong>",
         "<a href=\"#TensorFlow\"><strong>TensorFlow</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#batch_size",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Bayesian neural network",
      "definition_text":"A probabilistic neural network that accounts for uncertainty in weights and outputs. A standard neural network regression model typically predicts a scalar value; for example, a model predicts a house price of 853,000. By contrast, a Bayesian neural network predicts a distribution of values; for example, a model predicts a house price of 853,000 with a standard deviation of 67,200. A Bayesian neural network relies on  Bayes' Theorem to calculate uncertainties in weights and predictions. A Bayesian neural network can be useful when it is important to quantify uncertainty, such as in models related to pharmaceuticals. Bayesian neural networks can also help prevent overfitting.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Bayesian_neural_network\"></a>",
         "<h2 class=\"hide-from-toc\"> Bayesian neural network</h2>",
         "<p>A probabilistic <a href=\"#neural_network\"><strong>neural network</strong></a> that accounts for\nuncertainty in <a href=\"#weight\"><strong>weights</strong></a> and outputs. A standard neural network\nregression model typically <a href=\"#prediction\"><strong>predicts</strong></a> a scalar value;\nfor example, a model predicts a house price\nof 853,000. By contrast, a Bayesian neural network predicts a distribution of\nvalues; for example, a model predicts a house price of 853,000 with a standard\ndeviation of 67,200. A Bayesian neural network relies on\n<a href=\"https://betterexplained.com/articles/an-intuitive-and-short-explanation-of-bayes-theorem/\" target=\"T\">\nBayes' Theorem</a>\nto calculate uncertainties in weights and predictions. A Bayesian neural\nnetwork can be useful when it is important to quantify uncertainty, such as in\nmodels related to pharmaceuticals. Bayesian neural networks can also help\nprevent <a href=\"#overfitting\"><strong>overfitting</strong></a>.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#weight\"><strong>weights</strong></a>",
         "<strong>weights</strong>",
         "<a href=\"#prediction\"><strong>predicts</strong></a>",
         "<strong>predicts</strong>",
         "<a href=\"https://betterexplained.com/articles/an-intuitive-and-short-explanation-of-bayes-theorem/\" target=\"T\">\nBayes' Theorem</a>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Bayesian_neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bellman equation",
      "definition_text":"In reinforcement learning, the following identity satisfied by the optimal Q-function:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bellman_equation\"></a>",
         "<h2 class=\"hide-from-toc\"> Bellman equation</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the following identity satisfied by the optimal\n<a href=\"#q-function\"><strong>Q-function</strong></a>:</p>",
         "<a href=\"#q-function\"><strong>Q-function</strong></a>",
         "<strong>Q-function</strong>",
         "<p>\\[Q(s, a) = r(s, a) + \\gamma \\mathbb{E}_{s'|s,a} \\max_{a'} Q(s', a'))\\]</p>",
         "<p><a href=\"#reinforcement_learning\"><strong>Reinforcement learning</strong></a> algorithms apply this\nidentity to create <a href=\"#q-learning\"><strong>Q-learning</strong></a> via the following update rule:</p>",
         "<a href=\"#reinforcement_learning\"><strong>Reinforcement learning</strong></a>",
         "<strong>Reinforcement learning</strong>",
         "<a href=\"#q-learning\"><strong>Q-learning</strong></a>",
         "<strong>Q-learning</strong>",
         "<p>\\[Q(s,a) \\gets Q(s,a) + \\alpha\n  \\left[r(s,a)\n      + \\gamma \\displaystyle\\max_{\\substack{a_1}} Q(s\u2019,a\u2019)\n    - Q(s,a) \\right]\n\\]</p>",
         "<p>Beyond reinforcement learning, the Bellman equation has applications to\ndynamic programming. See the\n<a href=\"https://wikipedia.org/wiki/Bellman_equation\" target=\"T\">\nWikipedia entry for Bellman Equation</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bellman_equation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bias ethics",
      "definition_text":"1. Stereotyping, prejudice or favoritism towards some things, people, or groups over others. These biases can affect collection and interpretation of data, the design of a system, and how users interact with a system.  Forms of this type of bias include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bias_ethics\"></a>",
         "<h2 class=\"hide-from-toc\"> bias (ethics/fairness)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>\n1. Stereotyping, prejudice or favoritism towards some things, people,\nor groups over others. These biases can affect collection and\ninterpretation of data, the design of a system, and how users interact\nwith a system.  Forms of this type of bias include:\n</p>",
         "<ul>\n<li><a href=\"#automation_bias\"><strong>automation bias</strong></a></li>\n<li><a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a></li>\n<li><a href=\"#confirmation_bias\"><strong>experimenter\u2019s bias</strong></a></li>\n<li><a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a></li>\n<li><a href=\"#implicit_bias\"><strong>implicit bias</strong></a></li>\n<li><a href=\"#in-group_bias\"><strong>in-group bias</strong></a></li>\n<li><a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a></li>\n</ul>",
         "<li><a href=\"#automation_bias\"><strong>automation bias</strong></a></li>",
         "<a href=\"#automation_bias\"><strong>automation bias</strong></a>",
         "<strong>automation bias</strong>",
         "<li><a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a></li>",
         "<a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a>",
         "<strong>confirmation bias</strong>",
         "<li><a href=\"#confirmation_bias\"><strong>experimenter\u2019s bias</strong></a></li>",
         "<a href=\"#confirmation_bias\"><strong>experimenter\u2019s bias</strong></a>",
         "<strong>experimenter\u2019s bias</strong>",
         "<li><a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a></li>",
         "<a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a>",
         "<strong>group attribution bias</strong>",
         "<li><a href=\"#implicit_bias\"><strong>implicit bias</strong></a></li>",
         "<a href=\"#implicit_bias\"><strong>implicit bias</strong></a>",
         "<strong>implicit bias</strong>",
         "<li><a href=\"#in-group_bias\"><strong>in-group bias</strong></a></li>",
         "<a href=\"#in-group_bias\"><strong>in-group bias</strong></a>",
         "<strong>in-group bias</strong>",
         "<li><a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a></li>",
         "<a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a>",
         "<strong>out-group homogeneity bias</strong>",
         "<p>\n2. Systematic error introduced by a sampling or reporting procedure.\nForms of this type of bias include:\n</p>",
         "<ul>\n<li><a href=\"#selection_bias\"><strong>coverage bias</strong></a></li>\n<li><a href=\"#selection_bias\"><strong>non-response bias</strong></a></li>\n<li><a href=\"#participation_bias\"><strong>participation bias</strong></a></li>\n<li><a href=\"#reporting_bias\"><strong>reporting bias</strong></a></li>\n<li><a href=\"#selection_bias\"><strong>sampling bias</strong></a></li>\n<li><a href=\"#selection_bias\"><strong>selection bias</strong></a></li>\n</ul>",
         "<li><a href=\"#selection_bias\"><strong>coverage bias</strong></a></li>",
         "<a href=\"#selection_bias\"><strong>coverage bias</strong></a>",
         "<strong>coverage bias</strong>",
         "<li><a href=\"#selection_bias\"><strong>non-response bias</strong></a></li>",
         "<a href=\"#selection_bias\"><strong>non-response bias</strong></a>",
         "<strong>non-response bias</strong>",
         "<li><a href=\"#participation_bias\"><strong>participation bias</strong></a></li>",
         "<a href=\"#participation_bias\"><strong>participation bias</strong></a>",
         "<strong>participation bias</strong>",
         "<li><a href=\"#reporting_bias\"><strong>reporting bias</strong></a></li>",
         "<a href=\"#reporting_bias\"><strong>reporting bias</strong></a>",
         "<strong>reporting bias</strong>",
         "<li><a href=\"#selection_bias\"><strong>sampling bias</strong></a></li>",
         "<a href=\"#selection_bias\"><strong>sampling bias</strong></a>",
         "<strong>sampling bias</strong>",
         "<li><a href=\"#selection_bias\"><strong>selection bias</strong></a></li>",
         "<a href=\"#selection_bias\"><strong>selection bias</strong></a>",
         "<strong>selection bias</strong>",
         "<p>Not to be confused with the <a href=\"#bias\">bias term</a> in machine learning models\nor <a href=\"#prediction_bias\"><strong>prediction bias</strong></a>.</p>",
         "<a href=\"#bias\">bias term</a>",
         "<a href=\"#prediction_bias\"><strong>prediction bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bias_ethics",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bias",
      "definition_text":"An intercept or offset from an origin. Bias (also known as the bias term) is referred to as b or w0 in machine learning models.  For example, bias is the b in the following formula:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bias\"></a>",
         "<h2 class=\"hide-from-toc\"> bias (math)</h2>",
         "<p>An intercept or offset from an origin. Bias (also known as the\n<strong>bias term</strong>) is referred to as <em>b</em> or <i>w<sub>0</sub></i> in\nmachine learning models.  For example, bias is the <em>b</em> in the\nfollowing formula:</p>",
         "<strong>bias term</strong>",
         "<em>b</em>",
         "<i>w<sub>0</sub></i>",
         "<sub>0</sub>",
         "<em>b</em>",
         "<div>\n$$y' = b + w_1x_1 + w_2x_2 + \u2026 w_nx_n$$\n</div>",
         "<p>Not to be confused with <a href=\"#bias_ethics\"><strong>bias in ethics and fairness</strong></a>\nor <a href=\"#prediction_bias\"><strong>prediction bias</strong></a>.</p>",
         "<a href=\"#bias_ethics\"><strong>bias in ethics and fairness</strong></a>",
         "<strong>bias in ethics and fairness</strong>",
         "<a href=\"#prediction_bias\"><strong>prediction bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bigram",
      "definition_text":"An N-gram in which N=2.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bigram\"></a>",
         "<h2 class=\"hide-from-toc\"> bigram</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>An <a href=\"#N-gram\"><strong>N-gram</strong></a> in which N=2.</p>",
         "<a href=\"#N-gram\"><strong>N-gram</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bigram",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"binary classification",
      "definition_text":"A type of classification task that outputs one of two mutually exclusive classes. For example, a machine learning model that evaluates email messages and outputs either \"spam\" or \"not spam\" is a binary classifier.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"binary_classification\"></a>",
         "<h2 class=\"hide-from-toc\"> binary classification</h2>",
         "<p>A type of <a href=\"#classification_model\"><strong>classification</strong></a> task that outputs one\nof two mutually exclusive <a href=\"#class\"><strong>classes</strong></a>. For example, a machine\nlearning model that evaluates email messages and outputs either \"spam\" or\n\"not spam\" is a <a href=\"#binary_classification\"><strong>binary classifier</strong></a>.</p>",
         "<a href=\"#classification_model\"><strong>classification</strong></a>",
         "<strong>classification</strong>",
         "<a href=\"#class\"><strong>classes</strong></a>",
         "<strong>classes</strong>",
         "<a href=\"#binary_classification\"><strong>binary classifier</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#binary_classification",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"binning",
      "definition_text":"See bucketing.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"binning\"></a>",
         "<h2 class=\"hide-from-toc\"> binning</h2>",
         "<p>See <a href=\"#bucketing\"><strong>bucketing</strong></a>.</p>",
         "<a href=\"#bucketing\"><strong>bucketing</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#binning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"boosting",
      "definition_text":"A machine learning technique that iteratively combines a set of simple and not very accurate classifiers (referred to as \"weak\" classifiers) into a classifier with high accuracy (a \"strong\" classifier) by upweighting the examples that the model is currently misclassfying.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"boosting\"></a>",
         "<h2 class=\"hide-from-toc\"> boosting</h2>",
         "<p>A machine learning technique that iteratively combines a set of simple and\nnot very accurate classifiers (referred to as \"weak\" classifiers) into a\nclassifier with high accuracy (a \"strong\" classifier) by\n<a href=\"#upweighting\"><strong>upweighting</strong></a> the examples that the model is currently\nmisclassfying.</p>",
         "<a href=\"#upweighting\"><strong>upweighting</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#boosting",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bounding box",
      "definition_text":"In an image, the (x, y) coordinates of a rectangle around an area of interest, such as the dog in the image below.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bounding_box\"></a>",
         "<h2 class=\"hide-from-toc\"> bounding box</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In an image, the (<em>x</em>, <em>y</em>) coordinates of a rectangle around an area of\ninterest, such as the dog in the image below.</p>",
         "<em>x</em>",
         "<em>y</em>",
         "<p>\n<img alt=\"Photograph of a dog sitting on a sofa. A green bounding box\n          with top-left coordinates of (275, 1271) and bottom-right\n          coordinates of (2954, 2761) circumscribes the dog's body\" src=\"/machine-learning/glossary/images/bounding_box.jpg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bounding_box",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"broadcasting",
      "definition_text":"Expanding the shape of an operand in a matrix math operation to dimensions compatible for that operation. For instance, linear algebra requires that the two operands in a matrix addition operation must have the same dimensions. Consequently, you can't add a matrix of shape (m, n) to a vector of length n. Broadcasting enables this operation by virtually expanding the vector of length n to a matrix of shape (m,n) by replicating the same values down each column.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"broadcasting\"></a>",
         "<h2 class=\"hide-from-toc\"> broadcasting</h2>",
         "<p>Expanding the shape of an operand in a matrix math operation to\n<a href=\"#dimensions\"><strong>dimensions</strong></a> compatible for that operation. For instance,\nlinear algebra requires that the two operands in a matrix addition operation\nmust have the same dimensions. Consequently, you can't add a matrix of shape\n(m, n) to a vector of length n. Broadcasting enables this operation by\nvirtually expanding the vector of length n to a matrix of shape (m,n) by\nreplicating the same values down each column.</p>",
         "<a href=\"#dimensions\"><strong>dimensions</strong></a>",
         "<strong>dimensions</strong>",
         "<p>For example, given the following definitions, linear algebra prohibits\nA+B because A and B have different dimensions:</p>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\"><code dir=\"ltr\" translate=\"no\">A = [[7, 10, 4],\n     [13, 5, 9]]\nB = [2]\n</code></pre>",
         "<code dir=\"ltr\" translate=\"no\">A = [[7, 10, 4],\n     [13, 5, 9]]\nB = [2]\n</code>",
         "<p>However, broadcasting enables the operation A+B by virtually expanding B to:</p>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\"><code dir=\"ltr\" translate=\"no\"> [[2, 2, 2],\n  [2, 2, 2]]\n</code></pre>",
         "<code dir=\"ltr\" translate=\"no\"> [[2, 2, 2],\n  [2, 2, 2]]\n</code>",
         "<p>Thus, A+B is now a valid operation:</p>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\"><code dir=\"ltr\" translate=\"no\">[[7, 10, 4],  +  [[2, 2, 2],  =  [[ 9, 12, 6],\n [13, 5, 9]]      [2, 2, 2]]      [15, 7, 11]]\n</code></pre>",
         "<code dir=\"ltr\" translate=\"no\">[[7, 10, 4],  +  [[2, 2, 2],  =  [[ 9, 12, 6],\n [13, 5, 9]]      [2, 2, 2]]      [15, 7, 11]]\n</code>",
         "<p>See the following description of\n<a href=\"https://docs.scipy.org/doc/numpy-1.15.0/user/basics.broadcasting.html\" target=\"T\">broadcasting in NumPy</a> for more details.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#broadcasting",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"bucketing",
      "definition_text":"Converting a (usually continuous) feature into multiple binary features called buckets or bins, typically based on value range. For example, instead of representing temperature as a single continuous floating-point feature, you could chop ranges of temperatures into discrete bins. Given temperature data sensitive to a tenth of a degree, all temperatures between 0.0 and 15.0 degrees could be put into one bin, 15.1 to 30.0 degrees could be a second bin, and 30.1 to 50.0 degrees could be a third bin.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"bucketing\"></a>",
         "<h2 class=\"hide-from-toc\"> bucketing</h2>",
         "<p>Converting a (usually <a href=\"#continuous_feature\"><strong>continuous</strong></a>) feature into\nmultiple binary features called buckets or bins, typically based on value\nrange. For example, instead of representing temperature as a single\ncontinuous floating-point feature, you could chop ranges of temperatures\ninto discrete bins. Given temperature data sensitive to a tenth of a degree,\nall temperatures between 0.0 and 15.0 degrees could be put into one bin,\n15.1 to 30.0 degrees could be a second bin, and 30.1 to 50.0 degrees could\nbe a third bin.</p>",
         "<a href=\"#continuous_feature\"><strong>continuous</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#bucketing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"calibration layer",
      "definition_text":"A post-prediction adjustment, typically to account for prediction bias. The adjusted predictions and probabilities should match the distribution of an observed set of labels.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"calibration_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> calibration layer</h2>",
         "<p>A post-prediction adjustment, typically to account for\n<a href=\"#prediction_bias\"><strong>prediction bias</strong></a>. The adjusted predictions and\nprobabilities should match the distribution of an observed set of labels.</p>",
         "<a href=\"#prediction_bias\"><strong>prediction bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#calibration_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"candidate generation",
      "definition_text":"The initial set of recommendations chosen by a recommendation system. For example, consider a bookstore that offers 100,000 titles. The candidate generation phase creates a much smaller list of suitable books for a particular user, say 500. But even 500 books is way too many to recommend to a user. Subsequent, more expensive, phases of a recommendation system (such as scoring and re-ranking) whittle down those 500 to a much smaller, more useful set of recommendations.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"candidate_generation\"></a>",
         "<h2 class=\"hide-from-toc\"> candidate generation</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>The initial set of recommendations chosen by a recommendation system. For\nexample, consider a bookstore that offers 100,000 titles. The candidate\ngeneration phase creates a much smaller list of suitable books for a\nparticular user, say 500. But even 500 books is way too many to recommend\nto a user. Subsequent, more expensive, phases of a recommendation system\n(such as <a href=\"#scoring\"><strong>scoring</strong></a> and <a href=\"#re-ranking\"><strong>re-ranking</strong></a>) whittle\ndown those 500 to a much smaller, more useful set of recommendations.</p>",
         "<a href=\"#scoring\"><strong>scoring</strong></a>",
         "<strong>scoring</strong>",
         "<a href=\"#re-ranking\"><strong>re-ranking</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#candidate_generation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"candidate sampling",
      "definition_text":"A training-time optimization in which a probability is calculated for all the positive labels, using, for example, softmax, but only for a random sample of negative labels. For example, if we have an example labeled beagle and dog candidate sampling computes the predicted probabilities and corresponding loss terms for the beagle and dog class outputs in addition to a random subset of the remaining classes (cat, lollipop, fence). The idea is that the negative classes can learn from less frequent negative reinforcement as long as positive classes always get proper positive reinforcement, and this is indeed observed empirically. The motivation for candidate sampling is a computational efficiency win from not computing predictions for all negatives.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"candidate_sampling\"></a>",
         "<h2 class=\"hide-from-toc\"> candidate sampling</h2>",
         "<p>A training-time optimization in which a probability is calculated for all the\npositive labels, using, for example, <a href=\"#softmax\"><strong>softmax</strong></a>,\nbut only for a random\nsample of negative labels. For example, if we have an example labeled\n<em>beagle</em> and <em>dog</em> candidate sampling computes the predicted probabilities\nand corresponding loss terms for the <em>beagle</em> and <em>dog</em> class outputs\nin addition to a random subset of the remaining classes\n(<em>cat</em>, <em>lollipop</em>, <em>fence</em>). The idea is that the\n<a href=\"#negative_class\"><strong>negative classes</strong></a> can learn from less frequent\nnegative reinforcement as long as\n<a href=\"#positive_class\"><strong>positive classes</strong></a> always get proper positive\nreinforcement, and this is indeed observed empirically. The motivation for\ncandidate sampling is a computational efficiency win from not computing\npredictions for all negatives.</p>",
         "<a href=\"#softmax\"><strong>softmax</strong></a>",
         "<strong>softmax</strong>",
         "<em>beagle</em>",
         "<em>dog</em>",
         "<em>beagle</em>",
         "<em>dog</em>",
         "<em>cat</em>",
         "<em>lollipop</em>",
         "<em>fence</em>",
         "<a href=\"#negative_class\"><strong>negative classes</strong></a>",
         "<strong>negative classes</strong>",
         "<a href=\"#positive_class\"><strong>positive classes</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#candidate_sampling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"categorical data",
      "definition_text":"Features having a discrete set of possible values. For example, consider a categorical feature named house style, which has a discrete set of three possible values: Tudor, ranch, colonial. By representing house style as categorical data, the model can learn the separate impacts of Tudor, ranch, and colonial on house price.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"categorical_data\"></a>",
         "<h2 class=\"hide-from-toc\"> categorical data</h2>",
         "<p><a href=\"#feature\"><strong>Features</strong></a> having a discrete set of possible values. For example,\nconsider a categorical feature named <code dir=\"ltr\" translate=\"no\">house style</code>, which has a discrete set of\nthree possible values: <code dir=\"ltr\" translate=\"no\">Tudor, ranch, colonial</code>. By representing <code dir=\"ltr\" translate=\"no\">house style</code>\nas categorical data, the model can learn the separate impacts of <code dir=\"ltr\" translate=\"no\">Tudor</code>,\n<code dir=\"ltr\" translate=\"no\">ranch</code>, and <code dir=\"ltr\" translate=\"no\">colonial</code> on house price.</p>",
         "<a href=\"#feature\"><strong>Features</strong></a>",
         "<strong>Features</strong>",
         "<code dir=\"ltr\" translate=\"no\">house style</code>",
         "<code dir=\"ltr\" translate=\"no\">Tudor, ranch, colonial</code>",
         "<code dir=\"ltr\" translate=\"no\">house style</code>",
         "<code dir=\"ltr\" translate=\"no\">Tudor</code>",
         "<code dir=\"ltr\" translate=\"no\">ranch</code>",
         "<code dir=\"ltr\" translate=\"no\">colonial</code>",
         "<p>Sometimes, values in the discrete set are mutually exclusive, and only one\nvalue can be applied to a given example. For example, a <code dir=\"ltr\" translate=\"no\">car maker</code>\ncategorical feature would probably permit only a single value (<code dir=\"ltr\" translate=\"no\">Toyota</code>)\nper example.  Other times, more than one value may be applicable. A single\ncar could be painted more than one different color, so a <code dir=\"ltr\" translate=\"no\">car color</code>\ncategorical feature would likely permit a single example to have multiple\nvalues (for example, <code dir=\"ltr\" translate=\"no\">red</code> and <code dir=\"ltr\" translate=\"no\">white</code>).</p>",
         "<code dir=\"ltr\" translate=\"no\">car maker</code>",
         "<code dir=\"ltr\" translate=\"no\">Toyota</code>",
         "<code dir=\"ltr\" translate=\"no\">car color</code>",
         "<code dir=\"ltr\" translate=\"no\">red</code>",
         "<code dir=\"ltr\" translate=\"no\">white</code>",
         "<p>Categorical features are sometimes called\n<a href=\"#discrete_feature\"><strong>discrete features</strong></a>.</p>",
         "<a href=\"#discrete_feature\"><strong>discrete features</strong></a>",
         "<strong>discrete features</strong>",
         "<p>Contrast with <a href=\"#numerical_data\"><strong>numerical data</strong></a>.</p>",
         "<a href=\"#numerical_data\"><strong>numerical data</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#categorical_data",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"centroid",
      "definition_text":"The center of a cluster as determined by a k-means or k-median algorithm. For instance, if k is 3, then the k-means or k-median algorithm finds 3 centroids.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"centroid\"></a>",
         "<h2 class=\"hide-from-toc\">centroid</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>The center of a cluster as determined by a <a href=\"#k-means\"><strong>k-means</strong></a> or\n<a href=\"#k-median\"><strong>k-median</strong></a> algorithm. For instance, if k is 3,\nthen the k-means or k-median algorithm finds 3 centroids.</p>",
         "<a href=\"#k-means\"><strong>k-means</strong></a>",
         "<strong>k-means</strong>",
         "<a href=\"#k-median\"><strong>k-median</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#centroid",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"centroid based clustering",
      "definition_text":"A category of clustering algorithms that organizes data into nonhierarchical clusters. k-means is the most widely used centroid-based clustering algorithm.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"centroid_based_clustering\"></a>",
         "<h2 class=\"hide-from-toc\"> centroid-based clustering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>A category of <a href=\"#clustering\"><strong>clustering</strong></a> algorithms that organizes data\ninto nonhierarchical clusters. <a href=\"#k-means\"><strong>k-means</strong></a> is the most widely\nused centroid-based clustering algorithm.</p>",
         "<a href=\"#clustering\"><strong>clustering</strong></a>",
         "<strong>clustering</strong>",
         "<a href=\"#k-means\"><strong>k-means</strong></a>",
         "<strong>k-means</strong>",
         "<p>Contrast with <a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>\nalgorithms.</p>",
         "<a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#centroid_based_clustering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"checkpoint",
      "definition_text":"Data that captures the state of the variables of a model at a particular time. Checkpoints enable exporting model weights, as well as performing training across multiple sessions. Checkpoints also enable training to continue past errors (for example, job preemption). Note that the graph itself is not included in a checkpoint.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"checkpoint\"></a>",
         "<h2 class=\"hide-from-toc\"> checkpoint</h2>",
         "<p>Data that captures the state of the variables of a model at a particular\ntime. Checkpoints enable exporting model <a href=\"#weight\"><strong>weights</strong></a>, as well\nas performing training across multiple sessions. Checkpoints also enable\ntraining to continue past errors (for example, job preemption). Note that\nthe <a href=\"#graph\"><strong>graph</strong></a> itself is not included in a checkpoint.</p>",
         "<a href=\"#weight\"><strong>weights</strong></a>",
         "<strong>weights</strong>",
         "<a href=\"#graph\"><strong>graph</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#checkpoint",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"class",
      "definition_text":"One of a set of enumerated target values for a label. For example, in a binary classification model that detects spam, the two classes are spam and not spam.  In a multi-class classification model that identifies dog breeds, the classes would be poodle, beagle, pug, and so on.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"class\"></a>",
         "<h2 class=\"hide-from-toc\"> class</h2>",
         "<p>One of a set of enumerated target values for a label. For example, in a\n<a href=\"#binary_classification\"><strong>binary classification</strong></a> model that detects\nspam, the two classes are <em>spam</em> and <em>not spam</em>.  In a\n<a href=\"#multi-class\"><strong>multi-class classification</strong></a> model that\nidentifies dog breeds, the classes would be <em>poodle</em>, <em>beagle</em>, <em>pug</em>, and so\non.</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<em>spam</em>",
         "<em>not spam</em>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>",
         "<strong>multi-class classification</strong>",
         "<em>poodle</em>",
         "<em>beagle</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"classification model",
      "definition_text":"A type of machine learning model for distinguishing among two or more discrete classes. For example, a natural language processing classification model could determine whether an input sentence was in French, Spanish, or Italian. Compare with regression model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"classification_model\"></a>",
         "<h2 class=\"hide-from-toc\"> classification model</h2>",
         "<p>A type of machine learning model for distinguishing among two or more\ndiscrete classes. For example, a natural language processing classification\nmodel could determine whether an input sentence was in French, Spanish,\nor Italian. Compare with <a href=\"#regression_model\"><strong>regression model</strong></a>.</p>",
         "<a href=\"#regression_model\"><strong>regression model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#classification_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"classification threshold",
      "definition_text":"A scalar-value criterion that is applied to a model's predicted score in order to separate the positive class from the negative class.  Used when mapping logistic regression results to binary classification. For example, consider a logistic regression model that determines the probability of a given email message being spam. If the classification threshold is 0.9, then logistic regression values above 0.9 are classified as spam and those below 0.9 are classified as not spam.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"classification_threshold\"></a>",
         "<h2 class=\"hide-from-toc\"> classification threshold</h2>",
         "<p>A scalar-value criterion that is applied to a model's predicted score in order\nto separate the <a href=\"#positive_class\"><strong>positive class</strong></a> from the <a href=\"#negative_class\"><strong>negative\nclass</strong></a>.  Used when mapping\n<a href=\"#logistic_regression\"><strong>logistic regression</strong></a> results to\n<a href=\"#binary_classification\"><strong>binary classification</strong></a>. For example, consider\na logistic regression model that determines the probability of a given email\nmessage being spam. If the classification threshold is 0.9, then logistic\nregression values above 0.9 are classified as <em>spam</em> and those below\n0.9 are classified as <em>not spam</em>.</p>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>",
         "<strong>positive class</strong>",
         "<a href=\"#negative_class\"><strong>negative\nclass</strong></a>",
         "<strong>negative\nclass</strong>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>",
         "<strong>logistic regression</strong>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<em>spam</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#classification_threshold",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"class imbalanced data set",
      "definition_text":"A binary classification problem in which the labels for the two classes have significantly different frequencies.  For example, a disease dataset in which 0.0001 of examples have positive labels and 0.9999 have negative labels is a class-imbalanced problem, but a football game predictor in which 0.51 of examples label one team winning and 0.49 label the other team winning is not a class-imbalanced problem.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"class_imbalanced_data_set\"></a>",
         "<h2 class=\"hide-from-toc\"> class-imbalanced dataset</h2>",
         "<p>A <a href=\"#binary_classification\"><strong>binary classification</strong></a> problem in which the\n<a href=\"#label\"><strong>labels</strong></a> for the two classes have significantly different\nfrequencies.  For example, a disease dataset in which 0.0001 of examples\nhave positive labels and 0.9999 have negative labels is a class-imbalanced\nproblem, but a football game predictor in which 0.51 of examples label one\nteam winning and 0.49 label the other team winning is <em>not</em> a\nclass-imbalanced problem.</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<a href=\"#label\"><strong>labels</strong></a>",
         "<strong>labels</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#class_imbalanced_data_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"clipping",
      "definition_text":"A technique for handling outliers. Specifically, reducing feature values that are greater than a set maximum value down to that maximum value. Also, increasing feature values that are less than a specific minimum value up to that minimum value.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"clipping\"></a>",
         "<h2 class=\"hide-from-toc\"> clipping</h2>",
         "<p>A technique for handling <a href=\"#outliers\"><strong>outliers</strong></a>. Specifically, reducing\nfeature values that are greater than a set maximum value down to that maximum\nvalue. Also, increasing feature values that are less than a specific minimum\nvalue up to that minimum value.</p>",
         "<a href=\"#outliers\"><strong>outliers</strong></a>",
         "<strong>outliers</strong>",
         "<p>For example, suppose that only a few feature values fall outside the\nrange 40\u201360. In this case, you could do the following:</p>",
         "<ul>\n<li>Clip all values over 60 to be exactly 60.</li>\n<li>Clip all values under 40 to be exactly 40.</li>\n</ul>",
         "<li>Clip all values over 60 to be exactly 60.</li>",
         "<li>Clip all values under 40 to be exactly 40.</li>",
         "<p>In addition to bringing <em>input values</em> within a designated range, clipping\ncan also used to force <em>gradient values</em> within a designated range during\ntraining.</p>",
         "<em>input values</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#clipping",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Cloud TPU",
      "definition_text":"A specialized hardware accelerator designed to speed up machine learning workloads on Google Cloud Platform.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Cloud_TPU\"></a>",
         "<h2 class=\"hide-from-toc\"> Cloud TPU </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Cloud_TPU",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"clustering",
      "definition_text":"Grouping related examples, particularly during unsupervised learning. Once all the examples are grouped, a human can optionally supply meaning to each cluster.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"clustering\"></a>",
         "<h2 class=\"hide-from-toc\">clustering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>Grouping related <a href=\"#example\"><strong>examples</strong></a>, particularly during\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised learning</strong></a>. Once all the\nexamples are grouped, a human can optionally supply meaning to each cluster.</p>",
         "<a href=\"#example\"><strong>examples</strong></a>",
         "<strong>examples</strong>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised learning</strong></a>",
         "<strong>unsupervised learning</strong>",
         "<p>Many clustering algorithms exist.  For example, the <a href=\"#k-means\"><strong>k-means</strong></a>\nalgorithm clusters examples based on their proximity to a\n<a href=\"#centroid\"><strong>centroid</strong></a>, as in the following diagram:</p>",
         "<a href=\"#k-means\"><strong>k-means</strong></a>",
         "<strong>k-means</strong>",
         "<a href=\"#centroid\"><strong>centroid</strong></a>",
         "<strong>centroid</strong>",
         "<p>\n<img src=\"/machine-learning/glossary/images/Cluster.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/Cluster.svg\"/>",
         "<p>A human researcher could then review the clusters and, for example,\nlabel cluster 1 as \"dwarf trees\" and cluster 2 as \"full-size trees.\"</p>",
         "<p>As another example, consider a clustering algorithm based on an\nexample's distance from a center point, illustrated as follows:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/RingCluster.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#clustering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"co-adaptation",
      "definition_text":"When neurons predict patterns in training data by relying almost exclusively on outputs of specific other neurons instead of relying on the network's behavior as a whole. When the patterns that cause co-adaption are not present in validation data, then co-adaptation causes overfitting. Dropout regularization reduces co-adaptation because dropout ensures neurons cannot rely solely on specific other neurons.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"co-adaptation\"></a>",
         "<h2 class=\"hide-from-toc\"> co-adaptation</h2>",
         "<p>When <a href=\"#neuron\"><strong>neurons</strong></a> predict patterns in training data by relying\nalmost exclusively on outputs of specific other neurons instead of relying on\nthe network's behavior as a whole. When the patterns that cause co-adaption\nare not present in validation data, then co-adaptation causes overfitting.\n<a href=\"#dropout_regularization\"><strong>Dropout regularization</strong></a> reduces co-adaptation\nbecause dropout ensures neurons cannot rely solely on specific other neurons.</p>",
         "<a href=\"#neuron\"><strong>neurons</strong></a>",
         "<strong>neurons</strong>",
         "<a href=\"#dropout_regularization\"><strong>Dropout regularization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#co-adaptation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"collaborative filtering",
      "definition_text":"Making predictions about the interests of one user based on the interests of many other users.  Collaborative filtering is often used in recommendation systems.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"collaborative_filtering\"></a>",
         "<h2 class=\"hide-from-toc\"> collaborative filtering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>Making <a href=\"#prediction\"><strong>predictions</strong></a> about the interests of one user\nbased on the interests of many other users.  Collaborative filtering\nis often used in <a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#collaborative_filtering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"confirmation bias",
      "definition_text":"The tendency to search for, interpret, favor, and recall information in a way that confirms one's preexisting beliefs or hypotheses. Machine learning developers may inadvertently collect or label data in ways that influence an outcome supporting their existing beliefs.  Confirmation bias is a form of implicit bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"confirmation_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> confirmation bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>The tendency to search for, interpret, favor, and recall information in a\nway that confirms one's preexisting beliefs or hypotheses.\nMachine learning developers may inadvertently collect or label\ndata in ways that influence an outcome supporting their existing\nbeliefs.  Confirmation bias is a form of <a href=\"#implicit_bias\"><strong>implicit bias</strong></a>.</p>",
         "<a href=\"#implicit_bias\"><strong>implicit bias</strong></a>",
         "<strong>implicit bias</strong>",
         "<p><strong>Experimenter's bias</strong> is a form of confirmation bias in which\nan experimenter continues training models until a preexisting\nhypothesis is confirmed.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#confirmation_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"confusion matrix",
      "definition_text":"An NxN table that summarizes how successful a classification model's predictions were; that is, the correlation between the label and the model's classification. One axis of a confusion matrix is the label that the model predicted, and the other axis is the actual label. N represents the number of classes. In a binary classification problem, N=2. For example, here is a sample confusion matrix for a binary classification problem:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"confusion_matrix\"></a>",
         "<h2 class=\"hide-from-toc\"> confusion matrix</h2>",
         "<p>An NxN table that summarizes how successful a\n<a href=\"#classification_model\"><strong>classification model's</strong></a> predictions were; that is,\nthe correlation between the label and the model's classification. One axis of\na confusion matrix is the <a href=\"#label\"><strong>label</strong></a> that the model predicted, and the\nother axis is the actual label. N represents the number of\n<a href=\"#class\"><strong>classes</strong></a>. In a <a href=\"#binary_classification\"><strong>binary classification</strong></a>\nproblem, N=2. For example, here is a sample confusion matrix for a\nbinary classification problem:</p>",
         "<a href=\"#classification_model\"><strong>classification model's</strong></a>",
         "<strong>classification model's</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#class\"><strong>classes</strong></a>",
         "<strong>classes</strong>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<table>\n<thead>\n<tr>\n<th></th>\n<th>Tumor (predicted)</th>\n<th>Non-Tumor (predicted)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Tumor (actual)</td>\n<td>18</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Non-Tumor (actual)</td>\n<td>6</td>\n<td>452</td>\n</tr>\n</tbody>\n</table>",
         "<thead>\n<tr>\n<th></th>\n<th>Tumor (predicted)</th>\n<th>Non-Tumor (predicted)</th>\n</tr>\n</thead>",
         "<tr>\n<th></th>\n<th>Tumor (predicted)</th>\n<th>Non-Tumor (predicted)</th>\n</tr>",
         "<th></th>",
         "<th>Tumor (predicted)</th>",
         "<th>Non-Tumor (predicted)</th>",
         "<tbody>\n<tr>\n<td>Tumor (actual)</td>\n<td>18</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Non-Tumor (actual)</td>\n<td>6</td>\n<td>452</td>\n</tr>\n</tbody>",
         "<tr>\n<td>Tumor (actual)</td>\n<td>18</td>\n<td>1</td>\n</tr>",
         "<td>Tumor (actual)</td>",
         "<td>18</td>",
         "<td>1</td>",
         "<tr>\n<td>Non-Tumor (actual)</td>\n<td>6</td>\n<td>452</td>\n</tr>",
         "<td>Non-Tumor (actual)</td>",
         "<td>6</td>",
         "<td>452</td>",
         "<p>The preceding confusion matrix shows that of the 19 samples that actually had\ntumors, the model correctly classified 18 as having tumors\n(18 <a href=\"#TP\"><strong>true positives</strong></a>), and incorrectly classified 1 as\nnot having a tumor (1 <a href=\"#FN\"><strong>false negative</strong></a>). Similarly, of\n458 samples that actually did not have tumors, 452 were correctly classified\n(452 <a href=\"#TN\"><strong>true negatives</strong></a>) and 6 were\nincorrectly classified (6 <a href=\"#FP\"><strong>false positives</strong></a>).</p>",
         "<a href=\"#TP\"><strong>true positives</strong></a>",
         "<strong>true positives</strong>",
         "<a href=\"#FN\"><strong>false negative</strong></a>",
         "<strong>false negative</strong>",
         "<a href=\"#TN\"><strong>true negatives</strong></a>",
         "<strong>true negatives</strong>",
         "<a href=\"#FP\"><strong>false positives</strong></a>",
         "<strong>false positives</strong>",
         "<p>The confusion matrix for a <a href=\"#multi-class\"><strong>multi-class classification</strong></a>\nproblem can help you determine mistake patterns. For example, a\nconfusion matrix could reveal that a model trained to recognize handwritten\ndigits tends to mistakenly predict 9 instead of 4, or 1 instead of 7.</p>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>",
         "<strong>multi-class classification</strong>",
         "<p>Confusion matrices contain sufficient information to calculate a\nvariety of performance metrics, including <a href=\"#precision\"><strong>precision</strong></a>\nand <a href=\"#recall\"><strong>recall</strong></a>.</p>",
         "<a href=\"#precision\"><strong>precision</strong></a>",
         "<strong>precision</strong>",
         "<a href=\"#recall\"><strong>recall</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#confusion_matrix",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"continuous feature",
      "definition_text":"A floating-point feature with an infinite range of possible values. Contrast with discrete feature.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"continuous_feature\"></a>",
         "<h2 class=\"hide-from-toc\"> continuous feature</h2>",
         "<p>A floating-point feature with an infinite range of possible values.\nContrast with <a href=\"#discrete_feature\"><strong>discrete feature</strong></a>.</p>",
         "<a href=\"#discrete_feature\"><strong>discrete feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#continuous_feature",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convenience sampling",
      "definition_text":"Using a dataset not gathered scientifically in order to run quick experiments. Later on, it's essential to switch to a scientifically gathered dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convenience_sampling\"></a>",
         "<h2 class=\"hide-from-toc\"> convenience sampling</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convenience_sampling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convergence",
      "definition_text":"Informally, often refers to a state reached during training in which training loss and validation loss change very little or not at all with each iteration after a certain number of iterations. In other words, a model reaches convergence when additional training on the current data will not improve the model. In deep learning, loss values sometimes stay constant or nearly so for many iterations before finally descending, temporarily producing a false sense of convergence.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convergence\"></a>",
         "<h2 class=\"hide-from-toc\"> convergence</h2>",
         "<p>Informally, often refers to a state reached during <a href=\"#training\"><strong>training</strong></a>\nin which training <a href=\"#loss\"><strong>loss</strong></a> and <a href=\"#validation\"><strong>validation</strong></a> loss\nchange very little or not at all\nwith each iteration after a certain number of iterations. In other words, a\nmodel reaches convergence when additional training on the current data will\nnot improve the model. In <a href=\"#deep_model\"><strong>deep learning</strong></a>, loss values\nsometimes stay constant or nearly so for many iterations before finally\ndescending, temporarily producing a false sense of convergence.</p>",
         "<a href=\"#training\"><strong>training</strong></a>",
         "<strong>training</strong>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#validation\"><strong>validation</strong></a>",
         "<strong>validation</strong>",
         "<a href=\"#deep_model\"><strong>deep learning</strong></a>",
         "<strong>deep learning</strong>",
         "<p>See also <a href=\"#early_stopping\"><strong>early stopping</strong></a>.</p>",
         "<a href=\"#early_stopping\"><strong>early stopping</strong></a>",
         "<strong>early stopping</strong>",
         "<p>See also Boyd and Vandenberghe,\n<a href=\"https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf\" target=\"T\">Convex Optimization</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convergence",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convex function",
      "definition_text":"A function in which the region above the graph of the function is a convex set.  The prototypical convex function is shaped something like the letter U.  For example, the following are all convex functions:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convex_function\"></a>",
         "<h2 class=\"hide-from-toc\"> convex function</h2>",
         "<p>A function in which the region above the graph of the function is a\n<a href=\"#convex_set\"><strong>convex set</strong></a>.  The prototypical convex function is\nshaped something like the letter <strong>U</strong>.  For example, the following\nare all convex functions:</p>",
         "<a href=\"#convex_set\"><strong>convex set</strong></a>",
         "<strong>convex set</strong>",
         "<strong>U</strong>",
         "<p>\n<img alt=\"A typical convex function is shaped like the letter 'U'.\" height=\"300\" src=\"/machine-learning/glossary/images/convex_functions.png\"/>\n</p>",
         "<img alt=\"A typical convex function is shaped like the letter 'U'.\" height=\"300\" src=\"/machine-learning/glossary/images/convex_functions.png\"/>",
         "<p>By contrast, the following function is not convex.  Notice how the\nregion above the graph is not a convex set:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/nonconvex_function.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/nonconvex_function.svg\"/>",
         "<p>A <strong>strictly convex function</strong> has exactly one local minimum point, which\nis also the global minimum point. The classic U-shaped functions are\nstrictly convex functions.  However, some convex functions\n(for example, straight lines) are not U-shaped.</p>",
         "<strong>strictly convex function</strong>",
         "<p>A lot of the common <a href=\"#loss\"><strong>loss functions</strong></a>, including the\nfollowing, are convex functions:</p>",
         "<a href=\"#loss\"><strong>loss functions</strong></a>",
         "<strong>loss functions</strong>",
         "<ul>\n<li><a href=\"#L2_loss\"><strong>L<sub>2</sub> loss</strong></a></li>\n<li><a href=\"#Log_Loss\"><strong>Log Loss</strong></a></li>\n<li><a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a></li>\n<li><a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a></li>\n</ul>",
         "<li><a href=\"#L2_loss\"><strong>L<sub>2</sub> loss</strong></a></li>",
         "<a href=\"#L2_loss\"><strong>L<sub>2</sub> loss</strong></a>",
         "<strong>L<sub>2</sub> loss</strong>",
         "<sub>2</sub>",
         "<li><a href=\"#Log_Loss\"><strong>Log Loss</strong></a></li>",
         "<a href=\"#Log_Loss\"><strong>Log Loss</strong></a>",
         "<strong>Log Loss</strong>",
         "<li><a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a></li>",
         "<a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a>",
         "<strong>L<sub>1</sub> regularization</strong>",
         "<sub>1</sub>",
         "<li><a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a></li>",
         "<a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>",
         "<strong>L<sub>2</sub> regularization</strong>",
         "<sub>2</sub>",
         "<p>Many variations of <a href=\"#gradient_descent\"><strong>gradient descent</strong></a> are\nguaranteed to find a point close to the minimum of a\nstrictly convex function.  Similarly, many variations of\n<a href=\"#SGD\"><strong>stochastic gradient descent</strong></a> have a high probability\n(though, not a guarantee) of finding a point close to the minimum of a\nstrictly convex function.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<a href=\"#SGD\"><strong>stochastic gradient descent</strong></a>",
         "<strong>stochastic gradient descent</strong>",
         "<p>The sum of two convex functions (for example,\nL<sub>2</sub> loss + L<sub>1</sub> regularization) is a convex function.</p>",
         "<sub>2</sub>",
         "<sub>1</sub>",
         "<p><a href=\"#deep_model\"><strong>Deep models</strong></a> are never convex functions.\nRemarkably, algorithms designed for\n<a href=\"#convex_optimization\"><strong>convex optimization</strong></a> tend to find\nreasonably good solutions on deep networks anyway, even though\nthose solutions are not guaranteed to be a global minimum.</p>",
         "<a href=\"#deep_model\"><strong>Deep models</strong></a>",
         "<strong>Deep models</strong>",
         "<a href=\"#convex_optimization\"><strong>convex optimization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convex_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convex optimization",
      "definition_text":"The process of using mathematical techniques such as gradient descent to find the minimum of a convex function. A great deal of research in machine learning has focused on formulating various problems as convex optimization problems and in solving those problems more efficiently.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convex_optimization\"></a>",
         "<h2 class=\"hide-from-toc\">convex optimization</h2>",
         "<p>The process of using mathematical techniques such as\n<a href=\"#gradient_descent\"><strong>gradient descent</strong></a> to find\nthe minimum of a <a href=\"#convex_function\"><strong>convex function</strong></a>.\nA great deal of research in machine learning has focused on formulating various\nproblems as convex optimization problems and in solving those problems more\nefficiently.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<a href=\"#convex_function\"><strong>convex function</strong></a>",
         "<strong>convex function</strong>",
         "<p>For complete details, see Boyd and Vandenberghe,\n<a href=\"https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf\" target=\"T\">Convex\nOptimization</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convex_optimization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convex set",
      "definition_text":"A subset of Euclidean space such that a line drawn between any two points in the subset remains completely within the subset.  For instance, the following two shapes are convex sets:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convex_set\"></a>",
         "<h2 class=\"hide-from-toc\">convex set</h2>",
         "<p>A subset of Euclidean space such that a line drawn between any two points in the\nsubset remains completely within the subset.  For instance, the following two\nshapes are convex sets:</p>",
         "<p>\n<img alt=\"A rectangle\nand a semi-ellipse are both convex sets.\" src=\"/machine-learning/glossary/images/convex_set.png\"/>\n</p>",
         "<img alt=\"A rectangle\nand a semi-ellipse are both convex sets.\" src=\"/machine-learning/glossary/images/convex_set.png\"/>",
         "<p>By contrast, the following two shapes are not convex sets:</p>",
         "<p>\n<img alt=\"A pie-chart\nwith a missing slice and a firework are both nonconvex sets.\" src=\"/machine-learning/glossary/images/nonconvex_set.png\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convex_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convolution",
      "definition_text":"In mathematics, casually speaking, a mixture of two functions. In machine learning, a convolution mixes the convolutional filter and the input matrix in order to train weights.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convolution\"></a>",
         "<h2 class=\"hide-from-toc\">convolution</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In mathematics, casually speaking, a mixture of two functions. In machine\nlearning, a convolution mixes the convolutional filter and the input matrix\nin order to train <a href=\"#weight\"><strong>weights</strong></a>.</p>",
         "<a href=\"#weight\"><strong>weights</strong></a>",
         "<strong>weights</strong>",
         "<p>The term \"convolution\" in machine learning is often a shorthand way of\nreferring to either <a href=\"#convolutional_operation\"><strong>convolutional operation</strong></a>\nor <a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>.</p>",
         "<a href=\"#convolutional_operation\"><strong>convolutional operation</strong></a>",
         "<strong>convolutional operation</strong>",
         "<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>",
         "<strong>convolutional layer</strong>",
         "<p>Without convolutions, a machine learning algorithm would have to learn\na separate weight for every cell in a large <a href=\"#tensor\"><strong>tensor</strong></a>.  For example,\na machine learning algorithm training on 2K x 2K images would be forced to\nfind 4M separate weights. Thanks to convolutions, a machine learning\nalgorithm only has to find weights for every cell in the\n<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>, dramatically reducing\nthe memory needed to train the model.  When the convolutional filter is\napplied, it is simply replicated across cells such that each is multiplied\nby the filter.</p>",
         "<a href=\"#tensor\"><strong>tensor</strong></a>",
         "<strong>tensor</strong>",
         "<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convolution",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convolutional filter",
      "definition_text":"One of the two actors in a convolutional operation. (The other actor is a slice of an input matrix.) A convolutional filter is a matrix having the same rank as the input matrix, but a smaller shape. For example, given a 28x28 input matrix, the filter could be any 2D matrix smaller than 28x28.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convolutional_filter\"></a>",
         "<h2 class=\"hide-from-toc\">convolutional filter</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>One of the two actors in a\n<a href=\"#convolutional_operation\"><strong>convolutional operation</strong></a>. (The other actor\nis a slice of an input matrix.) A convolutional filter is a matrix having\nthe same <a href=\"#rank\"><strong>rank</strong></a> as the input matrix, but a smaller shape.\nFor example, given a 28x28 input matrix, the filter could be any 2D matrix\nsmaller than 28x28.</p>",
         "<a href=\"#convolutional_operation\"><strong>convolutional operation</strong></a>",
         "<strong>convolutional operation</strong>",
         "<a href=\"#rank\"><strong>rank</strong></a>",
         "<strong>rank</strong>",
         "<p>In photographic manipulation, all the cells in a convolutional filter are\ntypically set to a constant pattern of ones and zeroes. In machine learning,\nconvolutional filters are typically seeded with random numbers and then the\nnetwork <a href=\"#training\"><strong>trains</strong></a> the ideal values.</p>",
         "<a href=\"#training\"><strong>trains</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convolutional_filter",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convolutional layer",
      "definition_text":"A layer of a deep neural network in which a convolutional filter passes along an input matrix.  For example, consider the following 3x3 convolutional filter:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convolutional_layer\"></a>",
         "<h2 class=\"hide-from-toc\">convolutional layer</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>A layer of a <a href=\"#deep_model\"><strong>deep neural network</strong></a> in which a\n<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a> passes along an input\nmatrix.  For example, consider the following 3x3\n<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>:</p>",
         "<a href=\"#deep_model\"><strong>deep neural network</strong></a>",
         "<strong>deep neural network</strong>",
         "<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>",
         "<strong>convolutional filter</strong>",
         "<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>",
         "<strong>convolutional filter</strong>",
         "<p>\n<img src=\"/machine-learning/glossary/images/ConvolutionalFilter33.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/ConvolutionalFilter33.svg\"/>",
         "<p>The following animation shows a convolutional layer consisting of 9\nconvolutional operations involving the 5x5 input matrix. Notice that each\nconvolutional operation works on a different 3x3 slice of the input matrix.\nThe resulting 3x3 matrix (on the right) consists of the results of the 9\nconvolutional operations:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/AnimatedConvolution.gif\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convolutional_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convolutional neural network",
      "definition_text":"A neural network in which at least one layer is a convolutional layer. A typical convolutional neural network consists of some combination of the following layers:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convolutional_neural_network\"></a>",
         "<h2 class=\"hide-from-toc\">convolutional neural network</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>A <a href=\"#neural_network\"><strong>neural network</strong></a> in which at least one layer is a\n<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>. A typical convolutional\nneural network consists of some combination of the following layers:</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>",
         "<strong>convolutional layer</strong>",
         "<ul>\n<li><a href=\"#convolutional_layer\"><strong>convolutional layers</strong></a></li>\n<li><a href=\"#pooling\"><strong>pooling layers</strong></a></li>\n<li><a href=\"#dense_layer\"><strong>dense layers</strong></a></li>\n</ul>",
         "<li><a href=\"#convolutional_layer\"><strong>convolutional layers</strong></a></li>",
         "<a href=\"#convolutional_layer\"><strong>convolutional layers</strong></a>",
         "<strong>convolutional layers</strong>",
         "<li><a href=\"#pooling\"><strong>pooling layers</strong></a></li>",
         "<a href=\"#pooling\"><strong>pooling layers</strong></a>",
         "<strong>pooling layers</strong>",
         "<li><a href=\"#dense_layer\"><strong>dense layers</strong></a></li>",
         "<a href=\"#dense_layer\"><strong>dense layers</strong></a>",
         "<strong>dense layers</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convolutional_neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"convolutional operation",
      "definition_text":"The following two-step mathematical operation:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"convolutional_operation\"></a>",
         "<h2 class=\"hide-from-toc\">convolutional operation</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>The following two-step mathematical operation:</p>",
         "<ol>\n<li>Element-wise multiplication of the\n<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a> and a slice of an\ninput matrix. (The slice of the input matrix has the same rank and\nsize as the convolutional filter.)</li>\n<li>Summation of all the values in the resulting product matrix.</li>\n</ol>",
         "<li>Element-wise multiplication of the\n<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a> and a slice of an\ninput matrix. (The slice of the input matrix has the same rank and\nsize as the convolutional filter.)</li>",
         "<a href=\"#convolutional_filter\"><strong>convolutional filter</strong></a>",
         "<strong>convolutional filter</strong>",
         "<li>Summation of all the values in the resulting product matrix.</li>",
         "<p>For example, consider the following 5x5 input matrix:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/ConvolutionalLayerInputMatrix.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/ConvolutionalLayerInputMatrix.svg\"/>",
         "<p>Now imagine the following 2x2 convolutional filter:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/ConvolutionalLayerFilter.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/ConvolutionalLayerFilter.svg\"/>",
         "<p>Each convolutional operation involves a single 2x2 slice of the\ninput matrix. For instance, suppose we use the 2x2 slice at the\ntop-left of the input matrix.  So, the convolution operation on\nthis slice looks as follows:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/ConvolutionalLayerOperation.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/ConvolutionalLayerOperation.svg\"/>",
         "<p>A <a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a> consists of a\nseries of convolutional operations, each acting on a different slice\nof the input matrix.</p>",
         "<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#convolutional_operation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"cost",
      "definition_text":"Synonym for loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"cost\"></a>",
         "<h2 class=\"hide-from-toc\"> cost</h2>",
         "<p>Synonym for <a href=\"#loss\"><strong>loss</strong></a>.</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#cost",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"counterfactual fairness",
      "definition_text":"A fairness metric that checks whether a classifier produces the same result for one individual as it does for another individual who is identical to the first, except with respect to one or more sensitive attributes. Evaluating a classifier for counterfactual fairness is one method for surfacing potential sources of bias in a model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"counterfactual_fairness\"></a>",
         "<h2 class=\"hide-from-toc\"> counterfactual fairness </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a>",
         "<strong>sensitive attributes</strong>",
         "<p>See\n<a href=\"https://papers.nips.cc/paper/7220-when-worlds-collide-integrating-different-counterfactual-assumptions-in-fairness.pdf\" target=\"T\">\"When Worlds\nCollide: Integrating Different Counterfactual Assumptions in Fairness\"</a>\nfor a more detailed discussion of counterfactual fairness.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#counterfactual_fairness",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"coverage bias",
      "definition_text":"See selection bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"coverage_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> coverage bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>See <a href=\"#selection_bias\"><strong>selection bias</strong></a>.</p>",
         "<a href=\"#selection_bias\"><strong>selection bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#coverage_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"crash blossom",
      "definition_text":"A sentence or phrase with an ambiguous meaning. Crash blossoms present a significant problem in natural language understanding. For example, the headline Red Tape Holds Up Skyscraper is a crash blossom because an NLU model could interpret the headline literally or figuratively.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"crash_blossom\"></a>",
         "<h2 class=\"hide-from-toc\"> crash blossom</h2>",
         "<p>A sentence or phrase with an ambiguous meaning.\nCrash blossoms present a significant problem in <a href=\"#natural_language_understanding\"><strong>natural\nlanguage understanding</strong></a>.\nFor example, the headline <em>Red Tape Holds Up Skyscraper</em> is a\ncrash blossom because an NLU model could interpret the headline literally or\nfiguratively.</p>",
         "<a href=\"#natural_language_understanding\"><strong>natural\nlanguage understanding</strong></a>",
         "<strong>natural\nlanguage understanding</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#crash_blossom",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"critic",
      "definition_text":"Synonym for Deep Q-Network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"critic\"></a>",
         "<h2 class=\"hide-from-toc\"> critic</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>Synonym for <a href=\"#deep_q-network\"><strong>Deep Q-Network</strong></a>.</p>",
         "<a href=\"#deep_q-network\"><strong>Deep Q-Network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#critic",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"cross-entropy",
      "definition_text":"A generalization of Log Loss to multi-class classification problems. Cross-entropy quantifies the difference between two probability distributions.  See also perplexity.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"cross-entropy\"></a>",
         "<h2 class=\"hide-from-toc\"> cross-entropy</h2>",
         "<p>A generalization of <a href=\"#Log_Loss\"><strong>Log Loss</strong></a> to\n<a href=\"#multi-class\"><strong>multi-class classification problems</strong></a>. Cross-entropy\nquantifies the difference between two probability distributions.  See also\n<a href=\"#perplexity\"><strong>perplexity</strong></a>.</p>",
         "<a href=\"#Log_Loss\"><strong>Log Loss</strong></a>",
         "<strong>Log Loss</strong>",
         "<a href=\"#multi-class\"><strong>multi-class classification problems</strong></a>",
         "<strong>multi-class classification problems</strong>",
         "<a href=\"#perplexity\"><strong>perplexity</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#cross-entropy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"cross-validation",
      "definition_text":"A mechanism for estimating how well a model will generalize to new data by testing the model against one or more non-overlapping data subsets withheld from the training set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"cross-validation\"></a>",
         "<h2 class=\"hide-from-toc\"> cross-validation</h2>",
         "<p>A mechanism for estimating how well a model will generalize to new data by\ntesting the model against one or more non-overlapping data subsets withheld\nfrom the <a href=\"#training_set\"><strong>training set</strong></a>.</p>",
         "<a href=\"#training_set\"><strong>training set</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#cross-validation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"custom estimator",
      "definition_text":"An Estimator that you write yourself by following these directions.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"custom_estimator\"></a>",
         "<h2 class=\"hide-from-toc\"> custom Estimator</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An <a href=\"#Estimators\"><strong>Estimator</strong></a> that you write yourself by following\n<a href=\"https://www.tensorflow.org/guide/custom_estimators\" target=\"T\">these directions</a>.</p>",
         "<a href=\"#Estimators\"><strong>Estimator</strong></a>",
         "<strong>Estimator</strong>",
         "<a href=\"https://www.tensorflow.org/guide/custom_estimators\" target=\"T\">these directions</a>",
         "<p>Contrast with <a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a>.</p>",
         "<a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#custom_estimator",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"data analysis",
      "definition_text":"Obtaining an understanding of data by considering samples, measurement, and visualization. Data analysis can be particularly useful when a dataset is first received, before one builds the first model. It is also crucial in understanding experiments and debugging problems with the system.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"data_analysis\"></a>",
         "<h2 class=\"hide-from-toc\"> data analysis</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#data_analysis",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"data augmentation",
      "definition_text":"Artificially boosting the range and number of training examples by transforming existing examples to create additional examples. For example, suppose images are one of your features, but your dataset doesn't contain enough image examples for the model to learn useful associations. Ideally, you'd add enough labeled images to your dataset to enable your model to train properly. If that's not possible, data augmentation can rotate, stretch, and reflect each image to produce many variants of the original picture, possibly yielding enough labeled data to enable excellent training.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"data_augmentation\"></a>",
         "<h2 class=\"hide-from-toc\"> data augmentation</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>Artificially boosting the range and number of <a href=\"#training\"><strong>training</strong></a> examples\nby transforming existing examples to create additional examples. For example,\nsuppose images are one of your features, but your dataset doesn't contain\nenough image examples for the model to learn useful associations. Ideally,\nyou'd add enough <a href=\"#label\"><strong>labeled</strong></a> images to your dataset to enable your\nmodel to train properly. If that's not possible, data augmentation can rotate,\nstretch, and reflect each image to produce many variants of the original\npicture, possibly yielding enough labeled data to enable excellent training.</p>",
         "<a href=\"#training\"><strong>training</strong></a>",
         "<strong>training</strong>",
         "<a href=\"#label\"><strong>labeled</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#data_augmentation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"DataFrame",
      "definition_text":"A popular datatype for representing datasets in pandas. A DataFrame is analogous to a table. Each column of the DataFrame has a name (a header), and each row is identified by a number.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"DataFrame\"></a>",
         "<h2 class=\"hide-from-toc\"> DataFrame</h2>",
         "<p>A popular datatype for representing datasets in <a href=\"#pandas\"><strong>pandas</strong></a>. A\nDataFrame is analogous to a table. Each column of the DataFrame has a name (a\nheader), and each row is identified by a number.</p>",
         "<a href=\"#pandas\"><strong>pandas</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#DataFrame",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"data set",
      "definition_text":"A collection of examples.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"data_set\"></a>",
         "<h2 class=\"hide-from-toc\"> data set or dataset</h2>",
         "<p>A collection of <a href=\"#example\"><strong>examples</strong></a>.</p>",
         "<a href=\"#example\"><strong>examples</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#data_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dataset API",
      "definition_text":"A high-level TensorFlow API for reading data and transforming it into a form that a machine learning algorithm requires. A tf.data.Dataset object represents a sequence of elements, in which each element contains one or more Tensors. A tf.data.Iterator object provides access to the elements of a Dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dataset_API\"></a>",
         "<h2 class=\"hide-from-toc\"> Dataset API (tf.data)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A high-level <a href=\"#TensorFlow\"><strong>TensorFlow</strong></a> API for reading data and\ntransforming it into a form that a machine learning algorithm requires.\nA <code dir=\"ltr\" translate=\"no\">tf.data.Dataset</code> object represents a sequence of elements, in which\neach element contains one or more <a href=\"#tensor\"><strong>Tensors</strong></a>. A <code dir=\"ltr\" translate=\"no\">tf.data.Iterator</code>\nobject provides access to the elements of a <code dir=\"ltr\" translate=\"no\">Dataset</code>.</p>",
         "<a href=\"#TensorFlow\"><strong>TensorFlow</strong></a>",
         "<strong>TensorFlow</strong>",
         "<code dir=\"ltr\" translate=\"no\">tf.data.Dataset</code>",
         "<a href=\"#tensor\"><strong>Tensors</strong></a>",
         "<strong>Tensors</strong>",
         "<code dir=\"ltr\" translate=\"no\">tf.data.Iterator</code>",
         "<code dir=\"ltr\" translate=\"no\">Dataset</code>",
         "<p>For details about the Dataset API, see\n<a href=\"https://www.tensorflow.org/programmers_guide/datasets\" target=\"T\">Importing Data</a>\nin the TensorFlow Programmer's Guide.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dataset_API",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"decision boundary",
      "definition_text":"The separator between classes learned by a model in a binary class or multi-class classification problems. For example, in the following image representing a binary classification problem, the decision boundary is the frontier between the orange class and the blue class:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"decision_boundary\"></a>",
         "<h2 class=\"hide-from-toc\"> decision boundary</h2>",
         "<p>The separator between classes learned by a model in a\n<a href=\"#binary_classification\"><strong>binary class</strong></a> or\n<a href=\"#multi-class\"><strong>multi-class classification problems</strong></a>. For example,\nin the following image representing a binary classification problem,\nthe decision boundary is the frontier between the orange class and\nthe blue class:</p>",
         "<a href=\"#binary_classification\"><strong>binary class</strong></a>",
         "<strong>binary class</strong>",
         "<a href=\"#multi-class\"><strong>multi-class classification problems</strong></a>",
         "<strong>multi-class classification problems</strong>",
         "<p>\n<img alt=\"A\nwell-defined boundary between one class and another.\" src=\"/machine-learning/glossary/images/decision_boundary.png\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#decision_boundary",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"decision threshold",
      "definition_text":"Synonym for classification threshold.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"decision_threshold\"></a>",
         "<h2 class=\"hide-from-toc\"> decision threshold</h2>",
         "<p>Synonym for <a href=\"#classification_threshold\"><strong>classification threshold</strong></a>.</p>",
         "<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#decision_threshold",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"decision tree",
      "definition_text":"A model represented as a sequence of branching statements. For example, the following over-simplified decision tree branches a few times to predict the price of a house (in thousands of USD).  According to this decision tree, a house larger than 160 square meters, having more than three bedrooms, and built less than 10 years ago would have a predicted price of 510 thousand USD.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"decision_tree\"></a>",
         "<h2 class=\"hide-from-toc\"> decision tree</h2>",
         "<p>A model represented as a sequence of branching statements. For example, the\nfollowing over-simplified decision tree branches a few times to\npredict the price of a house (in thousands of USD).  According to this\ndecision tree, a house larger than 160 square meters, having more than three\nbedrooms, and built less than 10 years ago would have a predicted price of\n510 thousand USD.</p>",
         "<p>\n<img alt=\"A\ntree three-levels deep whose branches predict house prices.\" src=\"/machine-learning/glossary/images/DecisionTree.svg\"/>\n</p>",
         "<img alt=\"A\ntree three-levels deep whose branches predict house prices.\" src=\"/machine-learning/glossary/images/DecisionTree.svg\"/>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#decision_tree",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"deep model",
      "definition_text":"A type of neural network containing multiple hidden layers.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"deep_model\"></a>",
         "<h2 class=\"hide-from-toc\"> deep model</h2>",
         "<p>A type of <a href=\"#neural_network\"><strong>neural network</strong></a> containing multiple\n<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>",
         "<strong>hidden layers</strong>",
         "<p>Contrast with <a href=\"#wide_model\"><strong>wide model</strong></a>.</p>",
         "<a href=\"#wide_model\"><strong>wide model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#deep_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"deep neural network",
      "definition_text":"Synonym for deep model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"deep_neural_network\"></a>",
         "<h2 class=\"hide-from-toc\"> deep neural network</h2>",
         "<p>Synonym for <a href=\"#deep_model\"><strong>deep model</strong></a>.</p>",
         "<a href=\"#deep_model\"><strong>deep model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#deep_neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"deep q-network",
      "definition_text":"In Q-learning, a deep neural network that predicts Q-functions.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"deep_q-network\"></a>",
         "<h2 class=\"hide-from-toc\"> Deep Q-Network (DQN)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In <a href=\"#q-learning\"><strong>Q-learning</strong></a>, a deep <a href=\"#neural_network\"><strong>neural network</strong></a>\nthat predicts <a href=\"#q-function\"><strong>Q-functions</strong></a>.</p>",
         "<a href=\"#q-learning\"><strong>Q-learning</strong></a>",
         "<strong>Q-learning</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#q-function\"><strong>Q-functions</strong></a>",
         "<strong>Q-functions</strong>",
         "<p><strong>Critic</strong> is a synonym for Deep Q-Network.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#deep_q-network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"demographic parity",
      "definition_text":"A fairness metric that is satisfied if the results of a model's classification are not dependent on a given sensitive attribute.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"demographic_parity\"></a>",
         "<h2 class=\"hide-from-toc\"> demographic parity</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>A <a href=\"#fairness_metric\"><strong>fairness metric</strong></a> that is satisfied if\nthe results of a model's classification are not dependent on a\ngiven <a href=\"#sensitive_attribute\"><strong>sensitive attribute</strong></a>.</p>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attribute</strong></a>",
         "<strong>sensitive attribute</strong>",
         "<p>For example, if both Lilliputians and Brobdingnagians apply to\nGlubbdubdrib University, demographic parity is achieved if the percentage\nof Lilliputians admitted is the same as the percentage of Brobdingnagians\nadmitted, irrespective of whether one group is on average more qualified\nthan the other.</p>",
         "<p>Contrast with <a href=\"#equalized_odds\"><strong>equalized odds</strong></a> and\n<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a>, which permit\nclassification results in aggregate to depend on sensitive attributes,\nbut do not permit classification results for certain specified ground-truth\nlabels to depend on sensitive attributes.  See\n<a href=\"http://research.google.com/bigpicture/attacking-discrimination-in-ml/\" target=\"T\">\"Attacking\ndiscrimination with smarter machine learning\"</a> for a visualization\nexploring the tradeoffs when optimizing for demographic parity.</p>",
         "<a href=\"#equalized_odds\"><strong>equalized odds</strong></a>",
         "<strong>equalized odds</strong>",
         "<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a>",
         "<strong>equality of opportunity</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#demographic_parity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dense feature",
      "definition_text":"A feature in which most values are non-zero, typically a Tensor of floating-point values. Contrast with sparse feature.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dense_feature\"></a>",
         "<h2 class=\"hide-from-toc\"> dense feature</h2>",
         "<p>A <a href=\"#feature\"><strong>feature</strong></a> in which most values are non-zero, typically\na <a href=\"#tensor\"><strong>Tensor</strong></a> of floating-point values. Contrast with\n<a href=\"#sparse_features\"><strong>sparse feature</strong></a>.</p>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>",
         "<strong>Tensor</strong>",
         "<a href=\"#sparse_features\"><strong>sparse feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dense_feature",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dense layer",
      "definition_text":"Synonym for fully connected layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dense_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> dense layer</h2>",
         "<p>Synonym for <a href=\"#fully_connected_layer\"><strong>fully connected layer</strong></a>.</p>",
         "<a href=\"#fully_connected_layer\"><strong>fully connected layer</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dense_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"depth",
      "definition_text":"The number of layers (including any embedding layers) in a neural network that learn weights. For example, a neural network with 5 hidden layers and 1 output layer has a depth of 6.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"depth\"></a>",
         "<h2 class=\"hide-from-toc\"> depth</h2>",
         "<p>The number of <a href=\"#layer\"><strong>layers</strong></a> (including any\n<a href=\"#embeddings\"><strong>embedding</strong></a> layers) in a <a href=\"#neural_network\"><strong>neural network</strong></a>\nthat learn weights. For example, a neural network with 5\n<a href=\"#hidden_layer\"><strong>hidden layers</strong></a> and 1 output layer has a depth of 6.</p>",
         "<a href=\"#layer\"><strong>layers</strong></a>",
         "<strong>layers</strong>",
         "<a href=\"#embeddings\"><strong>embedding</strong></a>",
         "<strong>embedding</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#depth",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"depthwise separable cnn",
      "definition_text":"A convolutional neural network architecture based on Inception, but where Inception modules are replaced with depthwise separable convolutions.  Also known as Xception.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"depthwise_separable_cnn\"></a>",
         "<h2 class=\"hide-from-toc\">depthwise separable convolutional neural network (sepCNN)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>A <a href=\"#convolutional_neural_network\"><strong>convolutional neural network</strong></a>\narchitecture based on\n<a href=\"https://github.com/tensorflow/tpu/tree/master/models/experimental/inception\">Inception</a>,\nbut where Inception modules are replaced with depthwise separable\nconvolutions.  Also known as Xception.</p>",
         "<a href=\"#convolutional_neural_network\"><strong>convolutional neural network</strong></a>",
         "<strong>convolutional neural network</strong>",
         "<a href=\"https://github.com/tensorflow/tpu/tree/master/models/experimental/inception\">Inception</a>",
         "<p>A depthwise separable convolution (also abbreviated as separable convolution)\nfactors a standard 3-D convolution into two separate convolution operations\nthat are more computationally efficient: first, a depthwise convolution,\nwith a depth of 1 (n \u2715 n \u2715 1), and then second, a pointwise convolution,\nwith length and width of 1 (1 \u2715 1 \u2715 n).</p>",
         "<p>To learn more, see <a href=\"https://arxiv.org/pdf/1610.02357.pdf\">Xception: Deep Learning with Depthwise Separable\nConvolutions</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#depthwise_separable_cnn",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"device",
      "definition_text":"A category of hardware that can run a TensorFlow session, including CPUs, GPUs, and TPUs.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"device\"></a>",
         "<h2 class=\"hide-from-toc\"> device</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A category of hardware that can run a TensorFlow session, including\nCPUs, GPUs, and <a href=\"#TPU\"><strong>TPUs</strong></a>.</p>",
         "<a href=\"#TPU\"><strong>TPUs</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#device",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dimension reduction",
      "definition_text":"Decreasing the number of dimensions used to represent a particular feature in a feature vector, typically by converting to an embedding.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dimension_reduction\"></a>",
         "<h2 class=\"hide-from-toc\"> dimension reduction</h2>",
         "<p>Decreasing the number of dimensions used to represent a particular feature in\na feature vector, typically by converting to an <a href=\"#embeddings\"><strong>embedding</strong></a>.</p>",
         "<a href=\"#embeddings\"><strong>embedding</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dimension_reduction",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dimensions",
      "definition_text":"Overloaded term having any of the following definitions:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dimensions\"></a>",
         "<h2 class=\"hide-from-toc\"> dimensions </h2>",
         "<p>Overloaded term having any of the following definitions:</p>",
         "<ul>\n<li><p>The number of levels of coordinates in a <a href=\"#tensor\"><strong>Tensor</strong></a>. For\nexample:</p>\n<ul>\n<li>A scalar has zero dimensions; for example, <code dir=\"ltr\" translate=\"no\">[\"Hello\"]</code>.</li>\n<li>A vector  has one dimension; for example, <code dir=\"ltr\" translate=\"no\">[3, 5, 7, 11]</code>.</li>\n<li>A matrix has two dimensions; for example, <code dir=\"ltr\" translate=\"no\">[[2, 4, 18], [5, 7, 14]]</code>.</li>\n</ul>\n<p>You can uniquely specify a particular cell in a one-dimensional vector\nwith one coordinate; you need two coordinates to uniquely specify a\nparticular cell in a two-dimensional matrix.</p></li>\n<li><p>The number of entries in a <a href=\"#feature_vector\"><strong>feature vector</strong></a>.</p></li>\n<li><p>The number of elements in an <a href=\"#embeddings\"><strong>embedding</strong></a> layer.\n</p></li></ul>",
         "<li><p>The number of levels of coordinates in a <a href=\"#tensor\"><strong>Tensor</strong></a>. For\nexample:</p>\n<ul>\n<li>A scalar has zero dimensions; for example, <code dir=\"ltr\" translate=\"no\">[\"Hello\"]</code>.</li>\n<li>A vector  has one dimension; for example, <code dir=\"ltr\" translate=\"no\">[3, 5, 7, 11]</code>.</li>\n<li>A matrix has two dimensions; for example, <code dir=\"ltr\" translate=\"no\">[[2, 4, 18], [5, 7, 14]]</code>.</li>\n</ul>\n<p>You can uniquely specify a particular cell in a one-dimensional vector\nwith one coordinate; you need two coordinates to uniquely specify a\nparticular cell in a two-dimensional matrix.</p></li>",
         "<p>The number of levels of coordinates in a <a href=\"#tensor\"><strong>Tensor</strong></a>. For\nexample:</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>",
         "<strong>Tensor</strong>",
         "<ul>\n<li>A scalar has zero dimensions; for example, <code dir=\"ltr\" translate=\"no\">[\"Hello\"]</code>.</li>\n<li>A vector  has one dimension; for example, <code dir=\"ltr\" translate=\"no\">[3, 5, 7, 11]</code>.</li>\n<li>A matrix has two dimensions; for example, <code dir=\"ltr\" translate=\"no\">[[2, 4, 18], [5, 7, 14]]</code>.</li>\n</ul>",
         "<li>A scalar has zero dimensions; for example, <code dir=\"ltr\" translate=\"no\">[\"Hello\"]</code>.</li>",
         "<code dir=\"ltr\" translate=\"no\">[\"Hello\"]</code>",
         "<li>A vector  has one dimension; for example, <code dir=\"ltr\" translate=\"no\">[3, 5, 7, 11]</code>.</li>",
         "<code dir=\"ltr\" translate=\"no\">[3, 5, 7, 11]</code>",
         "<li>A matrix has two dimensions; for example, <code dir=\"ltr\" translate=\"no\">[[2, 4, 18], [5, 7, 14]]</code>.</li>",
         "<code dir=\"ltr\" translate=\"no\">[[2, 4, 18], [5, 7, 14]]</code>",
         "<p>You can uniquely specify a particular cell in a one-dimensional vector\nwith one coordinate; you need two coordinates to uniquely specify a\nparticular cell in a two-dimensional matrix.</p>",
         "<li><p>The number of entries in a <a href=\"#feature_vector\"><strong>feature vector</strong></a>.</p></li>",
         "<p>The number of entries in a <a href=\"#feature_vector\"><strong>feature vector</strong></a>.</p>",
         "<a href=\"#feature_vector\"><strong>feature vector</strong></a>",
         "<strong>feature vector</strong>",
         "<li><p>The number of elements in an <a href=\"#embeddings\"><strong>embedding</strong></a> layer.\n</p></li>",
         "<p>The number of elements in an <a href=\"#embeddings\"><strong>embedding</strong></a> layer.\n</p>",
         "<a href=\"#embeddings\"><strong>embedding</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dimensions",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"discrete feature",
      "definition_text":"A feature with a finite set of possible values. For example, a feature whose values may only be animal, vegetable, or mineral is a discrete (or categorical) feature. Contrast with continuous feature.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"discrete_feature\"></a>",
         "<h2 class=\"hide-from-toc\"> discrete feature</h2>",
         "<p>A <a href=\"#feature\"><strong>feature</strong></a> with a finite set of possible values. For example,\na feature whose values may only be <em>animal</em>, <em>vegetable</em>, or <em>mineral</em> is a\ndiscrete (or categorical) feature. Contrast with\n<a href=\"#continuous_feature\"><strong>continuous feature</strong></a>.</p>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<em>animal</em>",
         "<em>vegetable</em>",
         "<em>mineral</em>",
         "<a href=\"#continuous_feature\"><strong>continuous feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#discrete_feature",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"discriminative model",
      "definition_text":"A model that predicts labels from a set of one or more features. More formally, discriminative models define the conditional probability of an output given the features and weights; that is:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"discriminative_model\"></a>",
         "<h2 class=\"hide-from-toc\"> discriminative model</h2>",
         "<p>A <a href=\"#model\"><strong>model</strong></a> that predicts labels from a set of one or more\nfeatures. More formally, discriminative models define the conditional\nprobability of an output given the features and weights; that is:</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\np(output | features, weights)\n</pre>",
         "<p>For example, a model that predicts whether an email is spam from features\nand weights is a discriminative model.</p>",
         "<p>The vast majority of supervised learning models, including classification\nand regression models, are discriminative models.</p>",
         "<p>Contrast with <a href=\"#generative_model\"><strong>generative model</strong></a>.</p>",
         "<a href=\"#generative_model\"><strong>generative model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#discriminative_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"discriminator",
      "definition_text":"A system that determines whether examples are real or fake.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"discriminator\"></a>",
         "<h2 class=\"hide-from-toc\"> discriminator</h2>",
         "<p>A system that determines whether examples are real or fake.</p>",
         "<p>The subsystem within a <a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a> that determines whether\nthe examples created by the <a href=\"#generator\"><strong>generator</strong></a> are real or fake.</p>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a>",
         "<strong>generative adversarial\nnetwork</strong>",
         "<a href=\"#generator\"><strong>generator</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#discriminator",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"disparate impact",
      "definition_text":"Making decisions about people that impact different population subgroups disproportionately. This usually refers to situations where an algorithmic decision-making process harms or benefits some subgroups more than others.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"disparate_impact\"></a>",
         "<h2 class=\"hide-from-toc\"> disparate impact</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Making decisions about people that impact different population\nsubgroups disproportionately. This usually refers to situations\nwhere an algorithmic decision-making process harms or benefits\nsome subgroups more than others.</p>",
         "<p>For example, suppose an algorithm that determines a Lilliputian's\neligibility for a miniature-home loan is more likely to classify\nthem as \u201cineligible\u201d if their mailing address contains a certain\npostal code. If Big-Endian Lilliputians  are more likely to have\nmailing addresses with this postal code than Little-Endian Lilliputians,\nthen this algorithm may result in disparate impact.</p>",
         "<p>Contrast with <a href=\"#disparate_treatment\"><strong>disparate treatment</strong></a>,\nwhich focuses on disparities that result when subgroup characteristics\nare explicit inputs to an algorithmic decision-making process.</p>",
         "<a href=\"#disparate_treatment\"><strong>disparate treatment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#disparate_impact",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"disparate treatment",
      "definition_text":"Factoring subjects' sensitive attributes into an algorithmic decision-making process such that different subgroups of people are treated differently.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"disparate_treatment\"></a>",
         "<h2 class=\"hide-from-toc\"> disparate treatment</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Factoring subjects' <a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a>\ninto an algorithmic decision-making process such that different subgroups\nof people are treated differently.</p>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a>",
         "<strong>sensitive attributes</strong>",
         "<p>For example, consider an algorithm that\ndetermines Lilliputians\u2019 eligibility for a miniature-home loan based on the\ndata they provide in their loan application.  If the algorithm uses a\nLilliputian\u2019s affiliation as Big-Endian or Little-Endian as an input, it\nis enacting disparate treatment along that dimension.</p>",
         "<p>Contrast with <a href=\"#disparate_impact\"><strong>disparate impact</strong></a>, which focuses\non disparities in the societal impacts of algorithmic decisions on subgroups,\nirrespective of whether those subgroups are inputs to the model.</p>",
         "<a href=\"#disparate_impact\"><strong>disparate impact</strong></a>",
         "<strong>disparate impact</strong>",
         "<aside class=\"warning\"><strong>Warning:</strong><span> Because sensitive attributes are almost always correlated with\nother features the data may have, explicitly removing sensitive attribute\ninformation does not guarantee that subgroups will be treated equally.\nFor example, removing sensitive demographic attributes from a training\ndata set that still includes postal code as a feature may address disparate\ntreatment of subgroups, but there still might be\ndisparate impact upon these groups because\npostal code might serve as a <a href=\"#proxy_sensitive_attributes\"><strong>proxy</strong></a> for other\ndemographic information.</span></aside>",
         "<strong>Warning:</strong>",
         "<span> Because sensitive attributes are almost always correlated with\nother features the data may have, explicitly removing sensitive attribute\ninformation does not guarantee that subgroups will be treated equally.\nFor example, removing sensitive demographic attributes from a training\ndata set that still includes postal code as a feature may address disparate\ntreatment of subgroups, but there still might be\ndisparate impact upon these groups because\npostal code might serve as a <a href=\"#proxy_sensitive_attributes\"><strong>proxy</strong></a> for other\ndemographic information.</span>",
         "<a href=\"#proxy_sensitive_attributes\"><strong>proxy</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#disparate_treatment",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"divisive clustering",
      "definition_text":"See hierarchical clustering.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"divisive_clustering\"></a>",
         "<h2 class=\"hide-from-toc\"> divisive clustering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>See <a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>.</p>",
         "<a href=\"#hierarchical_clustering\"><strong>hierarchical clustering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#divisive_clustering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"downsampling",
      "definition_text":"Overloaded term that can mean either of the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"downsampling\"></a>",
         "<h2 class=\"hide-from-toc\"> downsampling</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>Overloaded term that can mean either of the following:</p>",
         "<ul>\n<li>Reducing the amount of information in a feature in order to train\na model more efficiently. For example, before training an image\nrecognition model, downsampling high-resolution images to a\nlower-resolution format.</li>\n<li>Training on a disproportionately low percentage of over-represented class\nexamples in order to improve model training on under-represented classes.\nFor example, in a <a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced\ndataset</strong></a>, models tend to learn a lot about the\n<a href=\"#majority_class\"><strong>majority class</strong></a> and not enough about the\n<a href=\"#minority_class\"><strong>minority class</strong></a>. Downsampling helps\nbalance the amount of training on the majority and minority classes.</li>\n</ul>",
         "<li>Reducing the amount of information in a feature in order to train\na model more efficiently. For example, before training an image\nrecognition model, downsampling high-resolution images to a\nlower-resolution format.</li>",
         "<li>Training on a disproportionately low percentage of over-represented class\nexamples in order to improve model training on under-represented classes.\nFor example, in a <a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced\ndataset</strong></a>, models tend to learn a lot about the\n<a href=\"#majority_class\"><strong>majority class</strong></a> and not enough about the\n<a href=\"#minority_class\"><strong>minority class</strong></a>. Downsampling helps\nbalance the amount of training on the majority and minority classes.</li>",
         "<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced\ndataset</strong></a>",
         "<strong>class-imbalanced\ndataset</strong>",
         "<a href=\"#majority_class\"><strong>majority class</strong></a>",
         "<strong>majority class</strong>",
         "<a href=\"#minority_class\"><strong>minority class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#downsampling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"DQN",
      "definition_text":"Abbreviation for Deep Q-Network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"DQN\"></a>",
         "<h2 class=\"hide-from-toc\"> DQN</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>Abbreviation for <a href=\"#deep_q-network\"><strong>Deep Q-Network</strong></a>.</p>",
         "<a href=\"#deep_q-network\"><strong>Deep Q-Network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#DQN",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dropout regularization",
      "definition_text":"A form of regularization useful in training neural networks. Dropout regularization works by removing a random selection of a fixed number of the units in a network layer for a single gradient step. The more units dropped out, the stronger the regularization. This is analogous to training the network to emulate an exponentially large ensemble of smaller networks. For full details, see Dropout: A Simple Way to Prevent Neural Networks from Overfitting.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dropout_regularization\"></a>",
         "<h2 class=\"hide-from-toc\"> dropout regularization</h2>",
         "<p>A form of <a href=\"#regularization\"><strong>regularization</strong></a> useful in training\n<a href=\"#neural_network\"><strong>neural networks</strong></a>. Dropout regularization works by\nremoving a random selection of a fixed number of the units in a network\nlayer for a single gradient step. The more units dropped out, the stronger\nthe regularization. This is analogous to training the network to emulate\nan exponentially large ensemble of smaller networks. For full details, see\n<a href=\"http://jmlr.org/papers/volume15/srivastava14a.old/srivastava14a.pdf\" target=\"T\">Dropout: A Simple Way to Prevent Neural Networks from\nOverfitting</a>.</p>",
         "<a href=\"#regularization\"><strong>regularization</strong></a>",
         "<strong>regularization</strong>",
         "<a href=\"#neural_network\"><strong>neural networks</strong></a>",
         "<strong>neural networks</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dropout_regularization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"dynamic model",
      "definition_text":"A model that is trained online in a continuously updating fashion.  That is, data is continuously entering the model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"dynamic_model\"></a>",
         "<h2 class=\"hide-from-toc\"> dynamic model</h2>",
         "<p>A <a href=\"#model\"><strong>model</strong></a> that is trained online in a continuously\nupdating fashion.  That is, data is continuously entering the model.</p>",
         "<a href=\"#model\"><strong>model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#dynamic_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"eager execution",
      "definition_text":"A TensorFlow programming environment in which operations run immediately. By contrast, operations called in graph execution don't run until they are explicitly evaluated. Eager execution is an imperative interface, much like the code in most programming languages. Eager execution programs are generally far easier to debug than graph execution programs.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"eager_execution\"></a>",
         "<h2 class=\"hide-from-toc\"> eager execution</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A TensorFlow programming environment in which <a href=\"#Operation\"><strong>operations</strong></a>\nrun immediately. By contrast, operations called in\n<a href=\"#graph_execution\"><strong>graph execution</strong></a> don't run until they are explicitly\nevaluated. Eager execution is an\n<a href=\"https://wikipedia.org/wiki/Imperative_programming\" target=\"T\">imperative interface</a>, much\nlike the code in most programming languages. Eager execution programs are\ngenerally far easier to debug than graph execution programs.</p>",
         "<a href=\"#Operation\"><strong>operations</strong></a>",
         "<strong>operations</strong>",
         "<a href=\"#graph_execution\"><strong>graph execution</strong></a>",
         "<strong>graph execution</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#eager_execution",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"early stopping",
      "definition_text":"A method for regularization that involves ending model training before training loss finishes decreasing. In early stopping, you end model training when the loss on a validation dataset starts to increase, that is, when generalization performance worsens.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"early_stopping\"></a>",
         "<h2 class=\"hide-from-toc\"> early stopping</h2>",
         "<p>A method for <a href=\"#regularization\"><strong>regularization</strong></a> that involves ending\nmodel training <em>before</em> training loss finishes decreasing. In early\nstopping, you end model training when the loss on a\n<a href=\"#validation_set\"><strong>validation dataset</strong></a> starts to increase, that is, when\n<a href=\"#generalization\"><strong>generalization</strong></a> performance worsens.</p>",
         "<a href=\"#regularization\"><strong>regularization</strong></a>",
         "<strong>regularization</strong>",
         "<em>before</em>",
         "<a href=\"#validation_set\"><strong>validation dataset</strong></a>",
         "<strong>validation dataset</strong>",
         "<a href=\"#generalization\"><strong>generalization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#early_stopping",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"embeddings",
      "definition_text":"A categorical feature represented as a continuous-valued feature. Typically, an embedding is a translation of a high-dimensional vector into a low-dimensional space. For example, you can represent the words in an English sentence in either of the following two ways:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"embeddings\"></a>",
         "<h2 class=\"hide-from-toc\"> embeddings</h2>",
         "<p>A categorical feature represented as a continuous-valued feature.\nTypically, an embedding is a translation of a high-dimensional vector\ninto a low-dimensional space. For example, you can represent the words\nin an English sentence in either of the following two ways:</p>",
         "<ul>\n<li>As a million-element (high-dimensional)\n<a href=\"#sparse_features\"><strong>sparse vector</strong></a> in which all elements are integers.\nEach cell in the vector represents a separate English word; the value in\na cell represents the number of times that word appears in a sentence.\nSince a single English sentence is unlikely to contain more than 50 words,\nnearly every cell in the vector will contain a 0. The few cells that\naren't 0 will contain a low integer (usually 1) representing the number of\ntimes that word appeared in the sentence.</li>\n<li>As a several-hundred-element (low-dimensional)\n<a href=\"#dense_feature\"><strong>dense vector</strong></a> in which each element holds a\nfloating-point value between 0 and 1.  This is an embedding.</li>\n</ul>",
         "<li>As a million-element (high-dimensional)\n<a href=\"#sparse_features\"><strong>sparse vector</strong></a> in which all elements are integers.\nEach cell in the vector represents a separate English word; the value in\na cell represents the number of times that word appears in a sentence.\nSince a single English sentence is unlikely to contain more than 50 words,\nnearly every cell in the vector will contain a 0. The few cells that\naren't 0 will contain a low integer (usually 1) representing the number of\ntimes that word appeared in the sentence.</li>",
         "<a href=\"#sparse_features\"><strong>sparse vector</strong></a>",
         "<strong>sparse vector</strong>",
         "<li>As a several-hundred-element (low-dimensional)\n<a href=\"#dense_feature\"><strong>dense vector</strong></a> in which each element holds a\nfloating-point value between 0 and 1.  This is an embedding.</li>",
         "<a href=\"#dense_feature\"><strong>dense vector</strong></a>",
         "<strong>dense vector</strong>",
         "<p>In TensorFlow, embeddings are trained by <a href=\"#backpropagation\"><strong>backpropagating</strong></a>\n<a href=\"#loss\"><strong>loss</strong></a> just like any other parameter in a\n<a href=\"#neural_network\"><strong>neural network</strong></a>.</p>",
         "<a href=\"#backpropagation\"><strong>backpropagating</strong></a>",
         "<strong>backpropagating</strong>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#embeddings",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"embedding space",
      "definition_text":"The d-dimensional vector space that features from a higher-dimensional vector space are mapped to. Ideally, the embedding space contains a structure that yields meaningful mathematical results; for example, in an ideal embedding space, addition and subtraction of embeddings can solve word analogy tasks.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"embedding_space\"></a>",
         "<h2 class=\"hide-from-toc\"> embedding space</h2>",
         "<p>The d-dimensional vector space that features from a higher-dimensional\nvector space are mapped to. Ideally, the embedding space contains a\nstructure that yields meaningful mathematical results; for example,\nin an ideal embedding space, addition and subtraction of embeddings\ncan solve word analogy tasks.</p>",
         "<p>The <a href=\"https://wikipedia.org/wiki/Dot_product\" target=\"T\">dot product</a>\nof two embeddings is a measure of their similarity.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#embedding_space",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ERM",
      "definition_text":"Choosing the function that minimizes loss on the training set. Contrast with structural risk minimization.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ERM\"></a>",
         "<h2 class=\"hide-from-toc\"> empirical risk minimization (ERM)</h2>",
         "<p>Choosing the function that minimizes loss on the training set. Contrast\nwith <a href=\"#SRM\"><strong>structural risk minimization</strong></a>.</p>",
         "<a href=\"#SRM\"><strong>structural risk minimization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ERM",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ensemble",
      "definition_text":"A merger of the predictions of multiple models. You can create an ensemble via one or more of the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ensemble\"></a>",
         "<h2 class=\"hide-from-toc\"> ensemble</h2>",
         "<p>A merger of the predictions of multiple <a href=\"#model\"><strong>models</strong></a>. You can create an\nensemble via one or more of the following:</p>",
         "<a href=\"#model\"><strong>models</strong></a>",
         "<strong>models</strong>",
         "<ul>\n<li>different initializations</li>\n<li>different <a href=\"#hyperparameter\"><strong>hyperparameters</strong></a></li>\n<li>different overall structure</li>\n</ul>",
         "<li>different initializations</li>",
         "<li>different <a href=\"#hyperparameter\"><strong>hyperparameters</strong></a></li>",
         "<a href=\"#hyperparameter\"><strong>hyperparameters</strong></a>",
         "<strong>hyperparameters</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ensemble",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"environment",
      "definition_text":"In reinforcement learning, the world that contains the agent and allows the agent to observe that world's state. For example, the represented world can be a game like chess, or a physical world like a maze. When the agent applies an action to the environment, then the environment transitions between states.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"environment\"></a>",
         "<h2 class=\"hide-from-toc\"> environment</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the world that contains the <a href=\"#agent\"><strong>agent</strong></a>\nand allows the agent to observe that world's <a href=\"#state\"><strong>state</strong></a>. For example,\nthe represented world can be a game like chess, or a physical world like a\nmaze. When the agent applies an <a href=\"#action\"><strong>action</strong></a> to the environment,\nthen the environment transitions between states.</p>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#action\"><strong>action</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#environment",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"episode",
      "definition_text":"In reinforcement learning, each of the repeated attempts by the agent to learn an environment.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"episode\"></a>",
         "<h2 class=\"hide-from-toc\"> episode</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, each of the repeated attempts by the\n<a href=\"#agent\"><strong>agent</strong></a> to learn an <a href=\"#environment\"><strong>environment</strong></a>.</p>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#episode",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"epoch",
      "definition_text":"A full training pass over the entire dataset such that each example has been seen once.  Thus, an epoch represents N/batch size training iterations, where N is the total number of examples.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"epoch\"></a>",
         "<h2 class=\"hide-from-toc\"> epoch</h2>",
         "<p>A full training pass over the entire dataset such that each example has been\nseen once.  Thus, an epoch represents <code dir=\"ltr\" translate=\"no\">N</code>/<a href=\"#batch_size\"><strong>batch size</strong></a> training\n<a href=\"#iteration\"><strong>iterations</strong></a>, where <code dir=\"ltr\" translate=\"no\">N</code> is the total number of examples.</p>",
         "<code dir=\"ltr\" translate=\"no\">N</code>",
         "<a href=\"#batch_size\"><strong>batch size</strong></a>",
         "<strong>batch size</strong>",
         "<a href=\"#iteration\"><strong>iterations</strong></a>",
         "<strong>iterations</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#epoch",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"epsilon greedy policy",
      "definition_text":"In reinforcement learning, a policy that either follows a random policy with epsilon probability or a greedy policy otherwise. For example, if epsilon is 0.9, then the policy follows a random policy 90% of the time and a greedy policy 10% of the time.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"epsilon_greedy_policy\"></a>",
         "<h2 class=\"hide-from-toc\"> epsilon greedy policy</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, a <a href=\"#policy\"><strong>policy</strong></a> that either follows a\n<a href=\"#random_policy\"><strong>random policy</strong></a> with epsilon probability or a\n<a href=\"#greedy_policy\"><strong>greedy policy</strong></a> otherwise. For example, if epsilon is\n0.9, then the policy follows a random policy 90% of the time and a greedy\npolicy 10% of the time.</p>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#random_policy\"><strong>random policy</strong></a>",
         "<strong>random policy</strong>",
         "<a href=\"#greedy_policy\"><strong>greedy policy</strong></a>",
         "<strong>greedy policy</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#epsilon_greedy_policy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"equality of opportunity",
      "definition_text":"A fairness metric that checks whether, for a preferred label (one that confers an advantage or benefit to a person) and a given attribute, a classifier predicts that preferred label equally well for all values of that attribute. In other words, equality of opportunity measures whether the people who should qualify for an opportunity are equally likely to do so regardless of their group membership.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"equality_of_opportunity\"></a>",
         "<h2 class=\"hide-from-toc\"> equality of opportunity </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#attribute\"><strong>attribute</strong></a>",
         "<strong>attribute</strong>",
         "<p>For example, suppose Glubbdubdrib University admits both Lilliputians\nand Brobdingnagians to a rigorous mathematics program. Lilliputians\u2019\nsecondary schools offer a robust curriculum of math classes, and the\nvast majority of students are qualified for the university program.\nBrobdingnagians\u2019 secondary schools don\u2019t offer math classes at all,\nand as a result, far fewer of their students are qualified. Equality\nof opportunity is satisfied for the preferred label of \"admitted\" with\nrespect to nationality (Lilliputian or Brobdingnagian) if qualified\nstudents are equally likely to be admitted irrespective of whether\nthey're a Lilliputian or a Brobdingnagian.</p>",
         "<p>For example, let's say 100 Lilliputians and 100 Brobdingnagians apply\nto Glubbdubdrib University, and admissions decisions are made as follows:</p>",
         "<p><b>Table 1.</b> Lilliputian applicants (90% are qualified)</p>",
         "<b>Table 1.</b>",
         "<table>\n<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>\n<tr> <th>Admitted</th> <td>45</td> <td>3</td> </tr>\n<tr> <th>Rejected</th> <td>45</td> <td>7</td> </tr>\n<tr> <th>Total</th> <td>90</td> <td>10</td> </tr>\n<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 7/10 = 70%<br/>\n        Total percentage of Lilliputian students admitted: (45+3)/100 = 48%\n     </td>\n</tr>\n</table>",
         "<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>",
         "<th>\u00a0</th>",
         "<th>Qualified</th>",
         "<th>Unqualified</th>",
         "<tr> <th>Admitted</th> <td>45</td> <td>3</td> </tr>",
         "<th>Admitted</th>",
         "<td>45</td>",
         "<td>3</td>",
         "<tr> <th>Rejected</th> <td>45</td> <td>7</td> </tr>",
         "<th>Rejected</th>",
         "<td>45</td>",
         "<td>7</td>",
         "<tr> <th>Total</th> <td>90</td> <td>10</td> </tr>",
         "<th>Total</th>",
         "<td>90</td>",
         "<td>10</td>",
         "<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 7/10 = 70%<br/>\n        Total percentage of Lilliputian students admitted: (45+3)/100 = 48%\n     </td>\n</tr>",
         "<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 7/10 = 70%<br/>\n        Total percentage of Lilliputian students admitted: (45+3)/100 = 48%\n     </td>",
         "<br/>",
         "<br/>",
         "<p>\u00a0</p>",
         "<p><b>Table 2.</b> Brobdingnagian applicants (10% are qualified):</p>",
         "<b>Table 2.</b>",
         "<table>\n<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>\n<tr> <th>Admitted</th> <td>5</td> <td>9</td> </tr>\n<tr> <th>Rejected</th> <td>5</td> <td>81</td> </tr>\n<tr> <th>Total</th> <td>10</td> <td>90</td> </tr>\n<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 81/90 = 90%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+9)/100 = 14%\n     </td>\n</tr>\n</table>",
         "<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>",
         "<th>\u00a0</th>",
         "<th>Qualified</th>",
         "<th>Unqualified</th>",
         "<tr> <th>Admitted</th> <td>5</td> <td>9</td> </tr>",
         "<th>Admitted</th>",
         "<td>5</td>",
         "<td>9</td>",
         "<tr> <th>Rejected</th> <td>5</td> <td>81</td> </tr>",
         "<th>Rejected</th>",
         "<td>5</td>",
         "<td>81</td>",
         "<tr> <th>Total</th> <td>10</td> <td>90</td> </tr>",
         "<th>Total</th>",
         "<td>10</td>",
         "<td>90</td>",
         "<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 81/90 = 90%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+9)/100 = 14%\n     </td>\n</tr>",
         "<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 81/90 = 90%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+9)/100 = 14%\n     </td>",
         "<br/>",
         "<br/>",
         "<p>The preceding examples satisfy equality of opportunity for acceptance\nof qualified students because qualified Lilliputians and Brobdingnagians\nboth have a 50% chance of being admitted.</p>",
         "<aside class=\"note\"><strong>Note:</strong><span> While equality of opportunity is satisfied, the following two\nfairness metrics are not satisfied:\n<ul>\n<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a>: Lilliputians and\n     Brobdingnagians are admitted to the university at different rates;\n     48% of Lilliputians students are admitted, but only 14% of\n     Brobdingnagian students are admitted.</li>\n<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a>: While qualified Lilliputian\n     and Brobdingnagian students both have the same chance of being admitted,\n     the additional constraint that unqualified Lilliputians and\n     Brobdingnagians both have the same chance of being rejected is not\n     satisfied. Unqualified Lilliputians have a 70% rejection rate, whereas\n     unqualified Brobdingnagians have a 90% rejection rate.</li>\n</ul></span></aside>",
         "<strong>Note:</strong>",
         "<span> While equality of opportunity is satisfied, the following two\nfairness metrics are not satisfied:\n<ul>\n<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a>: Lilliputians and\n     Brobdingnagians are admitted to the university at different rates;\n     48% of Lilliputians students are admitted, but only 14% of\n     Brobdingnagian students are admitted.</li>\n<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a>: While qualified Lilliputian\n     and Brobdingnagian students both have the same chance of being admitted,\n     the additional constraint that unqualified Lilliputians and\n     Brobdingnagians both have the same chance of being rejected is not\n     satisfied. Unqualified Lilliputians have a 70% rejection rate, whereas\n     unqualified Brobdingnagians have a 90% rejection rate.</li>\n</ul></span>",
         "<ul>\n<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a>: Lilliputians and\n     Brobdingnagians are admitted to the university at different rates;\n     48% of Lilliputians students are admitted, but only 14% of\n     Brobdingnagian students are admitted.</li>\n<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a>: While qualified Lilliputian\n     and Brobdingnagian students both have the same chance of being admitted,\n     the additional constraint that unqualified Lilliputians and\n     Brobdingnagians both have the same chance of being rejected is not\n     satisfied. Unqualified Lilliputians have a 70% rejection rate, whereas\n     unqualified Brobdingnagians have a 90% rejection rate.</li>\n</ul>",
         "<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a>: Lilliputians and\n     Brobdingnagians are admitted to the university at different rates;\n     48% of Lilliputians students are admitted, but only 14% of\n     Brobdingnagian students are admitted.</li>",
         "<a href=\"#demographic_parity\"><strong>demographic parity</strong></a>",
         "<strong>demographic parity</strong>",
         "<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a>: While qualified Lilliputian\n     and Brobdingnagian students both have the same chance of being admitted,\n     the additional constraint that unqualified Lilliputians and\n     Brobdingnagians both have the same chance of being rejected is not\n     satisfied. Unqualified Lilliputians have a 70% rejection rate, whereas\n     unqualified Brobdingnagians have a 90% rejection rate.</li>",
         "<a href=\"#equalized_odds\"><strong>equalized odds</strong></a>",
         "<strong>equalized odds</strong>",
         "<p>See\n<a href=\"https://arxiv.org/pdf/1610.02413.pdf\" target=\"T\">\"Equality of\nOpportunity in Supervised Learning\"</a> for a more detailed discussion\nof equality of opportunity. Also see\n<a href=\"http://research.google.com/bigpicture/attacking-discrimination-in-ml/\" target=\"T\">\"Attacking\ndiscrimination with smarter machine learning\"</a> for a visualization\nexploring the tradeoffs when optimizing for equality of opportunity.</p>",
         "<a href=\"https://arxiv.org/pdf/1610.02413.pdf\" target=\"T\">\"Equality of\nOpportunity in Supervised Learning\"</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#equality_of_opportunity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"equalized odds",
      "definition_text":"A fairness metric that checks if, for any particular label and attribute, a classifier predicts that label equally well for all values of that attribute.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"equalized_odds\"></a>",
         "<h2 class=\"hide-from-toc\"> equalized odds</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>",
         "<p>For example, suppose Glubbdubdrib University admits both Lilliputians and\nBrobdingnagians to a rigorous mathematics program. Lilliputians' secondary\nschools offer a robust curriculum of math classes, and the vast majority of\nstudents are qualified for the university program. Brobdingnagians' secondary\nschools don\u2019t offer math classes at all, and as a result, far fewer of\ntheir students are qualified.  Equalized odds is satisfied provided that no\nmatter whether an applicant is  a Lilliputian or a Brobdingnagian, if they\nare qualified, they are equally as likely to get admitted to the program,\nand if they are not qualified, they are equally as likely to get rejected.</p>",
         "<p>Let\u2019s say 100 Lilliputians and 100 Brobdingnagians apply to Glubbdubdrib\nUniversity, and admissions decisions are made as follows:</p>",
         "<p><b>Table 3.</b> Lilliputian applicants (90% are qualified)</p>",
         "<b>Table 3.</b>",
         "<table>\n<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>\n<tr> <th>Admitted</th> <td>45</td> <td>2</td> </tr>\n<tr> <th>Rejected</th> <td>45</td> <td>8</td> </tr>\n<tr> <th>Total</th> <td>90</td> <td>10</td> </tr>\n<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 8/10 = 80%<br/>\n        Total percentage of Lilliputian students admitted: (45+2)/100 = 47%\n     </td>\n</tr>\n</table>",
         "<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>",
         "<th>\u00a0</th>",
         "<th>Qualified</th>",
         "<th>Unqualified</th>",
         "<tr> <th>Admitted</th> <td>45</td> <td>2</td> </tr>",
         "<th>Admitted</th>",
         "<td>45</td>",
         "<td>2</td>",
         "<tr> <th>Rejected</th> <td>45</td> <td>8</td> </tr>",
         "<th>Rejected</th>",
         "<td>45</td>",
         "<td>8</td>",
         "<tr> <th>Total</th> <td>90</td> <td>10</td> </tr>",
         "<th>Total</th>",
         "<td>90</td>",
         "<td>10</td>",
         "<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 8/10 = 80%<br/>\n        Total percentage of Lilliputian students admitted: (45+2)/100 = 47%\n     </td>\n</tr>",
         "<td colspan=\"3\">\n        Percentage of qualified students admitted: 45/90 = 50%<br/>\n        Percentage of unqualified students rejected: 8/10 = 80%<br/>\n        Total percentage of Lilliputian students admitted: (45+2)/100 = 47%\n     </td>",
         "<br/>",
         "<br/>",
         "<p>\u00a0</p>",
         "<p><b>Table 4.</b> Brobdingnagian applicants (10% are qualified):</p>",
         "<b>Table 4.</b>",
         "<table>\n<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>\n<tr> <th>Admitted</th> <td>5</td> <td>18</td> </tr>\n<tr> <th>Rejected</th> <td>5</td> <td>72</td> </tr>\n<tr> <th>Total</th> <td>10</td> <td>90</td> </tr>\n<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 72/90 = 80%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+18)/100 = 23%\n     </td>\n</tr>\n</table>",
         "<tr> <th>\u00a0</th> <th>Qualified</th> <th>Unqualified</th> </tr>",
         "<th>\u00a0</th>",
         "<th>Qualified</th>",
         "<th>Unqualified</th>",
         "<tr> <th>Admitted</th> <td>5</td> <td>18</td> </tr>",
         "<th>Admitted</th>",
         "<td>5</td>",
         "<td>18</td>",
         "<tr> <th>Rejected</th> <td>5</td> <td>72</td> </tr>",
         "<th>Rejected</th>",
         "<td>5</td>",
         "<td>72</td>",
         "<tr> <th>Total</th> <td>10</td> <td>90</td> </tr>",
         "<th>Total</th>",
         "<td>10</td>",
         "<td>90</td>",
         "<tr>\n<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 72/90 = 80%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+18)/100 = 23%\n     </td>\n</tr>",
         "<td colspan=\"3\">\n        Percentage of qualified students admitted: 5/10 = 50%<br/>\n        Percentage of unqualified students rejected: 72/90 = 80%<br/>\n        Total percentage of Brobdingnagian students admitted: (5+18)/100 = 23%\n     </td>",
         "<br/>",
         "<br/>",
         "<p>Equalized odds is satisfied because qualified Lilliputian and Brobdingnagian\nstudents both have a 50% chance of being admitted, and unqualified Lilliputian\nand Brobdingnagian have an 80% chance of being rejected.</p>",
         "<aside class=\"note\"><strong>Note:</strong><span> While equalized odds is satisfied here,\n<a href=\"#demographic_parity\"><strong>demographic parity</strong></a> is <em>not satisfied</em>. Lilliputian\nand Brobdingnagian students are admitted to Glubbdubdrib University at\ndifferent rates; 47% of Lilliputian students are admitted, and 23% of\nBrobdingnagian students are admitted.</span></aside>",
         "<strong>Note:</strong>",
         "<span> While equalized odds is satisfied here,\n<a href=\"#demographic_parity\"><strong>demographic parity</strong></a> is <em>not satisfied</em>. Lilliputian\nand Brobdingnagian students are admitted to Glubbdubdrib University at\ndifferent rates; 47% of Lilliputian students are admitted, and 23% of\nBrobdingnagian students are admitted.</span>",
         "<a href=\"#demographic_parity\"><strong>demographic parity</strong></a>",
         "<strong>demographic parity</strong>",
         "<em>not satisfied</em>",
         "<p>Equalized odds is formally defined in\n<a href=\"https://arxiv.org/pdf/1610.02413.pdf\" target=\"T\">\"Equality of\nOpportunity in Supervised Learning\"</a> as follows:\n\"predictor \u0176 satisfies equalized odds with respect\nto protected attribute A and outcome Y if \u0176 and A are independent,\nconditional on Y.\"</p>",
         "<a href=\"https://arxiv.org/pdf/1610.02413.pdf\" target=\"T\">\"Equality of\nOpportunity in Supervised Learning\"</a>",
         "<aside class=\"note\"><strong>Note:</strong><span> Contrast equalized odds with the more relaxed\n<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a> metric.</span></aside>",
         "<strong>Note:</strong>",
         "<span> Contrast equalized odds with the more relaxed\n<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a> metric.</span>",
         "<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#equalized_odds",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Estimators",
      "definition_text":"An instance of the tf.Estimator class, which encapsulates logic that builds a TensorFlow graph and runs a TensorFlow session. You may create your own custom Estimators (as described here) or instantiate premade Estimators created by others.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Estimators\"></a>",
         "<h2 class=\"hide-from-toc\"> Estimator</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An instance of the <code dir=\"ltr\" translate=\"no\">tf.Estimator</code> class, which encapsulates logic that builds\na TensorFlow graph and runs a TensorFlow session. You may create your own\n<a href=\"#custom_estimator\"><strong>custom Estimators</strong></a> (as described\n<a href=\"https://www.tensorflow.org/extend/estimators\" target=\"T\">here</a>)\nor instantiate <a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a> created by\nothers.</p>",
         "<code dir=\"ltr\" translate=\"no\">tf.Estimator</code>",
         "<a href=\"#custom_estimator\"><strong>custom Estimators</strong></a>",
         "<strong>custom Estimators</strong>",
         "<a href=\"https://www.tensorflow.org/extend/estimators\" target=\"T\">here</a>",
         "<a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Estimators",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"example",
      "definition_text":"One row of a dataset. An example contains one or more features and possibly a label. See also labeled example and unlabeled example.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"example\"></a>",
         "<h2 class=\"hide-from-toc\"> example</h2>",
         "<p>One row of a dataset. An example contains one or more <a href=\"#feature\"><strong>features</strong></a>\nand possibly a <a href=\"#label\"><strong>label</strong></a>. See also\n<a href=\"#labeled_example\"><strong>labeled example</strong></a> and\n<a href=\"#unlabeled_example\"><strong>unlabeled example</strong></a>.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>",
         "<strong>features</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#labeled_example\"><strong>labeled example</strong></a>",
         "<strong>labeled example</strong>",
         "<a href=\"#unlabeled_example\"><strong>unlabeled example</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#example",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"experience replay",
      "definition_text":"In reinforcement learning, a DQN technique used to reduce temporal correlations in training data. The agent stores state transitions in a replay buffer, and then samples transitions from the replay buffer to create training data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"experience_replay\"></a>",
         "<h2 class=\"hide-from-toc\"> experience replay</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, a <a href=\"#deep_q-network\"><strong>DQN</strong></a> technique used to\nreduce temporal correlations in training data. The <a href=\"#agent\"><strong>agent</strong></a>\nstores state transitions in a <a href=\"#replay_buffer\"><strong>replay buffer</strong></a>, and then\nsamples transitions from the replay buffer to create training data.</p>",
         "<a href=\"#deep_q-network\"><strong>DQN</strong></a>",
         "<strong>DQN</strong>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#replay_buffer\"><strong>replay buffer</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#experience_replay",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"experimenters bias",
      "definition_text":"See confirmation bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"experimenters_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> experimenter's bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>See <a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a>.</p>",
         "<a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#experimenters_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"exploding gradient problem",
      "definition_text":"The tendency for gradients in a deep neural networks (especially recurrent neural networks) to become surprisingly steep (high). Steep gradients result in very large updates to the weights of each node in a deep neural network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"exploding_gradient_problem\"></a>",
         "<h2 class=\"hide-from-toc\"> exploding gradient problem</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>The tendency for <a href=\"#gradient\"><strong>gradients</strong></a> in a\n<a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a> (especially\n<a href=\"#recurrent_neural_network\"><strong>recurrent neural networks</strong></a>) to become\nsurprisingly steep (high). Steep gradients result in very large updates\nto the weights of each node in a deep neural network.</p>",
         "<a href=\"#gradient\"><strong>gradients</strong></a>",
         "<strong>gradients</strong>",
         "<a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a>",
         "<strong>deep neural networks</strong>",
         "<a href=\"#recurrent_neural_network\"><strong>recurrent neural networks</strong></a>",
         "<strong>recurrent neural networks</strong>",
         "<p>Models suffering from the exploding gradient problem become difficult\nor impossible to train. <a href=\"#gradient_clipping\"><strong>Gradient clipping</strong></a>\ncan mitigate this problem.</p>",
         "<a href=\"#gradient_clipping\"><strong>Gradient clipping</strong></a>",
         "<strong>Gradient clipping</strong>",
         "<p>Compare to <a href=\"#vanishing_gradient_problem\"><strong>vanishing gradient problem</strong></a>.</p>",
         "<a href=\"#vanishing_gradient_problem\"><strong>vanishing gradient problem</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#exploding_gradient_problem",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"fairness constraint",
      "definition_text":"Applying a constraint to an algorithm to ensure one or more definitions of fairness are satisfied.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"fairness_constraint\"></a>",
         "<h2 class=\"hide-from-toc\"> fairness constraint</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<ul>\n<li><a href=\"#post-processing\"><strong>Post-processing</strong></a> your model's output.</li>\n<li>Altering the <a href=\"#loss\"><strong>loss function</strong></a> to incorporate a penalty\n for violating a <a href=\"#fairness_metric\"><strong>fairness metric</strong></a>.</li>\n<li>Directly adding a mathematical constraint to an optimization problem.</li>\n</ul>",
         "<li><a href=\"#post-processing\"><strong>Post-processing</strong></a> your model's output.</li>",
         "<a href=\"#post-processing\"><strong>Post-processing</strong></a>",
         "<strong>Post-processing</strong>",
         "<li>Altering the <a href=\"#loss\"><strong>loss function</strong></a> to incorporate a penalty\n for violating a <a href=\"#fairness_metric\"><strong>fairness metric</strong></a>.</li>",
         "<a href=\"#loss\"><strong>loss function</strong></a>",
         "<strong>loss function</strong>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#fairness_constraint",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"fairness metric",
      "definition_text":"A mathematical definition of \u201cfairness\u201d that is measurable. Some commonly used fairness metrics include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"fairness_metric\"></a>",
         "<h2 class=\"hide-from-toc\"> fairness metric</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>A mathematical definition of \u201cfairness\u201d that is measurable.\nSome commonly used fairness metrics include:</p>",
         "<ul>\n<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a></li>\n<li><a href=\"#predictive_parity\"><strong>predictive parity</strong></a></li>\n<li><a href=\"#counterfactual_fairness\"><strong>counterfactual fairness</strong></a></li>\n<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a></li>\n</ul>",
         "<li><a href=\"#equalized_odds\"><strong>equalized odds</strong></a></li>",
         "<a href=\"#equalized_odds\"><strong>equalized odds</strong></a>",
         "<strong>equalized odds</strong>",
         "<li><a href=\"#predictive_parity\"><strong>predictive parity</strong></a></li>",
         "<a href=\"#predictive_parity\"><strong>predictive parity</strong></a>",
         "<strong>predictive parity</strong>",
         "<li><a href=\"#counterfactual_fairness\"><strong>counterfactual fairness</strong></a></li>",
         "<a href=\"#counterfactual_fairness\"><strong>counterfactual fairness</strong></a>",
         "<strong>counterfactual fairness</strong>",
         "<li><a href=\"#demographic_parity\"><strong>demographic parity</strong></a></li>",
         "<a href=\"#demographic_parity\"><strong>demographic parity</strong></a>",
         "<strong>demographic parity</strong>",
         "<p>Many fairness metrics are mutually exclusive; see\n<a href=\"#incompatibility_of_fairness_metrics\"><strong>incompatibility of fairness metrics</strong></a>.</p>",
         "<a href=\"#incompatibility_of_fairness_metrics\"><strong>incompatibility of fairness metrics</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#fairness_metric",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"FN",
      "definition_text":"An example in which the model mistakenly predicted the negative class. For example, the model inferred that a particular email message was not spam (the negative class), but that email message actually was spam.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"FN\"></a>",
         "<h2 class=\"hide-from-toc\"> false negative (FN)</h2>",
         "<p>An example in which the model mistakenly predicted the\n<a href=\"#negative_class\"><strong>negative class</strong></a>. For example, the model\ninferred that a particular email message was not spam\n(the negative class), but that email message actually was spam.</p>",
         "<a href=\"#negative_class\"><strong>negative class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#FN",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"false positive",
      "definition_text":"An example in which the model mistakenly predicted the positive class. For example, the model inferred that a particular email message was spam (the positive class), but that email message was actually not spam.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"false_positive\"></a>",
         "<h2 class=\"hide-from-toc\"> false positive (FP)</h2>",
         "<p>An example in which the model mistakenly predicted the\n<a href=\"#positive_class\"><strong>positive class</strong></a>. For example, the model inferred\nthat a particular email message was spam (the positive class), but that\nemail message was actually not spam.</p>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#false_positive",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"FP rate",
      "definition_text":"The x-axis in an ROC curve. The false positive rate is defined as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"FP_rate\"></a>",
         "<h2 class=\"hide-from-toc\"> false positive rate (FPR)</h2>",
         "<p>The x-axis in an <a href=\"#ROC\"><strong>ROC curve</strong></a>. The false positive rate is defined\nas follows:</p>",
         "<a href=\"#ROC\"><strong>ROC curve</strong></a>",
         "<strong>ROC curve</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#FP_rate",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature",
      "definition_text":"An input variable used in making predictions.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature\"></a>",
         "<h2 class=\"hide-from-toc\"> feature</h2>",
         "<p>An input variable used in making <a href=\"#prediction\"><strong>predictions</strong></a>.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature columns",
      "definition_text":"A function that specifies how a model should interpret a particular feature. A list that collects the output returned by calls to such functions is a required parameter to all Estimators constructors.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_columns\"></a>",
         "<h2 class=\"hide-from-toc\"> Feature column (tf.feature_column)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A function that specifies how a model should interpret a particular feature. A\nlist that collects the output returned by calls to such functions is a required\nparameter to all <a href=\"#Estimators\"><strong>Estimators</strong></a> constructors.</p>",
         "<a href=\"#Estimators\"><strong>Estimators</strong></a>",
         "<strong>Estimators</strong>",
         "<p>The <code dir=\"ltr\" translate=\"no\">tf.feature_column</code> functions enable models to easily experiment\nwith different representations of input features. For details, see the\n<a href=\"https://www.tensorflow.org/guide/feature_columns\" target=\"T\">Feature Columns chapter</a>\nin the TensorFlow Programmers Guide.</p>",
         "<code dir=\"ltr\" translate=\"no\">tf.feature_column</code>",
         "<a href=\"https://www.tensorflow.org/guide/feature_columns\" target=\"T\">Feature Columns chapter</a>",
         "<p>\"Feature column\" is Google-specific terminology.\nA feature column is referred to as a \"namespace\" in the\n<a href=\"https://wikipedia.org/wiki/Vowpal_Wabbit\" target=\"T\">VW</a>\nsystem (at Yahoo/Microsoft), or a\n<a href=\"https://www.csie.ntu.edu.tw/~cjlin/libffm/\" target=\"T\">field</a>.</p>",
         "<a href=\"https://wikipedia.org/wiki/Vowpal_Wabbit\" target=\"T\">VW</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_columns",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature cross",
      "definition_text":"A synthetic feature formed by crossing (taking a Cartesian product of) individual binary features obtained from categorical data or from continuous features via bucketing. Feature crosses help represent nonlinear relationships.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_cross\"></a>",
         "<h2 class=\"hide-from-toc\"> feature cross</h2>",
         "<p>A <a href=\"#synthetic_feature\"><strong>synthetic feature</strong></a> formed by crossing (taking a\n<a href=\"https://wikipedia.org/wiki/Cartesian_product\" target=\"T\">Cartesian\nproduct</a> of) individual binary features obtained from\n<a href=\"#categorical_data\"><strong>categorical data</strong></a> or from\n<a href=\"#continuous_feature\"><strong>continuous features</strong></a> via <a href=\"#bucketing\"><strong>bucketing</strong></a>.\nFeature crosses help represent nonlinear relationships.</p>",
         "<a href=\"#synthetic_feature\"><strong>synthetic feature</strong></a>",
         "<strong>synthetic feature</strong>",
         "<a href=\"https://wikipedia.org/wiki/Cartesian_product\" target=\"T\">Cartesian\nproduct</a>",
         "<a href=\"#categorical_data\"><strong>categorical data</strong></a>",
         "<strong>categorical data</strong>",
         "<a href=\"#continuous_feature\"><strong>continuous features</strong></a>",
         "<strong>continuous features</strong>",
         "<a href=\"#bucketing\"><strong>bucketing</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_cross",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature engineering",
      "definition_text":"The process of determining which features might be useful in training a model, and then converting raw data from log files and other sources into said features. In TensorFlow, feature engineering often means converting raw log file entries to tf.Example protocol buffers.  See also tf.Transform.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_engineering\"></a>",
         "<h2 class=\"hide-from-toc\"> feature engineering</h2>",
         "<p>The process of determining which <a href=\"#feature\"><strong>features</strong></a> might be useful\nin training a model, and then converting raw data from log files and other\nsources into said features. In TensorFlow, feature engineering often means\nconverting raw log file entries to <a href=\"#tf.Example\"><strong>tf.Example</strong></a>\nprotocol buffers.  See also\n<a href=\"https://github.com/tensorflow/transform\" target=\"T\">tf.Transform</a>.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>",
         "<strong>features</strong>",
         "<a href=\"#tf.Example\"><strong>tf.Example</strong></a>",
         "<strong>tf.Example</strong>",
         "<a href=\"https://github.com/tensorflow/transform\" target=\"T\">tf.Transform</a>",
         "<p>Feature engineering is sometimes called <strong>feature extraction</strong>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_engineering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature extraction",
      "definition_text":"Overloaded term having either of the following definitions:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_extraction\"></a>",
         "<h2 class=\"hide-from-toc\"> feature extraction</h2>",
         "<p>Overloaded term having either of the following definitions:</p>",
         "<ul>\n<li>Retrieving intermediate feature representations calculated by an\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a> or pretrained model\n(for example, <a href=\"#hidden_layer\"><strong>hidden layer</strong></a> values in a\n<a href=\"#neural_network\"><strong>neural network</strong></a>) for use in another model as input.</li>\n<li>Synonym for <a href=\"#feature_engineering\"><strong>feature engineering</strong></a>.</li>\n</ul>",
         "<li>Retrieving intermediate feature representations calculated by an\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a> or pretrained model\n(for example, <a href=\"#hidden_layer\"><strong>hidden layer</strong></a> values in a\n<a href=\"#neural_network\"><strong>neural network</strong></a>) for use in another model as input.</li>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a>",
         "<strong>unsupervised</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layer</strong></a>",
         "<strong>hidden layer</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<li>Synonym for <a href=\"#feature_engineering\"><strong>feature engineering</strong></a>.</li>",
         "<a href=\"#feature_engineering\"><strong>feature engineering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_extraction",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature set",
      "definition_text":"The group of features your machine learning model trains on. For example, postal code, property size, and property condition might comprise a simple feature set for a model that predicts housing prices.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_set\"></a>",
         "<h2 class=\"hide-from-toc\"> feature set</h2>",
         "<p>The group of <a href=\"#feature\"><strong>features</strong></a> your machine learning model trains on.\nFor example, postal code, property size, and property condition might\ncomprise a simple feature set for a model that predicts housing prices.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature spec",
      "definition_text":"Describes the information required to extract features data from the tf.Example protocol buffer. Because the tf.Example protocol buffer is just a container for data, you must specify the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_spec\"></a>",
         "<h2 class=\"hide-from-toc\"> feature spec</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>Describes the information required to extract <a href=\"#feature\"><strong>features</strong></a> data\nfrom the <a href=\"#tf.Example\"><strong>tf.Example</strong></a> protocol buffer. Because the\ntf.Example protocol buffer is just a container for data, you must specify\nthe following:</p>",
         "<a href=\"#feature\"><strong>features</strong></a>",
         "<strong>features</strong>",
         "<a href=\"#tf.Example\"><strong>tf.Example</strong></a>",
         "<strong>tf.Example</strong>",
         "<ul>\n<li>the data to extract (that is, the keys for the features)</li>\n<li>the data type (for example, float or int)</li>\n<li>The length (fixed or variable)</li>\n</ul>",
         "<li>the data to extract (that is, the keys for the features)</li>",
         "<li>the data type (for example, float or int)</li>",
         "<li>The length (fixed or variable)</li>",
         "<p>The <a href=\"#Estimators\"><strong>Estimator API</strong></a> provides facilities for producing a\nfeature spec from a list of\n<a href=\"#feature_columns\"><strong>FeatureColumns</strong></a>.</p>",
         "<a href=\"#Estimators\"><strong>Estimator API</strong></a>",
         "<strong>Estimator API</strong>",
         "<a href=\"#feature_columns\"><strong>FeatureColumns</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_spec",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feature vector",
      "definition_text":"The list of feature values representing an example passed into a model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feature_vector\"></a>",
         "<h2 class=\"hide-from-toc\"> feature vector</h2>",
         "<p>The list of feature values representing an <a href=\"#example\"><strong>example</strong></a>\npassed into a model.</p>",
         "<a href=\"#example\"><strong>example</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feature_vector",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"federated learning",
      "definition_text":"A distributed machine learning approach that trains machine learning models using decentralized examples residing on devices such as smartphones. In federated learning, a subset of devices downloads the current model from a central coordinating server. The devices use the examples stored on the devices to make improvements to the model. The devices then upload the model improvements (but not the training examples) to the coordinating server, where they are aggregated with other updates to yield an improved global model. After the aggregation, the model updates computed by devices are no longer needed, and can be discarded.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"federated_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> federated learning</h2>",
         "<p>A distributed machine learning approach that <a href=\"#training\"><strong>trains</strong></a>\nmachine learning <a href=\"#model\"><strong>models</strong></a> using decentralized\n<a href=\"#example\"><strong>examples</strong></a> residing on devices such as smartphones.\nIn federated learning, a subset of devices downloads the current model\nfrom a central coordinating server. The devices use the examples stored\non the devices to make improvements to the model. The devices then upload\nthe model improvements (but not the training examples) to the coordinating\nserver, where they are aggregated with other updates to yield an improved\nglobal model. After the aggregation, the model updates computed by devices\nare no longer needed, and can be discarded.</p>",
         "<a href=\"#training\"><strong>trains</strong></a>",
         "<strong>trains</strong>",
         "<a href=\"#model\"><strong>models</strong></a>",
         "<strong>models</strong>",
         "<a href=\"#example\"><strong>examples</strong></a>",
         "<strong>examples</strong>",
         "<p>Since the training examples are never uploaded, federated learning follows the\nprivacy principles of focused data collection and data minimization.</p>",
         "<p>For more information about federated learning,\nsee <a href=\"https://federated.withgoogle.com\" target=\"T\">this tutorial</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#federated_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feedback loop",
      "definition_text":"In machine learning, a situation in which a model's predictions influence the training data for the same model or another model. For example, a model that recommends movies will influence the movies that people see, which will then influence subsequent movie recommendation models.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feedback_loop\"></a>",
         "<h2 class=\"hide-from-toc\"> feedback loop</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feedback_loop",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"feedforward neural network",
      "definition_text":"A neural network without cyclic or recursive connections. For example, traditional deep neural networks are feedforward neural networks. Contrast with recurrent neural networks, which are cyclic.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"feedforward_neural_network\"></a>",
         "<h2 class=\"hide-from-toc\"> feedforward neural network (FFN)</h2>",
         "<p>A neural network without cyclic or recursive connections. For example,\ntraditional <a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a> are\nfeedforward neural networks. Contrast with <a href=\"#recurrent_neural_network\"><strong>recurrent neural\nnetworks</strong></a>, which are cyclic.</p>",
         "<a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a>",
         "<strong>deep neural networks</strong>",
         "<a href=\"#recurrent_neural_network\"><strong>recurrent neural\nnetworks</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#feedforward_neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"few-shot learning",
      "definition_text":"A machine learning approach, often used for object classification, designed to learn effective classifiers from only a small number of training examples.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"few-shot_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> few-shot learning</h2>",
         "<p>A machine learning approach, often used for object classification,\ndesigned to learn effective classifiers from only a small number of\ntraining examples.</p>",
         "<p>See also <a href=\"#one-shot_learning\"><strong>one-shot learning</strong></a>.</p>",
         "<a href=\"#one-shot_learning\"><strong>one-shot learning</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#few-shot_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"fine tuning",
      "definition_text":"Perform a secondary optimization to adjust the parameters of an already trained model to fit a new problem. Fine tuning often refers to refitting the weights of a trained unsupervised model to a supervised model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"fine_tuning\"></a>",
         "<h2 class=\"hide-from-toc\">fine tuning</h2>",
         "<p>Perform a secondary optimization to adjust the parameters of an already\ntrained <a href=\"#model\"><strong>model</strong></a> to fit a new problem. Fine tuning often\nrefers to refitting the weights of a trained\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a> model to a\n<a href=\"#supervised_machine_learning\"><strong>supervised</strong></a> model.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a>",
         "<strong>unsupervised</strong>",
         "<a href=\"#supervised_machine_learning\"><strong>supervised</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#fine_tuning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"forget gate",
      "definition_text":"The portion of a Long Short-Term Memory cell that regulates the flow of information through the cell. Forget gates maintain context by deciding which information to discard from the cell state.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"forget_gate\"></a>",
         "<h2 class=\"hide-from-toc\">forget gate</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>The portion of a <a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a>\ncell that regulates the flow of information through the cell.\nForget gates maintain context by deciding which information to discard\nfrom the cell state.</p>",
         "<a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#forget_gate",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"full softmax",
      "definition_text":"See softmax.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"full_softmax\"></a>",
         "<h2 class=\"hide-from-toc\"> full softmax</h2>",
         "<p>See <a href=\"#softmax\"><strong>softmax</strong></a>. Contrast with\n<a href=\"#candidate_sampling\"><strong>candidate sampling</strong></a>.</p>",
         "<a href=\"#softmax\"><strong>softmax</strong></a>",
         "<strong>softmax</strong>",
         "<a href=\"#candidate_sampling\"><strong>candidate sampling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#full_softmax",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"fully connected layer",
      "definition_text":"A hidden layer in which each node is connected to every node in the subsequent hidden layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"fully_connected_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> fully connected layer</h2>",
         "<p>A <a href=\"#hidden_layer\"><strong>hidden layer</strong></a> in which each <a href=\"#node\"><strong>node</strong></a> is\nconnected to <em>every</em> node in the subsequent hidden layer.</p>",
         "<a href=\"#hidden_layer\"><strong>hidden layer</strong></a>",
         "<strong>hidden layer</strong>",
         "<a href=\"#node\"><strong>node</strong></a>",
         "<strong>node</strong>",
         "<em>every</em>",
         "<p>A fully connected layer is also known as a <a href=\"#dense_layer\"><strong>dense layer</strong></a>.</p>",
         "<a href=\"#dense_layer\"><strong>dense layer</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#fully_connected_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"GAN",
      "definition_text":"Abbreviation for generative adversarial network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"GAN\"></a>",
         "<h2 class=\"hide-from-toc\"> GAN</h2>",
         "<p>Abbreviation for <a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a>.</p>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#GAN",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generalization",
      "definition_text":"Refers to your model's ability to make correct predictions on new, previously unseen data as opposed to the data used to train the model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generalization\"></a>",
         "<h2 class=\"hide-from-toc\"> generalization</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generalization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generalization curve",
      "definition_text":"A loss curve showing both the training set and the validation set. A generalization curve can help you detect possible overfitting.  For example, the following generalization curve suggests overfitting because loss for the validation set ultimately becomes significantly higher than for the training set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generalization_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> generalization curve</h2>",
         "<p>A <a href=\"#loss_curve\"><strong>loss curve</strong></a> showing both the\n<a href=\"#training_set\"><strong>training set</strong></a> and the\n<a href=\"#validation_set\"><strong>validation set</strong></a>.\nA generalization curve can help you detect possible\n<a href=\"#overfitting\"><strong>overfitting</strong></a>.  For example, the following\ngeneralization curve suggests overfitting because loss for\nthe validation set ultimately becomes significantly higher\nthan for the training set.</p>",
         "<a href=\"#loss_curve\"><strong>loss curve</strong></a>",
         "<strong>loss curve</strong>",
         "<a href=\"#training_set\"><strong>training set</strong></a>",
         "<strong>training set</strong>",
         "<a href=\"#validation_set\"><strong>validation set</strong></a>",
         "<strong>validation set</strong>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>",
         "<strong>overfitting</strong>",
         "<p>\n<img alt=\"A Cartesian plot in which the y-axis is labeled 'loss' and the x-axis\nis labeled 'iterations'. Two graphs appear. One graph shows a loss curve\nfor a training set and the other graph shows a loss curve for a validation\nset. The two curves start off similarly, but the curve for the training set\neventually dips far lower than the curve for the validation set.\" height=\"500\" src=\"/machine-learning/glossary/images/GeneralizationCurve.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generalization_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generalized linear model",
      "definition_text":"A generalization of least squares regression models, which are based on Gaussian noise, to other types of models based on other types of noise, such as Poisson noise or categorical noise. Examples of generalized linear models include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generalized_linear_model\"></a>",
         "<h2 class=\"hide-from-toc\"> generalized linear model</h2>",
         "<p>A generalization of <a href=\"#least_squares_regression\"><strong>least squares regression</strong></a>\nmodels, which are based on\n<a href=\"https://wikipedia.org/wiki/Gaussian_noise\" target=\"T\">Gaussian\nnoise</a>, to other\ntypes of models based on other types of noise, such as\n<a href=\"https://wikipedia.org/wiki/Shot_noise\" target=\"T\">Poisson noise</a>\nor\ncategorical noise. Examples of generalized linear models include:</p>",
         "<a href=\"#least_squares_regression\"><strong>least squares regression</strong></a>",
         "<strong>least squares regression</strong>",
         "<a href=\"https://wikipedia.org/wiki/Gaussian_noise\" target=\"T\">Gaussian\nnoise</a>",
         "<a href=\"https://wikipedia.org/wiki/Shot_noise\" target=\"T\">Poisson noise</a>",
         "<ul>\n<li><a href=\"#logistic_regression\"><strong>logistic regression</strong></a></li>\n<li>multi-class regression</li>\n<li>least squares regression</li>\n</ul>",
         "<li><a href=\"#logistic_regression\"><strong>logistic regression</strong></a></li>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>",
         "<strong>logistic regression</strong>",
         "<li>multi-class regression</li>",
         "<li>least squares regression</li>",
         "<p>The parameters of a generalized linear model can be found through\n<a href=\"#convex_optimization\"><strong>convex optimization</strong></a>.</p>",
         "<a href=\"#convex_optimization\"><strong>convex optimization</strong></a>",
         "<strong>convex optimization</strong>",
         "<p>Generalized linear models exhibit the following properties:</p>",
         "<ul>\n<li>The average prediction of the optimal least squares regression model is\nequal to the average label on the training data.</li>\n<li>The average probability predicted by the optimal logistic regression\nmodel is equal to the average label on the training data.</li>\n</ul>",
         "<li>The average prediction of the optimal least squares regression model is\nequal to the average label on the training data.</li>",
         "<li>The average probability predicted by the optimal logistic regression\nmodel is equal to the average label on the training data.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generalized_linear_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generative adversarial network",
      "definition_text":"A system to create new data in which a generator creates data and a discriminator determines whether that created data is valid or invalid.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generative_adversarial_network\"></a>",
         "<h2 class=\"hide-from-toc\"> generative adversarial network (GAN)</h2>",
         "<p>A system to create new data in which a <a href=\"#generator\"><strong>generator</strong></a> creates\ndata and a <a href=\"#discriminator\"><strong>discriminator</strong></a> determines whether that\ncreated data is valid or invalid.</p>",
         "<a href=\"#generator\"><strong>generator</strong></a>",
         "<strong>generator</strong>",
         "<a href=\"#discriminator\"><strong>discriminator</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generative_adversarial_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generative model",
      "definition_text":"Practically speaking, a model that does either of the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generative_model\"></a>",
         "<h2 class=\"hide-from-toc\"> generative model</h2>",
         "<p>Practically speaking, a model that does either of the following:</p>",
         "<ul>\n<li>Creates (generates) new examples from the training dataset.\nFor example, a generative model could create poetry after training\non a dataset of poems. The <a href=\"#generator\"><strong>generator</strong></a> part of a\n<a href=\"#generative_adversarial_network\"><strong>generative adversarial network</strong></a>\nfalls into this category.</li>\n<li>Determines the probability that a new example comes from the\ntraining set, or was created from the same mechanism that created\nthe training set.  For example, after training on\na dataset consisting of English sentences, a generative model could\ndetermine the probability that new input is a valid English sentence.</li>\n</ul>",
         "<li>Creates (generates) new examples from the training dataset.\nFor example, a generative model could create poetry after training\non a dataset of poems. The <a href=\"#generator\"><strong>generator</strong></a> part of a\n<a href=\"#generative_adversarial_network\"><strong>generative adversarial network</strong></a>\nfalls into this category.</li>",
         "<a href=\"#generator\"><strong>generator</strong></a>",
         "<strong>generator</strong>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial network</strong></a>",
         "<strong>generative adversarial network</strong>",
         "<li>Determines the probability that a new example comes from the\ntraining set, or was created from the same mechanism that created\nthe training set.  For example, after training on\na dataset consisting of English sentences, a generative model could\ndetermine the probability that new input is a valid English sentence.</li>",
         "<p>A generative model can theoretically discern the distribution of examples\nor particular features in a dataset. That is:</p>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\np(examples)\n</pre>",
         "<p>Unsupervised learning models are generative.</p>",
         "<p>Contrast with <a href=\"#discriminative_model\"><strong>discriminative models</strong></a>.</p>",
         "<a href=\"#discriminative_model\"><strong>discriminative models</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generative_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"generator",
      "definition_text":"The subsystem within a generative adversarial network that creates new examples.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"generator\"></a>",
         "<h2 class=\"hide-from-toc\"> generator</h2>",
         "<p>The subsystem within a <a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a>\nthat creates new <a href=\"#example\"><strong>examples</strong></a>.</p>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial\nnetwork</strong></a>",
         "<strong>generative adversarial\nnetwork</strong>",
         "<a href=\"#example\"><strong>examples</strong></a>",
         "<strong>examples</strong>",
         "<p>Contrast with <a href=\"#discriminative_model\"><strong>discriminative model</strong></a>.</p>",
         "<a href=\"#discriminative_model\"><strong>discriminative model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#generator",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"gradient",
      "definition_text":"The vector of partial derivatives with respect to all of the independent variables.  In machine learning, the gradient is the vector of partial derivatives of the model function.  The gradient points in the direction of steepest ascent.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"gradient\"></a>",
         "<h2 class=\"hide-from-toc\"> gradient</h2>",
         "<p>The vector of <a href=\"#partial_derivative\"><strong>partial derivatives</strong></a> with respect to\nall of the independent variables.  In machine learning, the gradient is\nthe vector of partial derivatives of the model function.  The gradient points\nin the direction of steepest ascent.</p>",
         "<a href=\"#partial_derivative\"><strong>partial derivatives</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#gradient",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"gradient clipping",
      "definition_text":"A commonly used mechanism to mitigate the exploding gradient problem by artificially limiting (clipping) the maximum value of gradients when using gradient descent to train a model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"gradient_clipping\"></a>",
         "<h2 class=\"hide-from-toc\"> gradient clipping</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>A commonly used mechanism to mitigate the\n<a href=\"#exploding_gradient_problem\"><strong>exploding gradient problem</strong></a> by artificially\nlimiting (clipping) the maximum value of gradients when using\n<a href=\"#gradient_descent\"><strong>gradient descent</strong></a> to train a model.</p>",
         "<a href=\"#exploding_gradient_problem\"><strong>exploding gradient problem</strong></a>",
         "<strong>exploding gradient problem</strong>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#gradient_clipping",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"gradient descent",
      "definition_text":"A technique to minimize loss by computing the gradients of loss with respect to the model's parameters, conditioned on training data. Informally, gradient descent iteratively adjusts parameters, gradually finding the best combination of weights and bias to minimize loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"gradient_descent\"></a>",
         "<h2 class=\"hide-from-toc\"> gradient descent</h2>",
         "<p>A technique to minimize <a href=\"#loss\"><strong>loss</strong></a> by computing the gradients of\nloss with respect to the model's parameters, conditioned on training data.\nInformally, gradient descent iteratively adjusts parameters, gradually\nfinding the best combination of <a href=\"#weight\"><strong>weights</strong></a> and bias to\nminimize loss.</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#weight\"><strong>weights</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#gradient_descent",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"graph",
      "definition_text":"In TensorFlow, a computation specification. Nodes in the graph represent operations. Edges are directed and represent passing the result of an operation (a Tensor) as an operand to another operation. Use TensorBoard to visualize a graph.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"graph\"></a>",
         "<h2 class=\"hide-from-toc\"> graph</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>In TensorFlow, a computation specification. Nodes in the graph\nrepresent operations. Edges are directed and represent passing the result\nof an operation (a <a href=\"#tensor\"><strong>Tensor</strong></a>) as an\noperand to another operation. Use\n<a href=\"#TensorBoard\"><strong>TensorBoard</strong></a> to visualize a graph.</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>",
         "<strong>Tensor</strong>",
         "<a href=\"#TensorBoard\"><strong>TensorBoard</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#graph",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"graph execution",
      "definition_text":"A TensorFlow programming environment in which the program first constructs a graph and then executes all or part of that graph. Graph execution is the default execution mode in TensorFlow 1.x.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"graph_execution\"></a>",
         "<h2 class=\"hide-from-toc\"> graph execution</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A TensorFlow programming environment in which the program first constructs\na <a href=\"#graph\"><strong>graph</strong></a> and then executes all or part of that graph. Graph\nexecution is the default execution mode in TensorFlow 1.x.</p>",
         "<a href=\"#graph\"><strong>graph</strong></a>",
         "<strong>graph</strong>",
         "<p>Contrast with <a href=\"#eager_execution\"><strong>eager execution</strong></a>.</p>",
         "<a href=\"#eager_execution\"><strong>eager execution</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#graph_execution",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"greedy policy",
      "definition_text":"In reinforcement learning, a policy that always chooses the action with the highest expected return.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"greedy_policy\"></a>",
         "<h2 class=\"hide-from-toc\"> greedy policy</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, a <a href=\"#policy\"><strong>policy</strong></a> that always chooses the\naction with the highest expected <a href=\"#return\"><strong>return</strong></a>.</p>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#return\"><strong>return</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#greedy_policy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ground truth",
      "definition_text":"The correct answer. Reality. Since reality is often subjective, expert raters typically are the proxy for ground truth.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ground_truth\"></a>",
         "<h2 class=\"hide-from-toc\"> ground truth</h2>",
         "<p>The correct answer. Reality. Since reality is often subjective,\nexpert <a href=\"#rater\"><strong>raters</strong></a> typically are the proxy for ground truth.</p>",
         "<a href=\"#rater\"><strong>raters</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ground_truth",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"group attribution bias",
      "definition_text":"Assuming that what is true for an individual is also true for everyone in that group. The effects of group attribution bias can be exacerbated if a convenience sampling is used for data collection. In a non-representative sample, attributions may be made that do not reflect reality.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"group_attribution_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> group attribution bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Assuming that what is true for an individual is also true for everyone\nin that group. The effects of group attribution bias can be exacerbated\nif a <a href=\"#convenience_sampling\"><strong>convenience sampling</strong></a>\nis used for data collection. In a non-representative sample, attributions\nmay be made that do not reflect reality.</p>",
         "<a href=\"#convenience_sampling\"><strong>convenience sampling</strong></a>",
         "<strong>convenience sampling</strong>",
         "<p>See also <a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a>\nand <a href=\"#in-group_bias\"><strong>in-group bias</strong></a>.</p>",
         "<a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a>",
         "<strong>out-group homogeneity bias</strong>",
         "<a href=\"#in-group_bias\"><strong>in-group bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#group_attribution_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hashing",
      "definition_text":"In machine learning, a mechanism for bucketing categorical data, particularly when the number of categories is large, but the number of categories actually appearing in the dataset is comparatively small.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hashing\"></a>",
         "<h2 class=\"hide-from-toc\"> hashing</h2>",
         "<p>In machine learning, a mechanism for bucketing\n<a href=\"#categorical_data\"><strong>categorical data</strong></a>, particularly when the number\nof categories is large, but the number of categories actually appearing\nin the dataset is comparatively small.</p>",
         "<a href=\"#categorical_data\"><strong>categorical data</strong></a>",
         "<strong>categorical data</strong>",
         "<p>For example, Earth is home to about 60,000 tree species. You could\nrepresent each of the 60,000 tree species in 60,000 separate categorical\nbuckets. Alternatively, if only 200 of those tree species actually appear\nin a dataset, you could use hashing to divide tree species into\nperhaps 500 buckets.</p>",
         "<p>A single bucket could contain multiple tree species. For example, hashing\ncould place <em>baobab</em> and <em>red maple</em>\u2014two genetically dissimilar\nspecies\u2014into the same bucket. Regardless, hashing is still a good way to\nmap large categorical sets into the desired number of buckets. Hashing turns a\ncategorical feature having a large number of possible values into a much\nsmaller number of values by grouping values in a\ndeterministic way.</p>",
         "<em>baobab</em>",
         "<em>red maple</em>",
         "<p>For more information on hashing, see the\n<a href=\"https://www.tensorflow.org/guide/feature_columns\" target=\"T\">Feature\nColumns chapter</a> in the TensorFlow Programmers Guide.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hashing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"heuristic",
      "definition_text":"A quick solution to a problem, which may or may not be the best solution. For example, \"With a heuristic, we achieved 86% accuracy. When we switched to a deep neural network, accuracy went up to 98%.\"",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"heuristic\"></a>",
         "<h2 class=\"hide-from-toc\"> heuristic</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#heuristic",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hidden layer",
      "definition_text":"A synthetic layer in a neural network between the input layer (that is, the features) and the output layer (the prediction). Hidden layers typically contain an activation function (such as ReLU) for training.  A deep neural network contains more than one hidden layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hidden_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> hidden layer</h2>",
         "<p>A synthetic layer in a <a href=\"#neural_network\"><strong>neural network</strong></a> between the\n<a href=\"#input_layer\"><strong>input layer</strong></a> (that is, the features) and the\n<a href=\"#output_layer\"><strong>output layer</strong></a> (the prediction). Hidden layers typically\ncontain an <a href=\"#activation_function\"><strong>activation function</strong></a> (such as\n<a href=\"#ReLU\"><strong>ReLU</strong></a>) for training.  A <a href=\"#deep_neural_network\"><strong>deep neural\nnetwork</strong></a> contains more than one\nhidden layer.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#input_layer\"><strong>input layer</strong></a>",
         "<strong>input layer</strong>",
         "<a href=\"#output_layer\"><strong>output layer</strong></a>",
         "<strong>output layer</strong>",
         "<a href=\"#activation_function\"><strong>activation function</strong></a>",
         "<strong>activation function</strong>",
         "<a href=\"#ReLU\"><strong>ReLU</strong></a>",
         "<strong>ReLU</strong>",
         "<a href=\"#deep_neural_network\"><strong>deep neural\nnetwork</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hidden_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hierarchical clustering",
      "definition_text":"A category of clustering algorithms that create a tree of clusters. Hierarchical clustering is well-suited to hierarchical data, such as botanical taxonomies. There are two types of hierarchical clustering algorithms:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hierarchical_clustering\"></a>",
         "<h2 class=\"hide-from-toc\"> hierarchical clustering</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>A category of <a href=\"#clustering\"><strong>clustering</strong></a> algorithms that create a tree\nof clusters. Hierarchical clustering is well-suited to hierarchical data,\nsuch as botanical taxonomies. There are two types of hierarchical\nclustering algorithms:</p>",
         "<a href=\"#clustering\"><strong>clustering</strong></a>",
         "<strong>clustering</strong>",
         "<ul>\n<li><strong>Agglomerative clustering</strong> first assigns every example to its own cluster,\nand iteratively merges the closest clusters to create a hierarchical\ntree.</li>\n<li><strong>Divisive clustering</strong> first groups all examples into one cluster and then\niteratively divides the cluster into a hierarchical tree.</li>\n</ul>",
         "<li><strong>Agglomerative clustering</strong> first assigns every example to its own cluster,\nand iteratively merges the closest clusters to create a hierarchical\ntree.</li>",
         "<strong>Agglomerative clustering</strong>",
         "<li><strong>Divisive clustering</strong> first groups all examples into one cluster and then\niteratively divides the cluster into a hierarchical tree.</li>",
         "<strong>Divisive clustering</strong>",
         "<p>Contrast with <a href=\"#centroid_based_clustering\"><strong>centroid-based clustering</strong></a>.</p>",
         "<a href=\"#centroid_based_clustering\"><strong>centroid-based clustering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hierarchical_clustering",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hinge-loss",
      "definition_text":"A family of loss functions for classification designed to find the decision boundary as distant as possible from each training example, thus maximizing the margin between examples and the boundary. KSVMs use hinge loss (or a related function, such as squared hinge loss). For binary classification, the hinge loss function is defined as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hinge-loss\"></a>",
         "<h2 class=\"hide-from-toc\"> hinge loss</h2>",
         "<p>A family of <a href=\"#loss\"><strong>loss</strong></a> functions for\n<a href=\"#classification_model\"><strong>classification</strong></a> designed to find the\n<a href=\"#decision_boundary\"><strong>decision boundary</strong></a> as distant as possible\nfrom each training example,\nthus maximizing the margin between examples and the boundary.\n<a href=\"#KSVMs\"><strong>KSVMs</strong></a> use hinge loss (or a related function, such as\nsquared hinge loss). For binary classification, the hinge loss function\nis defined as follows:</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#classification_model\"><strong>classification</strong></a>",
         "<strong>classification</strong>",
         "<a href=\"#decision_boundary\"><strong>decision boundary</strong></a>",
         "<strong>decision boundary</strong>",
         "<a href=\"#KSVMs\"><strong>KSVMs</strong></a>",
         "<strong>KSVMs</strong>",
         "<div>\n$$\\text{loss} = \\text{max}(0, 1 - (y * y'))$$\n</div>",
         "<p>where <em>y</em> is the true label, either -1 or +1, and <em>y'</em> is the raw output\nof the classifier model:</p>",
         "<em>y</em>",
         "<em>y'</em>",
         "<div>\n$$y' = b + w_1x_1 + w_2x_2 + \u2026 w_nx_n$$\n</div>",
         "<p>Consequently, a plot of hinge loss vs. (y * y') looks as follows:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/hinge-loss.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hinge-loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"holdout data",
      "definition_text":"Examples intentionally not used (\"held out\") during training. The validation dataset and test dataset are examples of holdout data. Holdout data helps evaluate your model's ability to generalize to data other than the data it was trained on. The loss on the holdout set provides a better estimate of the loss on an unseen dataset than does the loss on the training set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"holdout_data\"></a>",
         "<h2 class=\"hide-from-toc\"> holdout data</h2>",
         "<p><a href=\"#example\"><strong>Examples</strong></a> intentionally not used (\"held out\") during training.\nThe <a href=\"#validation_set\"><strong>validation dataset</strong></a> and\n<a href=\"#test_set\"><strong>test dataset</strong></a> are examples of holdout data. Holdout data\nhelps evaluate your model's ability to generalize to data other than the\ndata it was trained on. The loss on the holdout set provides a better\nestimate of the loss on an unseen dataset than does the loss on the\ntraining set.</p>",
         "<a href=\"#example\"><strong>Examples</strong></a>",
         "<strong>Examples</strong>",
         "<a href=\"#validation_set\"><strong>validation dataset</strong></a>",
         "<strong>validation dataset</strong>",
         "<a href=\"#test_set\"><strong>test dataset</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#holdout_data",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hyperparameter",
      "definition_text":"The \"knobs\" that you tweak during successive runs of training a model. For example, learning rate is a hyperparameter.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hyperparameter\"></a>",
         "<h2 class=\"hide-from-toc\"> hyperparameter</h2>",
         "<p>The \"knobs\" that you\ntweak during successive runs of training a model. For example,\n<a href=\"#learning_rate\"><strong>learning rate</strong></a> is a hyperparameter.</p>",
         "<a href=\"#learning_rate\"><strong>learning rate</strong></a>",
         "<strong>learning rate</strong>",
         "<p>Contrast with <a href=\"#parameter\"><strong>parameter</strong></a>.</p>",
         "<a href=\"#parameter\"><strong>parameter</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hyperparameter",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"hyperplane",
      "definition_text":"A boundary that separates a space into two subspaces.  For example, a line is a hyperplane in two dimensions and a plane is a hyperplane in three dimensions. More typically in machine learning, a hyperplane is the boundary separating a high-dimensional space.  Kernel Support Vector Machines use hyperplanes to separate positive classes from negative classes, often in a very high-dimensional space.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"hyperplane\"></a>",
         "<h2 class=\"hide-from-toc\"> hyperplane</h2>",
         "<p>A boundary that separates a space into two subspaces.  For example, a line is a\nhyperplane in two dimensions and a plane is a hyperplane in three dimensions.\nMore typically in machine learning, a hyperplane is the boundary separating a\nhigh-dimensional space.  <a href=\"#KSVMs\"><strong>Kernel Support Vector Machines</strong></a> use\nhyperplanes to separate positive classes from negative classes, often in a very\nhigh-dimensional space.</p>",
         "<a href=\"#KSVMs\"><strong>Kernel Support Vector Machines</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#hyperplane",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"iid abbreviation",
      "definition_text":"Abbreviation for independently and identically distributed.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"iid_abbreviation\"></a>",
         "<h2 class=\"hide-from-toc\"> i.i.d.</h2>",
         "<p>Abbreviation for <a href=\"#iid\"><strong>independently and identically distributed</strong></a>.</p>",
         "<a href=\"#iid\"><strong>independently and identically distributed</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#iid_abbreviation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"image recognition",
      "definition_text":"A process that classifies object(s), pattern(s), or concept(s) in an image. Image recognition is also known as image classification.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"image_recognition\"></a>",
         "<h2 class=\"hide-from-toc\"> image recognition</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>A process that classifies object(s), pattern(s), or concept(s) in an image.\nImage recognition is also known as <strong>image classification</strong>.</p>",
         "<strong>image classification</strong>",
         "<p>For more information, see\n<a class=\"gc-analytics-event\" data-action=\"click\" data-category=\"launchImageClassificationPracticum\" data-label=\"ml-glossary\" href=\"/machine-learning/practica/image-classification\" target=\"T\">ML Practicum: Image Classification</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#image_recognition",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"imbalanced data set",
      "definition_text":"Synonym for class-imbalanced dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"imbalanced_data_set\"></a>",
         "<h2 class=\"hide-from-toc\"> imbalanced dataset</h2>",
         "<p>Synonym for <a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>.</p>",
         "<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#imbalanced_data_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"implicit bias",
      "definition_text":"Automatically making an association or assumption based on one\u2019s mental models and memories. Implicit bias can affect the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"implicit_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> implicit bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Automatically making an association or assumption based on one\u2019s mental\nmodels and memories. Implicit bias can affect the following:</p>",
         "<ul>\n<li>How data is collected and classified.</li>\n<li>How machine learning systems are designed and developed.</li>\n</ul>",
         "<li>How data is collected and classified.</li>",
         "<li>How machine learning systems are designed and developed.</li>",
         "<p>For example, when building a classifier to identify wedding photos,\nan engineer may use the presence of a white dress in a photo as a feature.\nHowever, white dresses have been customary only during certain eras and\nin certain cultures.</p>",
         "<p>See also <a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a>.</p>",
         "<a href=\"#confirmation_bias\"><strong>confirmation bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#implicit_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"incompatibility",
      "definition_text":"The idea that some notions of fairness are mutually incompatible and cannot be satisfied simultaneously. As a result, there is no single universal metric for quantifying fairness that can be applied to all ML problems.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"incompatibility\"></a>",
         "<h2 class=\"hide-from-toc\"> incompatibility of fairness metrics</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>The idea that some notions of fairness are mutually incompatible and\ncannot be satisfied simultaneously. As a result, there is no single\nuniversal <a href=\"#fairness_metric\"><strong>metric</strong></a> for quantifying fairness\nthat can be applied to all ML problems.</p>",
         "<a href=\"#fairness_metric\"><strong>metric</strong></a>",
         "<strong>metric</strong>",
         "<p>While this may seem discouraging, incompatibility of fairness metrics\ndoesn\u2019t imply that fairness efforts are fruitless. Instead, it suggests\nthat fairness must be defined contextually for a given ML problem, with\nthe goal of preventing harms specific to its use cases.</p>",
         "<p>See <a href=\"https://arxiv.org/pdf/1609.07236.pdf\" target=\"T\">\"On the\n(im)possibility of fairness\"</a> for a more detailed discussion of this topic.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#incompatibility",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"iid",
      "definition_text":"Data drawn from a distribution that doesn't change, and where each value drawn doesn't depend on values that have been drawn previously. An i.i.d. is the ideal gas of machine learning\u2014a useful mathematical construct but almost never exactly found in the real world. For example, the distribution of visitors to a web page may be i.i.d. over a brief window of time; that is, the distribution doesn't change during that brief window and one person's visit is generally independent of another's visit. However, if you expand that window of time, seasonal differences in the web page's visitors may appear.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"iid\"></a>",
         "<h2 class=\"hide-from-toc\">independently and identically distributed (i.i.d)</h2>",
         "<p>Data drawn from a distribution that doesn't change, and where each value\ndrawn doesn't depend on values that have been drawn previously. An i.i.d.\nis the <a href=\"https://wikipedia.org/wiki/Ideal_gas\" target=\"T\">ideal gas</a>\nof machine\nlearning\u2014a useful mathematical construct but almost never exactly found\nin the real world. For example, the distribution of visitors to a web page\nmay be i.i.d. over a brief window of time; that is, the distribution doesn't\nchange during that brief window and one person's visit is generally\nindependent of another's visit. However, if you expand that window of time,\nseasonal differences in the web page's visitors may appear.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#iid",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"individual fairness",
      "definition_text":"A fairness metric that checks whether similar individuals are classified similarly. For example, Brobdingnagian Academy might want to satisfy individual fairness by ensuring that two students with identical grades and standardized test scores are equally likely to gain admission.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"individual_fairness\"></a>",
         "<h2 class=\"hide-from-toc\"> individual fairness</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>A fairness metric that checks whether similar individuals are classified\nsimilarly. For example, Brobdingnagian Academy might want to satisfy\nindividual fairness by ensuring that two students with identical grades\nand standardized test scores are equally likely to gain admission.</p>",
         "<p>Note that individual fairness relies entirely on how you define \"similarity\"\n(in this case, grades and test scores), and you can run the risk of\nintroducing new fairness problems if your similarity metric misses important\ninformation (such as the rigor of a student\u2019s curriculum).</p>",
         "<p>See <a href=\"https://arxiv.org/pdf/1104.3913.pdf\" target=\"T\">\"Fairness Through\nAwareness\"</a> for a more detailed discussion of individual fairness.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#individual_fairness",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"inference",
      "definition_text":"In machine learning, often refers to the process of making predictions by applying the trained model to unlabeled examples. In statistics, inference refers to the process of fitting the parameters of a distribution conditioned on some observed data. (See the  Wikipedia article on statistical inference.)",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"inference\"></a>",
         "<h2 class=\"hide-from-toc\"> inference</h2>",
         "<p>In machine learning, often refers to the process of making predictions by\napplying the trained model to <a href=\"#unlabeled_example\"><strong>unlabeled examples</strong></a>.\nIn statistics, inference refers to the process of fitting the parameters\nof a distribution conditioned on some observed data. (See the\n<a href=\"https://wikipedia.org/wiki/Statistical_inference\" target=\"T\">\nWikipedia article on statistical inference</a>.)</p>",
         "<a href=\"#unlabeled_example\"><strong>unlabeled examples</strong></a>",
         "<strong>unlabeled examples</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#inference",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"in-group bias",
      "definition_text":"Showing partiality to one's own group or own characteristics. If testers or raters consist of the machine learning developer's friends, family, or colleagues, then in-group bias may invalidate product testing or the dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"in-group_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> in-group bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Showing partiality to one's own group or own characteristics.\nIf testers or raters consist of the machine learning developer's friends,\nfamily, or colleagues, then in-group bias may invalidate product testing\nor the dataset.</p>",
         "<p>In-group bias is a form of\n<a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a>.\nSee also <a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a>.</p>",
         "<a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a>",
         "<strong>group attribution bias</strong>",
         "<a href=\"#out-group_homogeneity_bias\"><strong>out-group homogeneity bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#in-group_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"input function",
      "definition_text":"In TensorFlow, a function that returns input data to the training, evaluation, or prediction method of an Estimator.  For example, the training input function returns a batch of features and labels from the training set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"input_function\"></a>",
         "<h2 class=\"hide-from-toc\"> input function</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>In TensorFlow, a function that returns input data to the training, evaluation,\nor prediction method of an <a href=\"#Estimators\"><strong>Estimator</strong></a>.  For example,\nthe training input function returns a <a href=\"#batch\"><strong>batch</strong></a> of features\nand labels from the <a href=\"#training_set\"><strong>training set</strong></a>.</p>",
         "<a href=\"#Estimators\"><strong>Estimator</strong></a>",
         "<strong>Estimator</strong>",
         "<a href=\"#batch\"><strong>batch</strong></a>",
         "<strong>batch</strong>",
         "<a href=\"#training_set\"><strong>training set</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#input_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"input layer",
      "definition_text":"The first layer (the one that receives the input data) in a neural network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"input_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> input layer</h2>",
         "<p>The first layer (the one that receives the input data) in\na <a href=\"#neural_network\"><strong>neural network</strong></a>.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#input_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"instance",
      "definition_text":"Synonym for example.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"instance\"></a>",
         "<h2 class=\"hide-from-toc\"> instance</h2>",
         "<p>Synonym for <a href=\"#example\"><strong>example</strong></a>.</p>",
         "<a href=\"#example\"><strong>example</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#instance",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"interpretability",
      "definition_text":"The degree to which a model's predictions can be readily explained. Deep models are often non-interpretable; that is, a deep model's different layers can be hard to decipher. By contrast, linear regression models and wide models are typically far more interpretable.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"interpretability\"></a>",
         "<h2 class=\"hide-from-toc\"> interpretability</h2>",
         "<p>The degree to which a model's predictions can be readily explained. Deep models\nare often non-interpretable; that is, a deep model's different layers can be\nhard to decipher. By contrast, linear regression models and <a href=\"#wide_model\"><strong>wide\nmodels</strong></a> are typically far more interpretable.</p>",
         "<a href=\"#wide_model\"><strong>wide\nmodels</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#interpretability",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"inter-rater agreement",
      "definition_text":"A measurement of how often human raters agree when doing a task. If raters disagree, the task instructions may need to be improved. Also sometimes called inter-annotator agreement or inter-rater reliability.  See also Cohen's kappa, which is one of the most popular inter-rater agreement measurements.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"inter-rater_agreement\"></a>",
         "<h2 class=\"hide-from-toc\"> inter-rater agreement</h2>",
         "<p>A measurement of how often human raters agree when doing a task.\nIf raters disagree, the task instructions may need to be improved.\nAlso sometimes called <strong>inter-annotator agreement</strong> or\n<strong>inter-rater reliability</strong>.  See also\n<a href=\"https://wikipedia.org/wiki/Cohen%27s_kappa\" target=\"T\">Cohen's\nkappa</a>,\nwhich is one of the most popular inter-rater agreement measurements.</p>",
         "<strong>inter-annotator agreement</strong>",
         "<strong>inter-rater reliability</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#inter-rater_agreement",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"intersection over union",
      "definition_text":"The intersection of two sets divided by their union. In machine-learning image-detection tasks, IoU is used to measure the accuracy of the model\u2019s predicted bounding box with respect to the ground-truth bounding box. In this case, the IoU for the two boxes is the ratio between the overlapping area and the total area, and its value ranges from 0 (no overlap of predicted bounding box and ground-truth bounding box) to 1 (predicted bounding box and ground-truth bounding box have the exact same coordinates).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"intersection_over_union\"></a>",
         "<h2 class=\"hide-from-toc\"> intersection over union (IoU)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>The intersection of two sets divided by their union. In machine-learning\nimage-detection tasks, IoU is used to measure the accuracy of the model\u2019s\npredicted <a href=\"#bounding_box\"><strong>bounding box</strong></a> with respect to the\n<a href=\"#ground_truth\"><strong>ground-truth</strong></a> bounding box. In this case, the IoU for the\ntwo boxes is the ratio between the overlapping area and the total area, and\nits value ranges from 0 (no overlap of predicted bounding box and ground-truth\nbounding box) to 1 (predicted bounding box and ground-truth bounding box have\nthe exact same coordinates).</p>",
         "<a href=\"#bounding_box\"><strong>bounding box</strong></a>",
         "<strong>bounding box</strong>",
         "<a href=\"#ground_truth\"><strong>ground-truth</strong></a>",
         "<strong>ground-truth</strong>",
         "<p>For example, in the image below:</p>",
         "<ul>\n<li>The predicted bounding box (the coordinates delimiting where the model\npredicts the night table in the painting is located) is outlined in purple.</li>\n<li>The ground-truth bounding box (the coordinates delimiting where the night\ntable in the painting is actually located) is outlined in green.</li>\n</ul>",
         "<li>The predicted bounding box (the coordinates delimiting where the model\npredicts the night table in the painting is located) is outlined in purple.</li>",
         "<li>The ground-truth bounding box (the coordinates delimiting where the night\ntable in the painting is actually located) is outlined in green.</li>",
         "<p><img alt=\"The Van Gogh painting 'Vincent's Bedroom in Arles', with two different\n          bounding boxes around the night table beside the bed. The ground-truth\n          bounding box (in green) perfectly circumscribes the night table. The\n          predicted bounding box (in purple) is offset 50% down and to the right\n          of the ground-truth bounding box; it encloses the bottom-right quarter\n          of the night table, but misses the rest of the table.\" src=\"/machine-learning/glossary/images/iou_van_gogh_bounding_boxes.jpg\"/></p>",
         "<img alt=\"The Van Gogh painting 'Vincent's Bedroom in Arles', with two different\n          bounding boxes around the night table beside the bed. The ground-truth\n          bounding box (in green) perfectly circumscribes the night table. The\n          predicted bounding box (in purple) is offset 50% down and to the right\n          of the ground-truth bounding box; it encloses the bottom-right quarter\n          of the night table, but misses the rest of the table.\" src=\"/machine-learning/glossary/images/iou_van_gogh_bounding_boxes.jpg\"/>",
         "<p>Here, the intersection of the bounding boxes for prediction and ground truth\n(below left) is 1, and the union of the bounding boxes for prediction and\nground truth (below right) is 7, so the IoU is \\(\\frac{1}{7}\\).</p>",
         "<div id=\"intersection-union-side-by-side\">\n<img alt=\"Same image as above, but with each bounding box divided into four\n          quadrants. There are seven quadrants total, as the bottom-right\n          quadrant of the ground-truth bounding box and the top-left\n          quadrant of the predicted bounding box overlap each other. This\n          overlapping section (highlighted in green) represents the\n          intersection, and has an area of 1.\" src=\"/machine-learning/glossary/images/iou_van_gogh_intersection.jpg\"/>\n<img alt=\"Same image as above, but with each bounding box divided into four\n          quadrants. There are seven quadrants total, as the bottom-right\n          quadrant of the ground-truth bounding box and the top-left\n          quadrant of the predicted bounding box overlap each other.\n          The entire interior enclosed by both bounding boxes\n          (highlighted in green) represents the union, and has\n          an area of 7.\" src=\"/machine-learning/glossary/images/iou_van_gogh_union.jpg\"/>\n</div>",
         "<img alt=\"Same image as above, but with each bounding box divided into four\n          quadrants. There are seven quadrants total, as the bottom-right\n          quadrant of the ground-truth bounding box and the top-left\n          quadrant of the predicted bounding box overlap each other. This\n          overlapping section (highlighted in green) represents the\n          intersection, and has an area of 1.\" src=\"/machine-learning/glossary/images/iou_van_gogh_intersection.jpg\"/>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#intersection_over_union",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ioou",
      "definition_text":"Abbreviation for intersection over union.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ioou\"></a>",
         "<h2 class=\"hide-from-toc\">IoU</h2>",
         "<p>Abbreviation for <a href=\"#intersection_over_union\"><strong>intersection over union</strong></a>.</p>",
         "<a href=\"#intersection_over_union\"><strong>intersection over union</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ioou",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"item matrix",
      "definition_text":"In recommendation systems, a matrix of embeddings generated by matrix factorization that holds latent signals about each item. Each row of the item matrix holds the value of a single latent feature for all items. For example, consider a movie recommendation system. Each column in the item matrix represents a single movie. The latent signals might represent genres, or might be harder-to-interpret signals that involve complex interactions among genre, stars, movie age, or other factors.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"item_matrix\"></a>",
         "<h2 class=\"hide-from-toc\"> item matrix</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>In <a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>, a\nmatrix of <a href=\"#embeddings\"><strong>embeddings</strong></a> generated by\n<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a>\nthat holds latent signals about each <a href=\"#items\"><strong>item</strong></a>.\nEach row of the item matrix holds the value of a single latent\nfeature for all items.\nFor example, consider a movie recommendation system. Each column\nin the item matrix represents a single movie. The latent signals\nmight represent genres, or might be harder-to-interpret\nsignals that involve complex interactions among genre, stars,\nmovie age, or other factors.</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>",
         "<strong>recommendation systems</strong>",
         "<a href=\"#embeddings\"><strong>embeddings</strong></a>",
         "<strong>embeddings</strong>",
         "<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a>",
         "<strong>matrix factorization</strong>",
         "<a href=\"#items\"><strong>item</strong></a>",
         "<strong>item</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#item_matrix",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"items",
      "definition_text":"In a recommendation system, the entities that a system recommends. For example, videos are the items that a video store recommends, while books are the items that a bookstore recommends.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"items\"></a>",
         "<h2 class=\"hide-from-toc\"> items</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>In a <a href=\"#recommendation_system\"><strong>recommendation system</strong></a>, the entities that\na system recommends. For example, videos are the items that a video store\nrecommends, while books are the items that a bookstore recommends.</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation system</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#items",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"iteration",
      "definition_text":"A single update of a model's weights during training.  An iteration consists of computing the gradients of the parameters with respect to the loss on a single batch of data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"iteration\"></a>",
         "<h2 class=\"hide-from-toc\"> iteration</h2>",
         "<p>A single update of a model's weights during training.  An iteration\nconsists of computing the gradients of the parameters with respect to the\nloss on a single <a href=\"#batch\"><strong>batch</strong></a> of data.</p>",
         "<a href=\"#batch\"><strong>batch</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#iteration",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Keras",
      "definition_text":"A popular Python machine learning API. Keras runs on several deep learning frameworks, including TensorFlow, where it is made available as tf.keras.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Keras\"></a>",
         "<h2 class=\"hide-from-toc\"> Keras</h2>",
         "<p>A popular Python machine learning API.\n<a href=\"https://keras.io\" target=\"T\">Keras</a>\nruns on\nseveral deep learning frameworks, including TensorFlow, where it is made\navailable as\n<a href=\"https://www.tensorflow.org/api_docs/python/tf/keras\" target=\"T\">tf.keras</a>.</p>",
         "<a href=\"https://keras.io\" target=\"T\">Keras</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Keras",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"keypoints",
      "definition_text":"The coordinates of particular features in an image. For example, for an image recognition model that distinguishes flower species, keypoints might be the center of each petal, the stem, the stamen, and so on.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"keypoints\"></a>",
         "<h2 class=\"hide-from-toc\"> keypoints</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>The coordinates of particular features in an image. For example, for an\n<a href=\"#image_recognition\"><strong>image recognition</strong></a> model that distinguishes\nflower species, keypoints might be the center of each petal, the stem,\nthe stamen, and so on.</p>",
         "<a href=\"#image_recognition\"><strong>image recognition</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#keypoints",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"KSVMs",
      "definition_text":"A classification algorithm that seeks to maximize the margin between positive and negative classes by mapping input data vectors to a higher dimensional space.  For example, consider a classification problem in which the input dataset has a hundred features. To maximize the margin between positive and negative classes, a KSVM could internally map those features into a million-dimension space.  KSVMs uses a loss function called hinge loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"KSVMs\"></a>",
         "<h2 class=\"hide-from-toc\">Kernel Support Vector Machines (KSVMs)</h2>",
         "<p>A classification algorithm that seeks to maximize the margin between\n<a href=\"#positive_class\"><strong>positive</strong></a> and\n<a href=\"#negative_class\"><strong>negative classes</strong></a> by mapping input data vectors\nto a higher dimensional space.  For example, consider a classification\nproblem in which the input dataset\nhas a hundred features. To maximize the margin between\npositive and negative classes, a KSVM could internally map those features into\na million-dimension space.  KSVMs uses a loss function called\n<a href=\"#hinge-loss\"><strong>hinge loss</strong></a>.</p>",
         "<a href=\"#positive_class\"><strong>positive</strong></a>",
         "<strong>positive</strong>",
         "<a href=\"#negative_class\"><strong>negative classes</strong></a>",
         "<strong>negative classes</strong>",
         "<a href=\"#hinge-loss\"><strong>hinge loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#KSVMs",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"k-means",
      "definition_text":"A popular clustering algorithm that groups examples in unsupervised learning. The k-means algorithm basically does the following:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"k-means\"></a>",
         "<h2 class=\"hide-from-toc\"> k-means</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>A popular <a href=\"#clustering\"><strong>clustering</strong></a> algorithm that groups examples\nin unsupervised learning. The k-means algorithm basically does the following:</p>",
         "<a href=\"#clustering\"><strong>clustering</strong></a>",
         "<strong>clustering</strong>",
         "<ul>\n<li>Iteratively determines the best k center points (known\nas <a href=\"#centroid\"><strong>centroids</strong></a>).</li>\n<li>Assigns each example to the closest centroid.  Those examples nearest\nthe same centroid belong to the same group.</li>\n</ul>",
         "<li>Iteratively determines the best k center points (known\nas <a href=\"#centroid\"><strong>centroids</strong></a>).</li>",
         "<a href=\"#centroid\"><strong>centroids</strong></a>",
         "<strong>centroids</strong>",
         "<li>Assigns each example to the closest centroid.  Those examples nearest\nthe same centroid belong to the same group.</li>",
         "<p>The k-means algorithm picks centroid locations to minimize the cumulative\n<em>square</em> of the distances from each example to its closest centroid.</p>",
         "<em>square</em>",
         "<p>For example, consider the following plot of dog height to dog width:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/DogDimensions.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/DogDimensions.svg\"/>",
         "<p>If k=3, the k-means algorithm will determine three centroids.  Each example\nis assigned to its closest centroid, yielding three groups:</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/DogDimensionsKMeans.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/DogDimensionsKMeans.svg\"/>",
         "<p>Imagine that a manufacturer wants to determine the ideal sizes for small,\nmedium, and large sweaters for dogs. The three centroids identify the mean\nheight and mean width of each dog in that cluster. So, the manufacturer\nshould probably base sweater sizes on those three centroids.  Note that\nthe centroid of a cluster is typically <em>not</em> an example in the cluster.</p>",
         "<em>not</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#k-means",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"k-median",
      "definition_text":"If k=3, the k-means algorithm will determine three centroids.  Each example is assigned to its closest centroid, yielding three groups:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"k-median\"></a>",
         "<h2 class=\"hide-from-toc\"> k-median</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>A clustering algorithm closely related to <a href=\"#k-means\"><strong>k-means</strong></a>. The\npractical difference between the two is as follows:</p>",
         "<a href=\"#k-means\"><strong>k-means</strong></a>",
         "<strong>k-means</strong>",
         "<ul>\n<li>In k-means, centroids are determined by minimizing the sum of the\n<em>squares</em> of the distance between a centroid candidate and each of\nits examples.</li>\n<li>In k-median, centroids are determined by minimizing the sum of the\ndistance between a centroid candidate and each of its examples.</li>\n</ul>",
         "<li>In k-means, centroids are determined by minimizing the sum of the\n<em>squares</em> of the distance between a centroid candidate and each of\nits examples.</li>",
         "<em>squares</em>",
         "<li>In k-median, centroids are determined by minimizing the sum of the\ndistance between a centroid candidate and each of its examples.</li>",
         "<p>Note that the definitions of distance are also different:</p>",
         "<ul>\n<li>k-means relies on the\n<a href=\"https://wikipedia.org/wiki/Euclidean_distance\" target=\"T\">Euclidean distance</a> from\nthe centroid to an example.  (In two dimensions, the Euclidean\ndistance means using the Pythagorean theorem to calculate\nthe hypotenuse.)  For example, the k-means distance between (2,2)\nand (5,-2) would be:</li>\n</ul>",
         "<li>k-means relies on the\n<a href=\"https://wikipedia.org/wiki/Euclidean_distance\" target=\"T\">Euclidean distance</a> from\nthe centroid to an example.  (In two dimensions, the Euclidean\ndistance means using the Pythagorean theorem to calculate\nthe hypotenuse.)  For example, the k-means distance between (2,2)\nand (5,-2) would be:</li>",
         "<a href=\"https://wikipedia.org/wiki/Euclidean_distance\" target=\"T\">Euclidean distance</a>",
         "<div>\n$$\n{\\text{Euclidean distance}} = {\\sqrt {(2-5)^2 + (2--2)^2}} = 5\n$$\n</div>",
         "<ul>\n<li>k-median relies on the <a href=\"https://wikipedia.org/wiki/Taxicab_geometry\" target=\"T\"> Manhattan distance</a>\nfrom the centroid to an example.  This distance is the sum of the\nabsolute deltas in each dimension.  For example, the k-median\ndistance between (2,2) and (5,-2) would be:</li>\n</ul>",
         "<li>k-median relies on the <a href=\"https://wikipedia.org/wiki/Taxicab_geometry\" target=\"T\"> Manhattan distance</a>\nfrom the centroid to an example.  This distance is the sum of the\nabsolute deltas in each dimension.  For example, the k-median\ndistance between (2,2) and (5,-2) would be:</li>",
         "<a href=\"https://wikipedia.org/wiki/Taxicab_geometry\" target=\"T\"> Manhattan distance</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#k-median",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"L1 loss",
      "definition_text":"A clustering algorithm closely related to k-means. The practical difference between the two is as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"L1_loss\"></a>",
         "<h2 class=\"hide-from-toc\"> L<sub>1</sub> loss</h2>",
         "<sub>1</sub>",
         "<p><a href=\"#loss\"><strong>Loss</strong></a> function based on the absolute value of the difference\nbetween the values that a model is predicting and the actual values of\nthe <a href=\"#label\"><strong>labels</strong></a>. L<sub>1</sub> loss is less sensitive to outliers\nthan <a href=\"#squared_loss\"><strong>L<sub>2</sub> loss</strong></a>.</p>",
         "<a href=\"#loss\"><strong>Loss</strong></a>",
         "<strong>Loss</strong>",
         "<a href=\"#label\"><strong>labels</strong></a>",
         "<strong>labels</strong>",
         "<sub>1</sub>",
         "<a href=\"#squared_loss\"><strong>L<sub>2</sub> loss</strong></a>",
         "<strong>L<sub>2</sub> loss</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#L1_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"L1 regularization",
      "definition_text":"Loss function based on the absolute value of the difference between the values that a model is predicting and the actual values of the labels. L1 loss is less sensitive to outliers than L2 loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"L1_regularization\"></a>",
         "<h2 class=\"hide-from-toc\"> L<sub>1</sub> regularization</h2>",
         "<sub>1</sub>",
         "<p>A type of <a href=\"#regularization\"><strong>regularization</strong></a> that penalizes weights\nin proportion to the sum of the absolute values of the weights. In models\nrelying on <a href=\"#sparse_features\"><strong>sparse features</strong></a>, L<sub>1</sub>\nregularization helps drive the weights of irrelevant or barely relevant\nfeatures to exactly 0, which removes those features from the model.\nContrast with <a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>.</p>",
         "<a href=\"#regularization\"><strong>regularization</strong></a>",
         "<strong>regularization</strong>",
         "<a href=\"#sparse_features\"><strong>sparse features</strong></a>",
         "<strong>sparse features</strong>",
         "<sub>1</sub>",
         "<a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>",
         "<strong>L<sub>2</sub> regularization</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#L1_regularization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"L2 loss",
      "definition_text":"A type of regularization that penalizes weights in proportion to the sum of the absolute values of the weights. In models relying on sparse features, L1 regularization helps drive the weights of irrelevant or barely relevant features to exactly 0, which removes those features from the model. Contrast with L2 regularization.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"L2_loss\"></a>",
         "<h2 class=\"hide-from-toc\"> L<sub>2</sub> loss</h2>",
         "<sub>2</sub>",
         "<p>See <a href=\"#squared_loss\"><strong>squared loss</strong></a>.</p>",
         "<a href=\"#squared_loss\"><strong>squared loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#L2_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"L2 regularization",
      "definition_text":"See squared loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"L2_regularization\"></a>",
         "<h2 class=\"hide-from-toc\"> L<sub>2</sub> regularization</h2>",
         "<sub>2</sub>",
         "<p>A type of <a href=\"#regularization\"><strong>regularization</strong></a> that penalizes weights\nin proportion to the sum of the <em>squares</em> of the weights.\nL<sub>2</sub> regularization helps drive outlier weights (those with\nhigh positive or low negative values) closer to 0 but not quite to 0.\n(Contrast with <a href=\"#L1_regularization\"><strong>L1 regularization</strong></a>.)\nL<sub>2</sub> regularization always improves generalization in linear models.</p>",
         "<a href=\"#regularization\"><strong>regularization</strong></a>",
         "<strong>regularization</strong>",
         "<em>squares</em>",
         "<sub>2</sub>",
         "<a href=\"#L1_regularization\"><strong>L1 regularization</strong></a>",
         "<strong>L1 regularization</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#L2_regularization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"label",
      "definition_text":"In supervised learning, the \"answer\" or \"result\" portion of an example. Each example in a labeled dataset consists of one or more features and a label. For instance, in a housing dataset, the features might include the number of bedrooms, the number of bathrooms, and the age of the house, while the label might be the house's price. In a spam detection dataset, the features might include the subject line, the sender, and the email message itself, while the label would probably be either \"spam\" or \"not spam.\"",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"label\"></a>",
         "<h2 class=\"hide-from-toc\"> label</h2>",
         "<p>In supervised learning, the \"answer\" or \"result\" portion of an\n<a href=\"#example\"><strong>example</strong></a>. Each example in a labeled dataset consists of one or\nmore features and a label. For instance, in a housing dataset, the features\nmight include the number of bedrooms, the number of bathrooms, and the age\nof the house, while the label might be the house's price.\nIn a spam detection dataset, the features might include the subject line, the\nsender, and the email message itself, while the label would probably be either\n\"spam\" or \"not spam.\"</p>",
         "<a href=\"#example\"><strong>example</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#label",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"labeled example",
      "definition_text":"An example that contains features and a label. In supervised training, models learn from labeled examples.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"labeled_example\"></a>",
         "<h2 class=\"hide-from-toc\"> labeled example</h2>",
         "<p>An example that contains <a href=\"#feature\"><strong>features</strong></a> and a\n<a href=\"#label\"><strong>label</strong></a>. In supervised training, models learn from labeled\nexamples.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>",
         "<strong>features</strong>",
         "<a href=\"#label\"><strong>label</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#labeled_example",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"lambda",
      "definition_text":"Synonym for regularization rate.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"lambda\"></a>",
         "<h2 class=\"hide-from-toc\"> lambda</h2>",
         "<p>Synonym for <a href=\"#regularization_rate\"><strong>regularization rate</strong></a>.</p>",
         "<a href=\"#regularization_rate\"><strong>regularization rate</strong></a>",
         "<strong>regularization rate</strong>",
         "<p>(This is an overloaded term. Here we're focusing on the term's\ndefinition within <a href=\"#regularization\"><strong>regularization</strong></a>.)</p>",
         "<a href=\"#regularization\"><strong>regularization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#lambda",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"landmarks",
      "definition_text":"Synonym for keypoints.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"landmarks\"></a>",
         "<h2 class=\"hide-from-toc\"> landmarks</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>Synonym for <a href=\"#keypoints\"><strong>keypoints</strong></a>.</p>",
         "<a href=\"#keypoints\"><strong>keypoints</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#landmarks",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"layer",
      "definition_text":"A set of neurons in a neural network that process a set of input features, or the output of those neurons.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"layer\"></a>",
         "<h2 class=\"hide-from-toc\"> layer</h2>",
         "<p>A set of <a href=\"#neuron\"><strong>neurons</strong></a> in a\n<a href=\"#neural_network\"><strong>neural network</strong></a> that process a set of input\nfeatures, or the output of those neurons.</p>",
         "<a href=\"#neuron\"><strong>neurons</strong></a>",
         "<strong>neurons</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<p>Also, an abstraction in TensorFlow. Layers are Python\nfunctions that take <a href=\"#tensor\"><strong>Tensors</strong></a> and configuration options\nas input and produce other tensors as output. Once the necessary Tensors\nhave been composed, the user can convert the result into an\n<a href=\"#Estimators\"><strong>Estimator</strong></a> via a <a href=\"#model_function\"><strong>model function</strong></a>.</p>",
         "<a href=\"#tensor\"><strong>Tensors</strong></a>",
         "<strong>Tensors</strong>",
         "<a href=\"#Estimators\"><strong>Estimator</strong></a>",
         "<strong>Estimator</strong>",
         "<a href=\"#model_function\"><strong>model function</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"layers API",
      "definition_text":"A TensorFlow API for constructing a deep neural network as a composition of layers. The Layers API enables you to build different types of layers, such as:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"layers_API\"></a>",
         "<h2 class=\"hide-from-toc\"> Layers API (tf.layers)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A TensorFlow API for constructing a <a href=\"#deep_model\"><strong>deep</strong></a> neural network\nas a composition of layers. The Layers API enables you to build different\ntypes of <a href=\"#layer\"><strong>layers</strong></a>, such as:</p>",
         "<a href=\"#deep_model\"><strong>deep</strong></a>",
         "<strong>deep</strong>",
         "<a href=\"#layer\"><strong>layers</strong></a>",
         "<strong>layers</strong>",
         "<ul>\n<li><code dir=\"ltr\" translate=\"no\">tf.layers.Dense</code> for a <a href=\"#fully_connected_layer\"><strong>fully-connected layer</strong></a>.</li>\n<li><code dir=\"ltr\" translate=\"no\">tf.layers.Conv2D</code> for a convolutional layer.</li>\n</ul>",
         "<li><code dir=\"ltr\" translate=\"no\">tf.layers.Dense</code> for a <a href=\"#fully_connected_layer\"><strong>fully-connected layer</strong></a>.</li>",
         "<code dir=\"ltr\" translate=\"no\">tf.layers.Dense</code>",
         "<a href=\"#fully_connected_layer\"><strong>fully-connected layer</strong></a>",
         "<strong>fully-connected layer</strong>",
         "<li><code dir=\"ltr\" translate=\"no\">tf.layers.Conv2D</code> for a convolutional layer.</li>",
         "<code dir=\"ltr\" translate=\"no\">tf.layers.Conv2D</code>",
         "<p>When writing a <a href=\"#custom_estimator\"><strong>custom Estimator</strong></a>, you compose Layers\nobjects to define the characteristics of all the\n<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>.</p>",
         "<a href=\"#custom_estimator\"><strong>custom Estimator</strong></a>",
         "<strong>custom Estimator</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>",
         "<strong>hidden layers</strong>",
         "<p>The Layers API follows the <a href=\"#Keras\"><strong>Keras</strong></a> layers API conventions.\nThat is, aside from a different prefix, all functions in the Layers API\nhave the same names and signatures as their counterparts in the Keras\nlayers API.</p>",
         "<a href=\"#Keras\"><strong>Keras</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#layers_API",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"learning rate",
      "definition_text":"A scalar used to train a model via gradient descent. During each iteration, the gradient descent algorithm multiplies the learning rate by the gradient.  The resulting product is called the gradient step.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"learning_rate\"></a>",
         "<h2 class=\"hide-from-toc\"> learning rate</h2>",
         "<p>A scalar used to train a model via gradient descent. During each iteration,\nthe <a href=\"#gradient_descent\"><strong>gradient descent</strong></a> algorithm multiplies the\nlearning rate by the gradient.  The resulting product is called the\n<strong>gradient step</strong>.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<strong>gradient step</strong>",
         "<p>Learning rate is a key <a href=\"#hyperparameter\"><strong>hyperparameter</strong></a>.</p>",
         "<a href=\"#hyperparameter\"><strong>hyperparameter</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#learning_rate",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"least squares regression",
      "definition_text":"A linear regression model trained by minimizing L2 Loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"least_squares_regression\"></a>",
         "<h2 class=\"hide-from-toc\"> least squares regression</h2>",
         "<p>A linear regression model trained by minimizing\n<a href=\"#L2_loss\"><strong>L<sub>2</sub> Loss</strong></a>.</p>",
         "<a href=\"#L2_loss\"><strong>L<sub>2</sub> Loss</strong></a>",
         "<strong>L<sub>2</sub> Loss</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#least_squares_regression",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"linear model",
      "definition_text":"A model that assigns one weight per feature to make predictions. (Linear models also incorporate a bias.) By contrast, the relationship of weights to features in  deep models is not one-to-one.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"linear_model\"></a>",
         "<h2 class=\"hide-from-toc\"> linear model</h2>",
         "<p>A <a href=\"#model\"><strong>model</strong></a> that assigns one <a href=\"#weight\"><strong>weight</strong></a> per\n<a href=\"#feature\"><strong>feature</strong></a> to make <a href=\"#prediction\"><strong>predictions</strong></a>.\n(Linear models also incorporate a <a href=\"#bias\"><strong>bias</strong></a>.) By contrast,\nthe relationship of weights to features in  <a href=\"#deep_model\"><strong>deep models</strong></a>\nis not one-to-one.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<a href=\"#weight\"><strong>weight</strong></a>",
         "<strong>weight</strong>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#bias\"><strong>bias</strong></a>",
         "<strong>bias</strong>",
         "<a href=\"#deep_model\"><strong>deep models</strong></a>",
         "<strong>deep models</strong>",
         "<p>A linear model uses the following formula:</p>",
         "<div>\n$$y' = b + w_1x_1 + w_2x_2 + \u2026 w_nx_n$$\n</div>",
         "<p>where:\n<ul>\n<li>\\(y'\\) is the raw prediction. (In certain kinds of linear models, this\nraw prediction will be further modified.  For example, see\n<a href=\"#logistic_regression\">logistic regression</a>.)</li>\n<li>\\(b\\) is the <a href=\"#bias\"><strong>bias</strong></a>.</li>\n<li>\\(w\\) is a <a href=\"#weight\"><strong>weight</strong></a>, so \\(w_1\\) is the weight of\nthe first feature, \\(w_2\\) is the weight of the second feature,\nand so on.</li>\n<li>\\(x\\) is a <a href=\"#feature\"><strong>feature</strong></a>, so \\(x_1\\) is the value of the\nfirst feature, \\(x_2\\) is the value of the second feature, and so on.</li>\n</ul></p>",
         "<ul>\n<li>\\(y'\\) is the raw prediction. (In certain kinds of linear models, this\nraw prediction will be further modified.  For example, see\n<a href=\"#logistic_regression\">logistic regression</a>.)</li>\n<li>\\(b\\) is the <a href=\"#bias\"><strong>bias</strong></a>.</li>\n<li>\\(w\\) is a <a href=\"#weight\"><strong>weight</strong></a>, so \\(w_1\\) is the weight of\nthe first feature, \\(w_2\\) is the weight of the second feature,\nand so on.</li>\n<li>\\(x\\) is a <a href=\"#feature\"><strong>feature</strong></a>, so \\(x_1\\) is the value of the\nfirst feature, \\(x_2\\) is the value of the second feature, and so on.</li>\n</ul>",
         "<li>\\(y'\\) is the raw prediction. (In certain kinds of linear models, this\nraw prediction will be further modified.  For example, see\n<a href=\"#logistic_regression\">logistic regression</a>.)</li>",
         "<a href=\"#logistic_regression\">logistic regression</a>",
         "<li>\\(b\\) is the <a href=\"#bias\"><strong>bias</strong></a>.</li>",
         "<a href=\"#bias\"><strong>bias</strong></a>",
         "<strong>bias</strong>",
         "<li>\\(w\\) is a <a href=\"#weight\"><strong>weight</strong></a>, so \\(w_1\\) is the weight of\nthe first feature, \\(w_2\\) is the weight of the second feature,\nand so on.</li>",
         "<a href=\"#weight\"><strong>weight</strong></a>",
         "<strong>weight</strong>",
         "<li>\\(x\\) is a <a href=\"#feature\"><strong>feature</strong></a>, so \\(x_1\\) is the value of the\nfirst feature, \\(x_2\\) is the value of the second feature, and so on.</li>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<p>For example, suppose a linear model for three features learns the following\nbias and weights:\n<ul>\n<li>\\(b\\) = 7</li>\n<li>\\(w_1\\) = -2.5</li>\n<li>\\(w_2\\) = -1.2</li>\n<li>\\(w_3\\) = 1.4</li>\n</ul></p>",
         "<ul>\n<li>\\(b\\) = 7</li>\n<li>\\(w_1\\) = -2.5</li>\n<li>\\(w_2\\) = -1.2</li>\n<li>\\(w_3\\) = 1.4</li>\n</ul>",
         "<li>\\(b\\) = 7</li>",
         "<li>\\(w_1\\) = -2.5</li>",
         "<li>\\(w_2\\) = -1.2</li>",
         "<li>\\(w_3\\) = 1.4</li>",
         "<p>Therefore, given three features (\\(x_1\\), \\(x_2\\), and \\(x_3\\)),\nthe linear model uses the following equation to generate each prediction:</p>",
         "<div>\n$$y' = 7 + (-2.5)(x_1) + (-1.2)(x_2) + (1.4)(x_3)$$\n</div>",
         "<p>Suppose a particular example contains the following values:\n<ul>\n<li>\\(x_1\\) = 4</li>\n<li>\\(x_2\\) = -10</li>\n<li>\\(x_3\\) = 5</li>\n</ul></p>",
         "<ul>\n<li>\\(x_1\\) = 4</li>\n<li>\\(x_2\\) = -10</li>\n<li>\\(x_3\\) = 5</li>\n</ul>",
         "<li>\\(x_1\\) = 4</li>",
         "<li>\\(x_2\\) = -10</li>",
         "<li>\\(x_3\\) = 5</li>",
         "<p>Plugging those values into the formula yields a prediction for this example:</p>",
         "<div>\n$$y' = 7 + (-2.5)(4) + (-1.2)(-10) + (1.4)(5)$$\n$$y' = 16$$\n</div>",
         "<p>Linear models tend to be easier to analyze and train than deep models. However,\ndeep models can model complex relationships <em>between</em> features.</p>",
         "<em>between</em>",
         "<p><a href=\"#linear_regression\"><strong>Linear regression</strong></a> and\n<a href=\"#logistic_regression\"><strong>logistic regression</strong></a> are two types of linear models.\nLinear models include not only models that use the linear equation but also a\nbroader set of models that use the linear equation as part of the formula.\nFor example, logistic regression post-processes the raw\nprediction (\\(y'\\)) to calculate the prediction.</p>",
         "<a href=\"#linear_regression\"><strong>Linear regression</strong></a>",
         "<strong>Linear regression</strong>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#linear_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"linear regression",
      "definition_text":"Using the raw output (y\u2032) of a linear model as the actual prediction in a regression model. The goal of a regression problem is to make a real-valued prediction. For example, if the raw output (y\u2032) of a linear model is 8.37, then the prediction is 8.37.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"linear_regression\"></a>",
         "<h2 class=\"hide-from-toc\"> linear regression</h2>",
         "<p>Using the raw output (\\(y'\\)) of a <a href=\"#linear_model\"><strong>linear model</strong></a> as the\nactual prediction in a <a href=\"#regression_model\"><strong>regression model</strong></a>. The goal of\na regression problem is to make a real-valued prediction. For example, if\nthe raw output (\\(y'\\)) of a linear model is 8.37, then the prediction is\n8.37.</p>",
         "<a href=\"#linear_model\"><strong>linear model</strong></a>",
         "<strong>linear model</strong>",
         "<a href=\"#regression_model\"><strong>regression model</strong></a>",
         "<strong>regression model</strong>",
         "<p>Contrast linear regression with <a href=\"#logistic_regression\"><strong>logistic regression</strong></a>.\nAlso, contrast regression with <a href=\"#classification_model\"><strong>classification</strong></a>.</p>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>",
         "<strong>logistic regression</strong>",
         "<a href=\"#classification_model\"><strong>classification</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#linear_regression",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"logistic regression",
      "definition_text":"A classification model that uses a sigmoid function to convert a linear model's raw prediction (y\u2032) into a value between 0 and 1. You can interpret the value between 0 and 1 in either of the following two ways:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"logistic_regression\"></a>",
         "<h2 class=\"hide-from-toc\"> logistic regression</h2>",
         "<p>A <a href=\"#classification_model\"><strong>classification model</strong></a> that uses a\n<a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a> to convert\na <a href=\"#linear_model\"><strong>linear model's</strong></a> raw prediction (\\(y'\\)) into a\nvalue between 0 and 1. You can interpret the value between 0 and 1 in either\nof the following two ways:</p>",
         "<a href=\"#classification_model\"><strong>classification model</strong></a>",
         "<strong>classification model</strong>",
         "<a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a>",
         "<strong>sigmoid function</strong>",
         "<a href=\"#linear_model\"><strong>linear model's</strong></a>",
         "<strong>linear model's</strong>",
         "<ul>\n<li>As a probability that the example belongs to the\n<a href=\"#positive_class\"><strong>positive class</strong></a> in a binary classification problem.</li>\n<li>As a value to be compared against a\n<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>. If the value is\nequal to or above the classification threshold, the system classifies the\nexample as the positive class. Conversely, if the value is below the given\nthreshold, the system classifies the example as the\n<a href=\"#negative_class\"><strong>negative class</strong></a>.  For example, suppose the\nclassification threshold is 0.82:\n<ul>\n<li>Imagine an example that produces a raw prediction (\\(y'\\)) of 2.6.\n The sigmoid of 2.6 is 0.93. Since 0.93 is greater than 0.82, the\n system classifies this example as the positive class.</li>\n<li>Imagine a different example that produces a raw prediction of 1.3. The\n sigmoid of 1.3 is 0.79. Since 0.79 is less than 0.82, the system\n classifies that example as the negative class.</li>\n</ul></li>\n</ul>",
         "<li>As a probability that the example belongs to the\n<a href=\"#positive_class\"><strong>positive class</strong></a> in a binary classification problem.</li>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>",
         "<strong>positive class</strong>",
         "<li>As a value to be compared against a\n<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>. If the value is\nequal to or above the classification threshold, the system classifies the\nexample as the positive class. Conversely, if the value is below the given\nthreshold, the system classifies the example as the\n<a href=\"#negative_class\"><strong>negative class</strong></a>.  For example, suppose the\nclassification threshold is 0.82:\n<ul>\n<li>Imagine an example that produces a raw prediction (\\(y'\\)) of 2.6.\n The sigmoid of 2.6 is 0.93. Since 0.93 is greater than 0.82, the\n system classifies this example as the positive class.</li>\n<li>Imagine a different example that produces a raw prediction of 1.3. The\n sigmoid of 1.3 is 0.79. Since 0.79 is less than 0.82, the system\n classifies that example as the negative class.</li>\n</ul></li>",
         "<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>",
         "<strong>classification threshold</strong>",
         "<a href=\"#negative_class\"><strong>negative class</strong></a>",
         "<strong>negative class</strong>",
         "<ul>\n<li>Imagine an example that produces a raw prediction (\\(y'\\)) of 2.6.\n The sigmoid of 2.6 is 0.93. Since 0.93 is greater than 0.82, the\n system classifies this example as the positive class.</li>\n<li>Imagine a different example that produces a raw prediction of 1.3. The\n sigmoid of 1.3 is 0.79. Since 0.79 is less than 0.82, the system\n classifies that example as the negative class.</li>\n</ul>",
         "<li>Imagine an example that produces a raw prediction (\\(y'\\)) of 2.6.\n The sigmoid of 2.6 is 0.93. Since 0.93 is greater than 0.82, the\n system classifies this example as the positive class.</li>",
         "<li>Imagine a different example that produces a raw prediction of 1.3. The\n sigmoid of 1.3 is 0.79. Since 0.79 is less than 0.82, the system\n classifies that example as the negative class.</li>",
         "<p>Although logistic regression is often used in\n<a href=\"#binary_classification\"><strong>binary classification</strong></a> problems, logistic\nregression can also be used in\n<a href=\"#multi-class\"><strong>multi-class classification</strong></a> problems\n(where it becomes called <strong>multi-class logistic regression</strong> or\n<strong>multinomial regression</strong>).</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>",
         "<strong>multi-class classification</strong>",
         "<strong>multi-class logistic regression</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#logistic_regression",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"logits",
      "definition_text":"The vector of raw (non-normalized) predictions that a classification model generates, which is ordinarily then passed to a normalization function. If the model is solving a multi-class classification problem, logits typically become an input to the softmax function. The softmax function then generates a vector of (normalized) probabilities with one value for each possible class.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"logits\"></a>",
         "<h2 class=\"hide-from-toc\"> logits</h2>",
         "<p>The vector of raw (non-normalized) predictions that a classification\nmodel generates, which is ordinarily then passed to a normalization function.\nIf the model is solving a <a href=\"#multi-class\"><strong>multi-class classification</strong></a>\nproblem, logits typically become an input to the\n<a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2\" target=\"T\">softmax function</a>.\nThe softmax function then generates a vector of (normalized)\nprobabilities with one value for each possible class.</p>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>",
         "<strong>multi-class classification</strong>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/softmax_cross_entropy_with_logits_v2\" target=\"T\">softmax function</a>",
         "<p>In addition, logits sometimes refer to the element-wise inverse of the\n<a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a>. For more information, see\n<a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits\" target=\"T\">tf.nn.sigmoid_cross_entropy_with_logits</a>.</p>",
         "<a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a>",
         "<strong>sigmoid function</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#logits",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Log Loss",
      "definition_text":"The loss function used in binary logistic regression.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Log_Loss\"></a>",
         "<h2 class=\"hide-from-toc\"> Log Loss</h2>",
         "<p>The <a href=\"#loss\"><strong>loss</strong></a> function used in binary\n<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>.</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Log_Loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"log-odds",
      "definition_text":"The logarithm of the odds of some event.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"log-odds\"></a>",
         "<h2 class=\"hide-from-toc\"> log-odds</h2>",
         "<p>The logarithm of the odds of some event.</p>",
         "<p>If the event refers to a binary probability, then <strong>odds</strong> refers to\nthe ratio of the probability of success (p) to the probability of\nfailure (1-p).  For example, suppose that a given event has a 90%\nprobability of success and a 10% probability of failure. In this case,\nodds is calculated as follows:</p>",
         "<strong>odds</strong>",
         "<div>\n$$\n{\\text{odds}} =\n\\frac{\\text{p}} {\\text{(1-p)}} =\n\\frac{.9} {.1} =\n{\\text{9}}\n$$\n</div>",
         "<p>The log-odds is simply the logarithm of the odds. By convention,\n\"logarithm\" refers to natural logarithm, but logarithm could actually\nbe any base greater than 1.  Sticking to convention, the log-odds of\nour example is therefore:</p>",
         "<div>\n$$\n{\\text{log-odds}} =\nln(9) ~= 2.2\n$$\n</div>",
         "<p>The log-odds are the inverse of the <a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a>.</p>",
         "<a href=\"#sigmoid_function\"><strong>sigmoid function</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#log-odds",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Long Short-Term Memory",
      "definition_text":"A type of cell in a recurrent neural network used to process sequences of data in applications such as handwriting recognition, machine translation, and image captioning. LSTMs address the vanishing gradient problem that occurs when training RNNs due to long data sequences by maintaining history in an internal memory state based on new input and context from previous cells in the RNN.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Long_Short-Term_Memory\"></a>",
         "<h2 class=\"hide-from-toc\"> Long Short-Term Memory (LSTM)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>A type of cell in a\n<a href=\"#recurrent_neural_network\"><strong>recurrent neural network</strong></a> used to process\nsequences of data in applications such as handwriting recognition, machine\ntranslation, and image captioning. LSTMs address the\n<a href=\"#vanishing_gradient_problem\"><strong>vanishing gradient problem</strong></a> that occurs when\ntraining RNNs due to long data sequences by maintaining history in an\ninternal memory state based on new input and context from previous cells\nin the RNN.</p>",
         "<a href=\"#recurrent_neural_network\"><strong>recurrent neural network</strong></a>",
         "<strong>recurrent neural network</strong>",
         "<a href=\"#vanishing_gradient_problem\"><strong>vanishing gradient problem</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Long_Short-Term_Memory",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"loss",
      "definition_text":"A measure of how far a model's predictions are from its label. Or, to phrase it more pessimistically, a measure of how bad the model is. To determine this value, a model must define a loss function. For example, linear regression models typically use mean squared error for a loss function, while logistic regression models use Log Loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"loss\"></a>",
         "<h2 class=\"hide-from-toc\"> loss</h2>",
         "<p>A measure of how far a model's <a href=\"#prediction\"><strong>predictions</strong></a> are from its\n<a href=\"#label\"><strong>label</strong></a>. Or, to phrase it more pessimistically, a measure of\nhow bad the model is. To determine this value, a model must define a loss\nfunction. For example, linear regression models typically use\n<a href=\"#MSE\"><strong>mean squared error</strong></a> for a loss function,\nwhile logistic regression models use <a href=\"#Log_Loss\"><strong>Log Loss</strong></a>.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#MSE\"><strong>mean squared error</strong></a>",
         "<strong>mean squared error</strong>",
         "<a href=\"#Log_Loss\"><strong>Log Loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"loss curve",
      "definition_text":"A graph of loss as a function of training iterations. For example:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"loss_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> loss curve</h2>",
         "<p>A graph of <a href=\"#loss\"><strong>loss</strong></a> as a function of training\n<a href=\"#iteration\"><strong>iterations</strong></a>. For example:</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#iteration\"><strong>iterations</strong></a>",
         "<strong>iterations</strong>",
         "<p>\n<img alt=\"A\ngraph of loss versus training iterations, showing a steady drop as iterations\nincrease, but then a slight rise in loss at a high number of iterations.\" height=\"300\" src=\"/machine-learning/glossary/images/LossCurve.svg\"/>\n</p>",
         "<img alt=\"A\ngraph of loss versus training iterations, showing a steady drop as iterations\nincrease, but then a slight rise in loss at a high number of iterations.\" height=\"300\" src=\"/machine-learning/glossary/images/LossCurve.svg\"/>",
         "<p>The loss curve can help you determine when your model is\n<a href=\"#convergence\"><strong>converging</strong></a>, <a href=\"#overfitting\"><strong>overfitting</strong></a>,\nor <a href=\"#underfitting\"><strong>underfitting</strong></a>.</p>",
         "<a href=\"#convergence\"><strong>converging</strong></a>",
         "<strong>converging</strong>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>",
         "<strong>overfitting</strong>",
         "<a href=\"#underfitting\"><strong>underfitting</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#loss_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"loss surface",
      "definition_text":"A graph of weight(s) vs. loss. Gradient descent aims to find the weight(s) for which the loss surface is at a local minimum.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"loss_surface\"></a>",
         "<h2 class=\"hide-from-toc\"> loss surface</h2>",
         "<p>A graph of weight(s) vs. loss. <a href=\"#gradient_descent\"><strong>Gradient descent</strong></a> aims\nto find the weight(s) for which the loss surface is at a local minimum.</p>",
         "<a href=\"#gradient_descent\"><strong>Gradient descent</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#loss_surface",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"LSTM",
      "definition_text":"Abbreviation for Long Short-Term Memory.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"LSTM\"></a>",
         "<h2 class=\"hide-from-toc\"> LSTM</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>Abbreviation for <a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a>.</p>",
         "<a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#LSTM",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"machine learning",
      "definition_text":"A program or system that builds (trains) a predictive model from input data. The system uses the learned model to make useful predictions from new (never-before-seen) data drawn from the same distribution as the one used to train the model. Machine learning also refers to the field of study concerned with these programs or systems.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"machine_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> machine learning</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#machine_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"majority class",
      "definition_text":"The more common label in a class-imbalanced dataset. For example, given a dataset containing 99% non-spam labels and 1% spam labels, the non-spam labels are the majority class.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"majority_class\"></a>",
         "<h2 class=\"hide-from-toc\"> majority class</h2>",
         "<p>The more common label in a\n<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>. For example,\ngiven a dataset containing 99% non-spam labels and 1% spam labels, the\nnon-spam labels are the majority class.</p>",
         "<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#majority_class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"markov decision process",
      "definition_text":"A graph representing the decision-making model where decisions (or actions) are taken to navigate a sequence of states under the assumption that the Markov property holds. In reinforcement learning, these transitions between states return a numerical reward.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"markov_decision_process\"></a>",
         "<h2 class=\"hide-from-toc\"> Markov decision process (MDP)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>A graph representing the decision-making model where decisions\n(or <a href=\"#action\"><strong>actions</strong></a>) are taken to navigate a sequence of\n<a href=\"#state\"><strong>states</strong></a> under the assumption that the\n<a href=\"#Markov_property\"><strong>Markov property</strong></a> holds. In reinforcement learning,\nthese transitions between states return a numerical <a href=\"#reward\"><strong>reward</strong></a>.</p>",
         "<a href=\"#action\"><strong>actions</strong></a>",
         "<strong>actions</strong>",
         "<a href=\"#state\"><strong>states</strong></a>",
         "<strong>states</strong>",
         "<a href=\"#Markov_property\"><strong>Markov property</strong></a>",
         "<strong>Markov property</strong>",
         "<a href=\"#reward\"><strong>reward</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#markov_decision_process",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Markov property",
      "definition_text":"A property of certain environments, where state transitions are entirely determined by information implicit in the current state and the agent\u2019s action.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Markov_property\"></a>",
         "<h2 class=\"hide-from-toc\"> Markov property</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>A property of certain <a href=\"#environment\"><strong>environments</strong></a>, where state\ntransitions are entirely determined by information implicit in the\ncurrent <a href=\"#state\"><strong>state</strong></a> and the agent\u2019s <a href=\"#action\"><strong>action</strong></a>.</p>",
         "<a href=\"#environment\"><strong>environments</strong></a>",
         "<strong>environments</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#action\"><strong>action</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Markov_property",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"matplotlib",
      "definition_text":"An open-source Python 2D plotting library. matplotlib helps you visualize different aspects of machine learning.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"matplotlib\"></a>",
         "<h2 class=\"hide-from-toc\"> matplotlib</h2>",
         "<p>An open-source Python 2D plotting library.\n<a href=\"https://matplotlib.org/\" target=\"T\">matplotlib</a> helps you visualize\ndifferent aspects of machine learning.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#matplotlib",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"matrix factorization",
      "definition_text":"In math, a mechanism for finding the matrices whose dot product approximates a target matrix.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"matrix_factorization\"></a>",
         "<h2 class=\"hide-from-toc\"> matrix factorization</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>In math, a mechanism for finding the matrices whose dot product approximates a\ntarget matrix.</p>",
         "<p>In <a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>, the target matrix\noften holds users' ratings on <a href=\"#items\"><strong>items</strong></a>. For example, the target\nmatrix for a movie recommendation system might look something like the\nfollowing, where the positive integers are user ratings and 0\nmeans that the user didn't rate the movie:</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>",
         "<strong>recommendation systems</strong>",
         "<a href=\"#items\"><strong>items</strong></a>",
         "<strong>items</strong>",
         "<table>\n<tr>\n<th>\u00a0</th>\n<th>Casablanca</th>\n<th>The Philadelphia Story</th>\n<th>Black Panther</th>\n<th>Wonder Woman</th>\n<th>Pulp Fiction</th>\n</tr>\n<tr>\n<td>User 1</td>\n<td>5.0</td>\n<td>3.0</td>\n<td>0.0</td>\n<td>2.0</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>User 2</td>\n<td>4.0</td>\n<td>0.0</td>\n<td>0.0</td>\n<td>1.0</td>\n<td>5.0</td>\n</tr>\n<tr>\n<td>User 3</td>\n<td>3.0</td>\n<td>1.0</td>\n<td>4.0</td>\n<td>5.0</td>\n<td>0.0</td>\n</tr>\n</table>",
         "<tr>\n<th>\u00a0</th>\n<th>Casablanca</th>\n<th>The Philadelphia Story</th>\n<th>Black Panther</th>\n<th>Wonder Woman</th>\n<th>Pulp Fiction</th>\n</tr>",
         "<th>\u00a0</th>",
         "<th>Casablanca</th>",
         "<th>The Philadelphia Story</th>",
         "<th>Black Panther</th>",
         "<th>Wonder Woman</th>",
         "<th>Pulp Fiction</th>",
         "<tr>\n<td>User 1</td>\n<td>5.0</td>\n<td>3.0</td>\n<td>0.0</td>\n<td>2.0</td>\n<td>0.0</td>\n</tr>",
         "<td>User 1</td>",
         "<td>5.0</td>",
         "<td>3.0</td>",
         "<td>0.0</td>",
         "<td>2.0</td>",
         "<td>0.0</td>",
         "<tr>\n<td>User 2</td>\n<td>4.0</td>\n<td>0.0</td>\n<td>0.0</td>\n<td>1.0</td>\n<td>5.0</td>\n</tr>",
         "<td>User 2</td>",
         "<td>4.0</td>",
         "<td>0.0</td>",
         "<td>0.0</td>",
         "<td>1.0</td>",
         "<td>5.0</td>",
         "<tr>\n<td>User 3</td>\n<td>3.0</td>\n<td>1.0</td>\n<td>4.0</td>\n<td>5.0</td>\n<td>0.0</td>\n</tr>",
         "<td>User 3</td>",
         "<td>3.0</td>",
         "<td>1.0</td>",
         "<td>4.0</td>",
         "<td>5.0</td>",
         "<td>0.0</td>",
         "<p>The movie recommendation system aims to predict user ratings for\nunrated movies.  For example, will User 1 like <em>Black Panther</em>?</p>",
         "<em>Black Panther</em>",
         "<p>One approach for recommendation systems is to use matrix\nfactorization to generate the following two matrices:</p>",
         "<ul>\n<li>A <a href=\"#user_matrix\"><strong>user matrix</strong></a>, shaped as the number of users X the\nnumber of embedding dimensions.</li>\n<li>An <a href=\"#item_matrix\"><strong>item matrix</strong></a>, shaped as the number of embedding\ndimensions X the number of items.</li>\n</ul>",
         "<li>A <a href=\"#user_matrix\"><strong>user matrix</strong></a>, shaped as the number of users X the\nnumber of embedding dimensions.</li>",
         "<a href=\"#user_matrix\"><strong>user matrix</strong></a>",
         "<strong>user matrix</strong>",
         "<li>An <a href=\"#item_matrix\"><strong>item matrix</strong></a>, shaped as the number of embedding\ndimensions X the number of items.</li>",
         "<a href=\"#item_matrix\"><strong>item matrix</strong></a>",
         "<strong>item matrix</strong>",
         "<p>For example, using matrix factorization on our three users and five items\ncould yield the following user matrix and item matrix:</p>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\nUser Matrix                 Item Matrix\n\n1.1   2.3           0.9   0.2   1.4    2.0   1.2\n0.6   2.0           1.7   1.2   1.2   -0.1   2.1\n2.5   0.5\n</pre>",
         "<p>The dot product of the user matrix and item matrix yields a recommendation\nmatrix that contains not only the original user ratings but also predictions\nfor the movies that each user hasn't seen.\nFor example, consider User 1's rating of <em>Casablanca</em>, which was 5.0. The dot\nproduct corresponding to that cell in the recommendation matrix should\nhopefully be around 5.0, and it is:</p>",
         "<em>Casablanca</em>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\n(1.1 * 0.9) + (2.3 * 1.7) = 4.9\n</pre>",
         "<p>More importantly, will User 1 like <em>Black Panther</em>? Taking the dot product\ncorresponding to the first row and the third column yields a predicted\nrating of 4.3:</p>",
         "<em>Black Panther</em>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\n(1.1 * 1.4) + (2.3 * 1.2) = 4.3\n</pre>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#matrix_factorization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"MAE",
      "definition_text":"An error metric calculated by taking an average of absolute errors. In the context of evaluating a model\u2019s accuracy, MAE is the average absolute difference between the expected and predicted values across all training examples. Specifically, for n examples, for each value y and its prediction y^, MAE is defined as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"MAE\"></a>",
         "<h2 class=\"hide-from-toc\"> Mean Absolute Error (MAE)</h2>",
         "<p>An error metric calculated by taking an average of absolute errors.\nIn the context of evaluating a model\u2019s accuracy, MAE is the average\nabsolute difference between the expected and predicted values across\nall training examples. Specifically, for $n$ examples, for each value\n$y$ and its prediction $\\hat{y}$, MAE is defined as follows:</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#MAE",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"MSE",
      "definition_text":"The average squared loss per example. MSE is calculated by dividing the squared loss by the number of examples. The values that TensorFlow Playground displays for \"Training loss\" and \"Test loss\" are MSE.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"MSE\"></a>",
         "<h2 class=\"hide-from-toc\"> Mean Squared Error (MSE)</h2>",
         "<p>The average squared loss per example. MSE is calculated by dividing the\n<a href=\"#squared_loss\"><strong>squared loss</strong></a> by the number of\n<a href=\"#example\"><strong>examples</strong></a>. The values that\n<a href=\"#TensorFlow_Playground\"><strong>TensorFlow Playground</strong></a> displays for\n\"Training loss\" and \"Test loss\" are MSE.</p>",
         "<a href=\"#squared_loss\"><strong>squared loss</strong></a>",
         "<strong>squared loss</strong>",
         "<a href=\"#example\"><strong>examples</strong></a>",
         "<strong>examples</strong>",
         "<a href=\"#TensorFlow_Playground\"><strong>TensorFlow Playground</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#MSE",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"metric",
      "definition_text":"A number that you care about. May or may not be directly optimized in a machine-learning system. A metric that your system tries to optimize is called an objective.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"metric\"></a>",
         "<h2 class=\"hide-from-toc\"> metric</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A number that you care about. May or may not be directly optimized in a\nmachine-learning system. A metric that your system tries to optimize is\ncalled an <a href=\"#objective\"><strong>objective</strong></a>.</p>",
         "<a href=\"#objective\"><strong>objective</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#metric",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"metrics API",
      "definition_text":"A TensorFlow API for evaluating models. For example, tf.metrics.accuracy determines how often a model's predictions match labels. When writing a custom Estimator, you invoke Metrics API functions to specify how your model should be evaluated.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"metrics_API\"></a>",
         "<h2 class=\"hide-from-toc\"> Metrics API (tf.metrics)</h2>",
         "<p>A TensorFlow API for evaluating models. For example, <code dir=\"ltr\" translate=\"no\">tf.metrics.accuracy</code>\ndetermines how often a model's predictions match labels. When writing a\n<a href=\"#custom_estimator\"><strong>custom Estimator</strong></a>, you invoke Metrics API functions to\nspecify how your model should be evaluated.</p>",
         "<code dir=\"ltr\" translate=\"no\">tf.metrics.accuracy</code>",
         "<a href=\"#custom_estimator\"><strong>custom Estimator</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#metrics_API",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"mini-batch",
      "definition_text":"A small, randomly selected subset of the entire batch of examples run together in a single iteration of training or inference. The batch size of a mini-batch is usually between 10 and 1,000. It is much more efficient to calculate the loss on a mini-batch than on the full training data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"mini-batch\"></a>",
         "<h2 class=\"hide-from-toc\"> mini-batch</h2>",
         "<p>A small, randomly selected subset of the entire batch of\n<a href=\"#example\"><strong>examples</strong></a> run together in a single iteration of training\nor inference. The <a href=\"#batch_size\"><strong>batch size</strong></a> of a mini-batch is usually\nbetween 10 and 1,000. It is much more efficient to calculate the loss on a\nmini-batch than on the full training data.</p>",
         "<a href=\"#example\"><strong>examples</strong></a>",
         "<strong>examples</strong>",
         "<a href=\"#batch_size\"><strong>batch size</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#mini-batch",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"mini-batch SGD",
      "definition_text":"A gradient descent algorithm that uses mini-batches. In other words, mini-batch SGD estimates the gradient based on a small subset of the training data. Vanilla SGD uses a mini-batch of size 1.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"mini-batch_SGD\"></a>",
         "<h2 class=\"hide-from-toc\"> mini-batch stochastic gradient descent (SGD)</h2>",
         "<p>A <a href=\"#gradient_descent\"><strong>gradient descent</strong></a> algorithm that uses\n<a href=\"#mini-batch\"><strong>mini-batches</strong></a>. In other words, mini-batch SGD estimates the\ngradient based on a small subset of the training data. <a href=\"#SGD\"><strong>Vanilla SGD</strong></a>\nuses a mini-batch of size 1.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<a href=\"#mini-batch\"><strong>mini-batches</strong></a>",
         "<strong>mini-batches</strong>",
         "<a href=\"#SGD\"><strong>Vanilla SGD</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#mini-batch_SGD",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"minimax loss",
      "definition_text":"A loss function for generative adversarial networks, based on the cross-entropy between the distribution of generated data and real data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"minimax_loss\"></a>",
         "<h2 class=\"hide-from-toc\"> minimax loss</h2>",
         "<p>A loss function for\n<a href=\"#generative_adversarial_network\"><strong>generative adversarial networks</strong></a>,\nbased on the <a href=\"#cross-entropy\"><strong>cross-entropy</strong></a> between the distribution\nof generated data and real data.</p>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial networks</strong></a>",
         "<strong>generative adversarial networks</strong>",
         "<a href=\"#cross-entropy\"><strong>cross-entropy</strong></a>",
         "<strong>cross-entropy</strong>",
         "<p>Minimax loss is used in the\n<a href=\"https://arxiv.org/pdf/1406.2661.pdf\">first paper</a> to describe\ngenerative adversarial networks.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#minimax_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"minority class",
      "definition_text":"The less common label in a class-imbalanced dataset. For example, given a dataset containing 99% non-spam labels and 1% spam labels, the spam labels are the minority class.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"minority_class\"></a>",
         "<h2 class=\"hide-from-toc\"> minority class</h2>",
         "<p>The less common label in a\n<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>. For example,\ngiven a dataset containing 99% non-spam labels and 1% spam labels, the\nspam labels are the minority class.</p>",
         "<a href=\"#class_imbalanced_data_set\"><strong>class-imbalanced dataset</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#minority_class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ML",
      "definition_text":"Abbreviation for machine learning.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ML\"></a>",
         "<h2 class=\"hide-from-toc\"> ML</h2>",
         "<p>Abbreviation for <a href=\"#machine_learning\"><strong>machine learning</strong></a>.</p>",
         "<a href=\"#machine_learning\"><strong>machine learning</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ML",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"MNIST",
      "definition_text":"A public-domain dataset compiled by LeCun, Cortes, and Burges containing 60,000 images, each image showing how a human manually wrote a particular digit from 0\u20139.  Each image is stored as a 28x28 array of integers, where each integer is a grayscale value between 0 and 255, inclusive.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"MNIST\"></a>",
         "<h2 class=\"hide-from-toc\"> MNIST</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>A public-domain dataset compiled by LeCun, Cortes, and Burges containing\n60,000 images, each image showing how a human manually wrote a particular\ndigit from 0\u20139.  Each image is stored as a 28x28 array of integers, where\neach integer is a grayscale value between 0 and 255, inclusive.</p>",
         "<p>MNIST is a canonical dataset for machine learning, often used to test new\nmachine learning approaches. For details, see\n<a href=\"http://yann.lecun.com/exdb/mnist/\" target=\"T\">\nThe MNIST Database of Handwritten Digits</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#MNIST",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"model",
      "definition_text":"The representation of what a machine learning system has learned from the training data. Within TensorFlow, model is an overloaded term, which can have either of the following two related meanings:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"model\"></a>",
         "<h2 class=\"hide-from-toc\"> model</h2>",
         "<p>The representation of what a machine learning system has learned from\nthe training data. Within TensorFlow, model is an overloaded term, which\ncan have either of the following two related meanings:</p>",
         "<ul>\n<li>The <a href=\"#TensorFlow\"><strong>TensorFlow</strong></a> graph that expresses the structure of\nhow a prediction will be computed.</li>\n<li>The particular weights and biases of that TensorFlow graph, which are\ndetermined by <a href=\"#model_training\"><strong>training</strong></a>.</li>\n</ul>",
         "<li>The <a href=\"#TensorFlow\"><strong>TensorFlow</strong></a> graph that expresses the structure of\nhow a prediction will be computed.</li>",
         "<a href=\"#TensorFlow\"><strong>TensorFlow</strong></a>",
         "<strong>TensorFlow</strong>",
         "<li>The particular weights and biases of that TensorFlow graph, which are\ndetermined by <a href=\"#model_training\"><strong>training</strong></a>.</li>",
         "<a href=\"#model_training\"><strong>training</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"model capacity",
      "definition_text":"The complexity of problems that a model can learn. The more complex the problems that a model can learn, the higher the model\u2019s capacity. A model\u2019s capacity typically increases with the number of model parameters. For a formal definition of classifier capacity, see VC dimension.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"model_capacity\"></a>",
         "<h2 class=\"hide-from-toc\"> model capacity</h2>",
         "<p>The complexity of problems that a model can learn. The more complex the\nproblems that a model can learn, the higher the model\u2019s capacity. A model\u2019s\ncapacity typically increases with the number of model parameters. For a\nformal definition of classifier capacity, see\n<a href=\"https://wikipedia.org/wiki/VC_dimension\" target=\"T\">VC dimension</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#model_capacity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"model function",
      "definition_text":"The function within an Estimator that implements machine learning training, evaluation, and inference. For example, the training portion of a model function might handle tasks such as defining the topology of a deep neural network and identifying its optimizer function.  When using premade Estimators, someone has already written the model function for you.  When using custom Estimators, you must write the model function yourself.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"model_function\"></a>",
         "<h2 class=\"hide-from-toc\"> model function</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>The function within an <a href=\"#Estimators\"><strong>Estimator</strong></a> that implements\nmachine learning training, evaluation, and inference. For example, the\ntraining portion of a model function might handle tasks such as defining\nthe topology of a deep neural network and identifying its\n<a href=\"#optimizer\"><strong>optimizer</strong></a> function.  When using\n<a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a>, someone has\nalready written the model function for you.  When using\n<a href=\"#custom_estimator\"><strong>custom Estimators</strong></a>, you must write the model\nfunction yourself.</p>",
         "<a href=\"#Estimators\"><strong>Estimator</strong></a>",
         "<strong>Estimator</strong>",
         "<a href=\"#optimizer\"><strong>optimizer</strong></a>",
         "<strong>optimizer</strong>",
         "<a href=\"#premade_Estimator\"><strong>premade Estimators</strong></a>",
         "<strong>premade Estimators</strong>",
         "<a href=\"#custom_estimator\"><strong>custom Estimators</strong></a>",
         "<strong>custom Estimators</strong>",
         "<p>For details about writing a model function, see the\n<a href=\"https://www.tensorflow.org/guide/custom_estimators\" target=\"T\">\nCreating Custom Estimators chapter</a> in the TensorFlow Programmers Guide.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#model_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"model training",
      "definition_text":"The process of determining the best model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"model_training\"></a>",
         "<h2 class=\"hide-from-toc\"> model training</h2>",
         "<p>The process of determining the best <a href=\"#model\"><strong>model</strong></a>.</p>",
         "<a href=\"#model\"><strong>model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#model_training",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Momentum",
      "definition_text":"A sophisticated gradient descent algorithm in which a learning step depends not only on the derivative in the current step, but also on the derivatives of the step(s) that immediately preceded it. Momentum involves computing an exponentially weighted moving average of the gradients over time, analogous to momentum in physics.  Momentum sometimes prevents learning from getting stuck in local minima.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Momentum\"></a>",
         "<h2 class=\"hide-from-toc\"> Momentum</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Momentum",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"multi-class",
      "definition_text":"Classification problems that distinguish among more than two classes. For example, there are approximately 128 species of maple trees, so a model that categorized maple tree species would be multi-class. Conversely, a model that divided emails into only two categories (spam and not spam) would be a binary classification model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"multi-class\"></a>",
         "<h2 class=\"hide-from-toc\"> multi-class classification</h2>",
         "<p>Classification problems that distinguish among more than two classes. For\nexample, there are approximately 128 species of maple trees, so a model\nthat categorized maple tree species would be multi-class. Conversely, a\nmodel that divided emails into only two categories (<em>spam</em> and <em>not spam</em>)\nwould be a <a href=\"#binary_classification\"><strong>binary classification model</strong></a>.</p>",
         "<em>spam</em>",
         "<em>not spam</em>",
         "<a href=\"#binary_classification\"><strong>binary classification model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#multi-class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"multi-class logistic regression",
      "definition_text":"Using logistic regression in multi-class classification problems.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"multi-class_logistic_regression\"></a>",
         "<h2 class=\"hide-from-toc\"> multi-class logistic regression</h2>",
         "<p>Using <a href=\"#logistic_regression\"><strong>logistic regression</strong></a> in\n<a href=\"#multi-class\"><strong>multi-class classification</strong></a> problems.</p>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>",
         "<strong>logistic regression</strong>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#multi-class_logistic_regression",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"multinomial classification",
      "definition_text":"Synonym for multi-class classification.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"multinomial_classification\"></a>",
         "<h2 class=\"hide-from-toc\"> multinomial classification</h2>",
         "<p>Synonym for <a href=\"#multi-class\"><strong>multi-class classification</strong></a>.</p>",
         "<a href=\"#multi-class\"><strong>multi-class classification</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#multinomial_classification",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"NaN trap",
      "definition_text":"When one number in your model becomes a NaN during training, which causes many or all other numbers in your model to eventually become a NaN.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"NaN_trap\"></a>",
         "<h2 class=\"hide-from-toc\"> NaN trap</h2>",
         "<p>When one number in your model becomes a\n<a href=\"https://wikipedia.org/wiki/NaN\" target=\"T\">NaN</a>\nduring training, which causes\nmany or all other numbers in your model to eventually become a NaN.</p>",
         "<a href=\"https://wikipedia.org/wiki/NaN\" target=\"T\">NaN</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#NaN_trap",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"natural language understanding",
      "definition_text":"Determining a user's intentions based on what the user typed or said. For example, a search engine uses natural language understanding to determine what the user is searching for based on what the user typed or said.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"natural_language_understanding\"></a>",
         "<h2 class=\"hide-from-toc\"> natural language understanding</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#natural_language_understanding",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"negative class",
      "definition_text":"In binary classification, one class is termed positive and the other is termed negative. The positive class is the thing we're looking for and the negative class is the other possibility. For example, the negative class in a medical test might be \"not tumor.\" The negative class in an email classifier might be \"not spam.\" See also positive class.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"negative_class\"></a>",
         "<h2 class=\"hide-from-toc\"> negative class</h2>",
         "<p>In <a href=\"#binary_classification\"><strong>binary classification</strong></a>, one class is\ntermed positive and the other is termed negative. The positive class is\nthe thing we're looking for and the negative class is the other possibility.\nFor example, the negative class in a medical test might be \"not tumor.\"\nThe negative class in an email classifier might be \"not spam.\"\nSee also <a href=\"#positive_class\"><strong>positive class</strong></a>.</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#negative_class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"neural network",
      "definition_text":"A model that, taking inspiration from the brain, is composed of layers (at least one of which is hidden) consisting of simple connected units or neurons followed by nonlinearities.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"neural_network\"></a>",
         "<h2 class=\"hide-from-toc\"> neural network</h2>",
         "<p>A model that, taking inspiration from the brain, is composed of layers\n(at least one of which is <a href=\"#hidden_layer\"><strong>hidden</strong></a>) consisting of\nsimple connected units or <a href=\"#neuron\"><strong>neurons</strong></a> followed by nonlinearities.</p>",
         "<a href=\"#hidden_layer\"><strong>hidden</strong></a>",
         "<strong>hidden</strong>",
         "<a href=\"#neuron\"><strong>neurons</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"neuron",
      "definition_text":"A node in a neural network, typically taking in multiple input values and generating one output value. The neuron calculates the output value by applying an activation function (nonlinear transformation) to a weighted sum of input values.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"neuron\"></a>",
         "<h2 class=\"hide-from-toc\"> neuron</h2>",
         "<p>A node in a <a href=\"#neural_network\"><strong>neural network</strong></a>, typically taking in\nmultiple input values and generating one output value. The neuron calculates\nthe output value by applying an\n<a href=\"#activation_function\"><strong>activation function</strong></a> (nonlinear transformation)\nto a weighted sum of input values.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#activation_function\"><strong>activation function</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#neuron",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"N-gram",
      "definition_text":"An ordered sequence of N words.  For example, truly madly is a 2-gram. Because order is relevant, madly truly is a different 2-gram than truly madly.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"N-gram\"></a>",
         "<h2 class=\"hide-from-toc\"> N-gram</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>An ordered sequence of N words.  For example, <em>truly madly</em> is a 2-gram. Because\norder is relevant, <em>madly truly</em> is a different 2-gram than <em>truly madly</em>.</p>",
         "<em>truly madly</em>",
         "<em>madly truly</em>",
         "<em>truly madly</em>",
         "<table>\n<tr>\n<th>N</th>\n<th>Name(s) for this kind of N-gram</th>\n<th>Examples</th>\n</tr>\n<tr>\n<td>2 </td>\n<td>bigram or 2-gram </td>\n<td><em>to go, go to, eat lunch, eat dinner</em> </td>\n</tr>\n<tr>\n<td>3 </td>\n<td>trigram or 3-gram </td>\n<td><em>ate too much, three blind mice, the bell tolls</em> </td>\n</tr>\n<tr>\n<td>4 </td>\n<td>4-gram </td>\n<td><em>walk in the park, dust in the wind, the boy ate lentils</em> </td>\n</tr>\n</table>",
         "<tr>\n<th>N</th>\n<th>Name(s) for this kind of N-gram</th>\n<th>Examples</th>\n</tr>",
         "<th>N</th>",
         "<th>Name(s) for this kind of N-gram</th>",
         "<th>Examples</th>",
         "<tr>\n<td>2 </td>\n<td>bigram or 2-gram </td>\n<td><em>to go, go to, eat lunch, eat dinner</em> </td>\n</tr>",
         "<td>2 </td>",
         "<td>bigram or 2-gram </td>",
         "<td><em>to go, go to, eat lunch, eat dinner</em> </td>",
         "<em>to go, go to, eat lunch, eat dinner</em>",
         "<tr>\n<td>3 </td>\n<td>trigram or 3-gram </td>\n<td><em>ate too much, three blind mice, the bell tolls</em> </td>\n</tr>",
         "<td>3 </td>",
         "<td>trigram or 3-gram </td>",
         "<td><em>ate too much, three blind mice, the bell tolls</em> </td>",
         "<em>ate too much, three blind mice, the bell tolls</em>",
         "<tr>\n<td>4 </td>\n<td>4-gram </td>\n<td><em>walk in the park, dust in the wind, the boy ate lentils</em> </td>\n</tr>",
         "<td>4 </td>",
         "<td>4-gram </td>",
         "<td><em>walk in the park, dust in the wind, the boy ate lentils</em> </td>",
         "<em>walk in the park, dust in the wind, the boy ate lentils</em>",
         "<p>Many <a href=\"#natural_language_understanding\"><strong>natural language understanding</strong></a>\nmodels rely on N-grams to predict the next word that the user will type\nor say. For example, suppose a user typed <em>three blind</em>.\nAn NLU model based on trigrams would likely predict that the\nuser will next type <em>mice</em>.</p>",
         "<a href=\"#natural_language_understanding\"><strong>natural language understanding</strong></a>",
         "<strong>natural language understanding</strong>",
         "<em>three blind</em>",
         "<em>mice</em>",
         "<p>Contrast N-grams with <a href=\"#bag_of_words\"><strong>bag of words</strong></a>, which are\nunordered sets of words.</p>",
         "<a href=\"#bag_of_words\"><strong>bag of words</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#N-gram",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"NLU",
      "definition_text":"Abbreviation for natural language understanding.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"NLU\"></a>",
         "<h2 class=\"hide-from-toc\"> NLU</h2>",
         "<p>Abbreviation for <a href=\"#natural_language_understanding\"><strong>natural language\nunderstanding</strong></a>.</p>",
         "<a href=\"#natural_language_understanding\"><strong>natural language\nunderstanding</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#NLU",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"node",
      "definition_text":"A neuron in a hidden layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"node\"></a>",
         "<h2 class=\"hide-from-toc\"> node (neural network)</h2>",
         "<p>A <a href=\"#neuron\"><strong>neuron</strong></a> in a <a href=\"#hidden_layer\"><strong>hidden layer</strong></a>.</p>",
         "<a href=\"#neuron\"><strong>neuron</strong></a>",
         "<strong>neuron</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layer</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#node",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"node graph",
      "definition_text":"An operation in a TensorFlow graph.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"node_graph\"></a>",
         "<h2 class=\"hide-from-toc\"> node (TensorFlow graph)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An operation in a TensorFlow <a href=\"#graph\"><strong>graph</strong></a>.</p>",
         "<a href=\"#graph\"><strong>graph</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#node_graph",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"noise",
      "definition_text":"Broadly speaking, anything that obscures the signal in a dataset. Noise can be introduced into data in a variety of ways. For example:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"noise\"></a>",
         "<h2 class=\"hide-from-toc\"> noise</h2>",
         "<p>Broadly speaking, anything that obscures the signal in a dataset. Noise\ncan be introduced into data in a variety of ways. For example:</p>",
         "<ul>\n<li>Human raters make mistakes in labeling.</li>\n<li>Humans and instruments mis-record or omit feature values.</li>\n</ul>",
         "<li>Human raters make mistakes in labeling.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#noise",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"non-response bias",
      "definition_text":"See selection bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"non-response_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> non-response bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>See <a href=\"#selection_bias\"><strong>selection bias</strong></a>.</p>",
         "<a href=\"#selection_bias\"><strong>selection bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#non-response_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"normalization",
      "definition_text":"The process of converting an actual range of values into a standard range of values, typically -1 to +1 or 0 to 1. For example, suppose the natural range of a certain feature is 800 to 6,000. Through subtraction and division, you can normalize those values into the range -1 to +1.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"normalization\"></a>",
         "<h2 class=\"hide-from-toc\"> normalization</h2>",
         "<p>The process of converting an actual range of values into a standard range\nof values, typically -1 to +1 or 0 to 1. For example, suppose the natural\nrange of a certain feature is 800 to 6,000. Through subtraction and division,\nyou can normalize those values into the range -1 to +1.</p>",
         "<p>See also <a href=\"#scaling\"><strong>scaling</strong></a>.</p>",
         "<a href=\"#scaling\"><strong>scaling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#normalization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"numerical data",
      "definition_text":"Features represented as integers or real-valued numbers. For example, in a real estate model, you would probably represent the size of a house (in square feet or square meters) as numerical data.  Representing a feature as numerical data indicates that the feature's values have a mathematical relationship to each other and possibly to the label. For example, representing the size of a house as numerical data indicates that a 200 square-meter house is twice as large as a 100 square-meter house. Furthermore, the number of square meters in a house probably has some mathematical relationship to the price of the house.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"numerical_data\"></a>",
         "<h2 class=\"hide-from-toc\"> numerical data</h2>",
         "<p><a href=\"#feature\"><strong>Features</strong></a> represented as integers or real-valued numbers.\nFor example, in a real estate model, you would probably represent the size\nof a house (in square feet or square meters) as numerical data.  Representing\na feature as numerical data indicates that the feature's values have\na <em>mathematical</em> relationship to each other and possibly to the label.\nFor example, representing the size of a house as numerical data indicates\nthat a 200 square-meter house is twice as large as a 100 square-meter house.\nFurthermore, the number of square meters in a house probably has some\nmathematical relationship to the price of the house.</p>",
         "<a href=\"#feature\"><strong>Features</strong></a>",
         "<strong>Features</strong>",
         "<em>mathematical</em>",
         "<p>Not all integer data should be represented as numerical data. For example,\npostal codes in some parts of the world are integers; however, integer postal\ncodes should not be represented as numerical data in models. That's because a\npostal code of <code dir=\"ltr\" translate=\"no\">20000</code> is not twice (or half) as potent as a postal code of\n10000. Furthermore, although different postal codes <em>do</em> correlate to different\nreal estate values, we can't assume that real estate values at postal code\n20000 are twice as valuable as real estate values at postal code 10000.\nPostal codes should be represented as <a href=\"#categorical_data\"><strong>categorical data</strong></a>\ninstead.</p>",
         "<code dir=\"ltr\" translate=\"no\">20000</code>",
         "<em>do</em>",
         "<a href=\"#categorical_data\"><strong>categorical data</strong></a>",
         "<strong>categorical data</strong>",
         "<p>Numerical features are sometimes called\n<a href=\"#continuous_feature\"><strong>continuous features</strong></a>.</p>",
         "<a href=\"#continuous_feature\"><strong>continuous features</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#numerical_data",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"numpy",
      "definition_text":"An  open-source math library that provides efficient array operations in Python. pandas is built on NumPy.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"numpy\"></a>",
         "<h2 class=\"hide-from-toc\"> NumPy</h2>",
         "<p>An <a href=\"http://www.numpy.org/\" target=\"T\">\nopen-source math library</a>\nthat provides efficient array operations in Python.\n<a href=\"#pandas\"><strong>pandas</strong></a> is built on NumPy.</p>",
         "<a href=\"http://www.numpy.org/\" target=\"T\">\nopen-source math library</a>",
         "<a href=\"#pandas\"><strong>pandas</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#numpy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"objective",
      "definition_text":"A metric that your algorithm is trying to optimize.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"objective\"></a>",
         "<h2 class=\"hide-from-toc\"> objective</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#objective",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"objective function",
      "definition_text":"The mathematical formula or metric that a model aims to optimize. For example, the objective function for linear regression is usually squared loss. Therefore, when training a linear regression model, the goal is to minimize squared loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"objective_function\"></a>",
         "<h2 class=\"hide-from-toc\"> objective function</h2>",
         "<p>The mathematical formula or metric that a model aims to optimize.\nFor example, the objective function for\n<a href=\"#linear_regression\"><strong>linear regression</strong></a> is usually\n<a href=\"#squared_loss\"><strong>squared loss</strong></a>. Therefore, when training a\nlinear regression model, the goal is to minimize squared loss.</p>",
         "<a href=\"#linear_regression\"><strong>linear regression</strong></a>",
         "<strong>linear regression</strong>",
         "<a href=\"#squared_loss\"><strong>squared loss</strong></a>",
         "<strong>squared loss</strong>",
         "<p>In some cases, the goal is to maximize the objective function.\nFor example, if the objective function is accuracy, the goal is\nto maximize accuracy.</p>",
         "<p>See also <a href=\"#loss\"><strong>loss</strong></a>.</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#objective_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"offline inference",
      "definition_text":"Generating a group of predictions, storing those predictions, and then retrieving those predictions on demand. Contrast with online inference.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"offline_inference\"></a>",
         "<h2 class=\"hide-from-toc\"> offline inference</h2>",
         "<p>Generating a group of <a href=\"#prediction\"><strong>predictions</strong></a>, storing those\npredictions, and then retrieving those predictions on demand. Contrast\nwith <a href=\"#online_inference\"><strong>online inference</strong></a>.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#online_inference\"><strong>online inference</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#offline_inference",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"one-hot encoding",
      "definition_text":"A sparse vector in which:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"one-hot_encoding\"></a>",
         "<h2 class=\"hide-from-toc\"> one-hot encoding</h2>",
         "<p>A sparse vector in which:</p>",
         "<ul>\n<li>One element is set to 1.</li>\n<li>All other elements are set to 0.</li>\n</ul>",
         "<li>One element is set to 1.</li>",
         "<li>All other elements are set to 0.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#one-hot_encoding",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"one-shot learning",
      "definition_text":"A machine learning approach, often used for object classification, designed to learn effective classifiers from a single training example.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"one-shot_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> one-shot learning</h2>",
         "<p>A machine learning approach, often used for object classification,\ndesigned to learn effective classifiers from a single training example.</p>",
         "<p>See also <a href=\"#few-shot_learning\"><strong>few-shot learning</strong></a>.</p>",
         "<a href=\"#few-shot_learning\"><strong>few-shot learning</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#one-shot_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"one-vs.-all",
      "definition_text":"Given a classification problem with N possible solutions, a one-vs.-all solution consists of N separate binary classifiers\u2014one binary classifier for each possible outcome. For example, given a model that classifies examples as animal, vegetable, or mineral, a one-vs.-all solution would provide the following three separate binary classifiers:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"one-vs.-all\"></a>",
         "<h2 class=\"hide-from-toc\"> one-vs.-all</h2>",
         "<p>Given a classification problem with N possible solutions, a one-vs.-all\nsolution consists of N separate\n<a href=\"#binary_classification\"><strong>binary classifiers</strong></a>\u2014one binary classifier for\neach possible outcome. For example, given a model that classifies examples\nas animal, vegetable, or mineral, a one-vs.-all solution would provide the\nfollowing three separate binary classifiers:</p>",
         "<a href=\"#binary_classification\"><strong>binary classifiers</strong></a>",
         "<strong>binary classifiers</strong>",
         "<ul>\n<li>animal vs. not animal</li>\n<li>vegetable vs. not vegetable</li>\n<li>mineral vs. not mineral</li>\n</ul>",
         "<li>animal vs. not animal</li>",
         "<li>vegetable vs. not vegetable</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#one-vs.-all",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"online inference",
      "definition_text":"Generating predictions on demand. Contrast with offline inference.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"online_inference\"></a>",
         "<h2 class=\"hide-from-toc\"> online inference</h2>",
         "<p>Generating <a href=\"#prediction\"><strong>predictions</strong></a> on demand. Contrast with\n<a href=\"#offline_inference\"><strong>offline inference</strong></a>.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#offline_inference\"><strong>offline inference</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#online_inference",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Operation",
      "definition_text":"A node in the TensorFlow graph. In TensorFlow, any procedure that creates, manipulates, or destroys a Tensor is an operation. For example, a matrix multiply is an operation that takes two Tensors as input and generates one Tensor as output.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Operation\"></a>",
         "<h2 class=\"hide-from-toc\"> Operation (op)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A node in the TensorFlow graph. In TensorFlow, any procedure that creates,\nmanipulates, or destroys a <a href=\"#tensor\"><strong>Tensor</strong></a> is an operation. For\nexample, a matrix multiply is an operation that takes two Tensors as\ninput and generates one Tensor as output.</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Operation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"optimizer",
      "definition_text":"A specific implementation of the gradient descent algorithm. TensorFlow's base class for optimizers is tf.train.Optimizer. Popular optimizers include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"optimizer\"></a>",
         "<h2 class=\"hide-from-toc\"> optimizer</h2>",
         "<p>A specific implementation of the <a href=\"#gradient_descent\"><strong>gradient descent</strong></a>\nalgorithm. TensorFlow's base class for optimizers is\n<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/Optimizer\" target=\"T\">tf.train.Optimizer</a>. Popular optimizers include:</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>",
         "<strong>gradient descent</strong>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/Optimizer\" target=\"T\">tf.train.Optimizer</a>",
         "<ul>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdagradOptimizer\" target=\"T\">AdaGrad</a>,\n    which stands for ADAptive GRADient descent.</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdamOptimizer\" target=\"T\">Adam</a>,\n    which stands for ADAptive with Momentum.</li>\n</ul>",
         "<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdagradOptimizer\" target=\"T\">AdaGrad</a>,\n    which stands for ADAptive GRADient descent.</li>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdagradOptimizer\" target=\"T\">AdaGrad</a>",
         "<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdamOptimizer\" target=\"T\">Adam</a>,\n    which stands for ADAptive with Momentum.</li>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/AdamOptimizer\" target=\"T\">Adam</a>",
         "<p>Different optimizers may leverage one or more of the following concepts\nto enhance the effectiveness of gradient descent on a\ngiven <a href=\"#training_set\"><strong>training set</strong></a>:</p>",
         "<a href=\"#training_set\"><strong>training set</strong></a>",
         "<strong>training set</strong>",
         "<ul>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/MomentumOptimizer\" target=\"T\">momentum</a> (Momentum)</li>\n<li>update frequency</li>\n<li>sparsity/regularization\n(<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/FtrlOptimizer\" target=\"T\">Ftrl</a>)</li>\n<li>more complex math\n(<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/ProximalGradientDescentOptimizer\" target=\"T\">Proximal</a>,\nand others)</li>\n</ul>",
         "<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/train/MomentumOptimizer\" target=\"T\">momentum</a> (Momentum)</li>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/MomentumOptimizer\" target=\"T\">momentum</a>",
         "<li>update frequency</li>",
         "<li>sparsity/regularization\n(<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/FtrlOptimizer\" target=\"T\">Ftrl</a>)</li>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/FtrlOptimizer\" target=\"T\">Ftrl</a>",
         "<li>more complex math\n(<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/ProximalGradientDescentOptimizer\" target=\"T\">Proximal</a>,\nand others)</li>",
         "<a href=\"https://www.tensorflow.org/api_docs/python/tf/train/ProximalGradientDescentOptimizer\" target=\"T\">Proximal</a>",
         "<p>You might even imagine an\n<a href=\"https://arxiv.org/abs/1606.04474\" target=\"T\">NN-driven optimizer</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#optimizer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"out-group homogeneity bias",
      "definition_text":"The tendency to see out-group members as more alike than in-group members when comparing attitudes, values, personality traits, and other characteristics. In-group refers to people you interact with regularly; out-group refers to people you do not interact with regularly. If you create a dataset by asking people to provide attributes about out-groups, those attributes may be less nuanced and more stereotyped than attributes that participants list for people in their in-group.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"out-group_homogeneity_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> out-group homogeneity bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>The tendency to see out-group members as more alike than in-group members\nwhen comparing attitudes, values, personality traits, and other\ncharacteristics. <strong>In-group</strong> refers to people you interact with regularly;\n<strong>out-group</strong> refers to people you do not interact with regularly. If you\ncreate a dataset by asking people to provide attributes about\nout-groups, those attributes may be less nuanced and more stereotyped\nthan attributes that participants list for people in their in-group.</p>",
         "<strong>In-group</strong>",
         "<strong>out-group</strong>",
         "<p>For example, Lilliputians might describe the houses of other Lilliputians\nin great detail, citing small differences in architectural styles, windows,\ndoors, and sizes.  However, the same Lilliputians might simply declare that\nBrobdingnagians all live in identical houses.</p>",
         "<p>Out-group homogeneity bias is a form of\n<a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a>.</p>",
         "<a href=\"#group_attribution_bias\"><strong>group attribution bias</strong></a>",
         "<strong>group attribution bias</strong>",
         "<p>See also <a href=\"#in-group_bias\"><strong>in-group bias</strong></a>.</p>",
         "<a href=\"#in-group_bias\"><strong>in-group bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#out-group_homogeneity_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"outliers",
      "definition_text":"For example, Lilliputians might describe the houses of other Lilliputians in great detail, citing small differences in architectural styles, windows, doors, and sizes.  However, the same Lilliputians might simply declare that Brobdingnagians all live in identical houses.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"outliers\"></a>",
         "<h2 class=\"hide-from-toc\"> outliers</h2>",
         "<p>Values distant from most other values. In machine learning, any of the\nfollowing are outliers:</p>",
         "<ul>\n<li><a href=\"#weight\"><strong>Weights</strong></a> with high absolute values.</li>\n<li>Predicted values relatively far away from the actual values.</li>\n<li>Input data whose values are more than roughly 3 standard deviations\nfrom the mean.</li>\n</ul>",
         "<li><a href=\"#weight\"><strong>Weights</strong></a> with high absolute values.</li>",
         "<a href=\"#weight\"><strong>Weights</strong></a>",
         "<strong>Weights</strong>",
         "<li>Predicted values relatively far away from the actual values.</li>",
         "<li>Input data whose values are more than roughly 3 standard deviations\nfrom the mean.</li>",
         "<p>Outliers often cause problems in model training. <a href=\"#clipping\"><strong>Clipping</strong></a>\nis one way of managing outliers.</p>",
         "<a href=\"#clipping\"><strong>Clipping</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#outliers",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"output layer",
      "definition_text":"Values distant from most other values. In machine learning, any of the following are outliers:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"output_layer\"></a>",
         "<h2 class=\"hide-from-toc\"> output layer</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#output_layer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"overfitting",
      "definition_text":"The \"final\" layer of a neural network. The layer containing the answer(s).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"overfitting\"></a>",
         "<h2 class=\"hide-from-toc\"> overfitting</h2>",
         "<p>Creating a model that matches the <a href=\"#training_set\"><strong>training data</strong></a> so\nclosely that the model fails to make correct predictions on new data.</p>",
         "<a href=\"#training_set\"><strong>training data</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#overfitting",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"pandas",
      "definition_text":"Creating a model that matches the training data so closely that the model fails to make correct predictions on new data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"pandas\"></a>",
         "<h2 class=\"hide-from-toc\"> pandas</h2>",
         "<p>A column-oriented data analysis API. Many machine learning frameworks,\nincluding TensorFlow, support pandas data structures as input. See the\n<a href=\"http://pandas.pydata.org/\" target=\"T\">pandas documentation</a>\nfor details.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#pandas",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"parameter",
      "definition_text":"A column-oriented data analysis API. Many machine learning frameworks, including TensorFlow, support pandas data structures as input. See the pandas documentation for details.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"parameter\"></a>",
         "<h2 class=\"hide-from-toc\"> parameter</h2>",
         "<p>A variable of a model that the machine learning system trains on its own.\nFor example, <a href=\"#weight\"><strong>weights</strong></a> are parameters whose values the\nmachine learning system gradually learns through successive training\niterations. Contrast with <a href=\"#hyperparameter\"><strong>hyperparameter</strong></a>.</p>",
         "<a href=\"#weight\"><strong>weights</strong></a>",
         "<strong>weights</strong>",
         "<a href=\"#hyperparameter\"><strong>hyperparameter</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#parameter",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Parameter Server",
      "definition_text":"A variable of a model that the machine learning system trains on its own. For example, weights are parameters whose values the machine learning system gradually learns through successive training iterations. Contrast with hyperparameter.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Parameter_Server\"></a>",
         "<h2 class=\"hide-from-toc\"> Parameter Server (PS)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A job that keeps track of a model's <a href=\"#parameter\"><strong>parameters</strong></a> in a\ndistributed setting.</p>",
         "<a href=\"#parameter\"><strong>parameters</strong></a>",
         "<strong>parameters</strong>",
         "<p>See the <a href=\"https://www.tensorflow.org/guide/extend/architecture\" target=\"T\">TensorFlow Architecture chapter</a> in the TensorFlow Programmers\nGuide for details.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Parameter_Server",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"parameter update",
      "definition_text":"A job that keeps track of a model's parameters in a distributed setting.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"parameter_update\"></a>",
         "<h2 class=\"hide-from-toc\"> parameter update</h2>",
         "<p>The operation of adjusting a model's <a href=\"#parameter\"><strong>parameters</strong></a> during\ntraining, typically within a single iteration of\n<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>.</p>",
         "<a href=\"#parameter\"><strong>parameters</strong></a>",
         "<strong>parameters</strong>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#parameter_update",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"partial derivative",
      "definition_text":"The operation of adjusting a model's parameters during training, typically within a single iteration of gradient descent.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"partial_derivative\"></a>",
         "<h2 class=\"hide-from-toc\"> partial derivative</h2>",
         "<p>A derivative in which all but one of the variables is considered a constant.\nFor example, the partial derivative of <em>f(x, y)</em> with respect to <em>x</em> is the\nderivative of <em>f</em> considered as a function of <em>x</em> alone (that is, keeping <em>y</em>\nconstant). The partial derivative of <em>f</em> with respect to <em>x</em> focuses only on\nhow <em>x</em> is changing and ignores all other variables in the equation.</p>",
         "<em>f(x, y)</em>",
         "<em>x</em>",
         "<em>f</em>",
         "<em>x</em>",
         "<em>y</em>",
         "<em>f</em>",
         "<em>x</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#partial_derivative",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"participation bias",
      "definition_text":"A derivative in which all but one of the variables is considered a constant. For example, the partial derivative of f(x, y) with respect to x is the derivative of f considered as a function of x alone (that is, keeping y constant). The partial derivative of f with respect to x focuses only on how x is changing and ignores all other variables in the equation.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"participation_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> participation bias</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Synonym for non-response bias.  See <a href=\"#selection_bias\"><strong>selection bias</strong></a>.</p>",
         "<a href=\"#selection_bias\"><strong>selection bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#participation_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"partitioning strategy",
      "definition_text":"Synonym for non-response bias.  See selection bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"partitioning_strategy\"></a>",
         "<h2 class=\"hide-from-toc\"> partitioning strategy</h2>",
         "<p>The algorithm by which variables are divided across\n<a href=\"#Parameter_Server\"><strong>parameter servers</strong></a>.</p>",
         "<a href=\"#Parameter_Server\"><strong>parameter servers</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#partitioning_strategy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"perceptron",
      "definition_text":"The algorithm by which variables are divided across parameter servers.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"perceptron\"></a>",
         "<h2 class=\"hide-from-toc\"> perceptron</h2>",
         "<p>A system (either hardware or software) that takes in one or more input values,\nruns a function on the weighted sum of the inputs, and computes a single\noutput value. In machine learning, the function is typically nonlinear, such as\n<a href=\"#ReLU\"><strong>ReLU</strong></a>, <a href=\"#sigmoid_function\"><strong>sigmoid</strong></a>, or tanh.\nFor example, the following perceptron relies on the sigmoid function to process\nthree input values:</p>",
         "<a href=\"#ReLU\"><strong>ReLU</strong></a>",
         "<strong>ReLU</strong>",
         "<a href=\"#sigmoid_function\"><strong>sigmoid</strong></a>",
         "<strong>sigmoid</strong>",
         "<div>\n$$f(x_1, x_2, x_3) = \\text{sigmoid}(w_1 x_1 + w_2 x_2 + w_3 x_3)$$\n</div>",
         "<p>In the following illustration, the perceptron takes three inputs, each of which\nis itself modified by a weight before entering the perceptron:</p>",
         "<p>\n<img alt=\"A perceptron that takes in 3 inputs, each multiplied by separate\nweights. The perceptron outputs a single value.\" height=\"300\" src=\"/machine-learning/glossary/images/Perceptron.svg\"/>\n</p>",
         "<img alt=\"A perceptron that takes in 3 inputs, each multiplied by separate\nweights. The perceptron outputs a single value.\" height=\"300\" src=\"/machine-learning/glossary/images/Perceptron.svg\"/>",
         "<p>Perceptrons are the (<a href=\"#node\"><strong>nodes</strong></a>) in <a href=\"#deep_model\"><strong>deep neural\nnetworks</strong></a>. That is, a deep neural network consists of\nmultiple connected perceptrons, plus a\n<a href=\"#backpropagation\"><strong>backpropagation</strong></a> algorithm to introduce feedback.</p>",
         "<a href=\"#node\"><strong>nodes</strong></a>",
         "<strong>nodes</strong>",
         "<a href=\"#deep_model\"><strong>deep neural\nnetworks</strong></a>",
         "<strong>deep neural\nnetworks</strong>",
         "<a href=\"#backpropagation\"><strong>backpropagation</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#perceptron",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"performance",
      "definition_text":"A system (either hardware or software) that takes in one or more input values, runs a function on the weighted sum of the inputs, and computes a single output value. In machine learning, the function is typically nonlinear, such as ReLU, sigmoid, or tanh. For example, the following perceptron relies on the sigmoid function to process three input values:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"performance\"></a>",
         "<h2 class=\"hide-from-toc\"> performance</h2>",
         "<p>Overloaded term with the following meanings:</p>",
         "<ul>\n<li>The traditional meaning within software engineering. Namely: How fast\n(or efficiently) does this piece of software run?</li>\n<li>The meaning within machine learning. Here, performance answers the\nfollowing question: How correct is this <a href=\"#model\"><strong>model</strong></a>? That is,\nhow good are the model's predictions?</li>\n</ul>",
         "<li>The traditional meaning within software engineering. Namely: How fast\n(or efficiently) does this piece of software run?</li>",
         "<li>The meaning within machine learning. Here, performance answers the\nfollowing question: How correct is this <a href=\"#model\"><strong>model</strong></a>? That is,\nhow good are the model's predictions?</li>",
         "<a href=\"#model\"><strong>model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#performance",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"perplexity",
      "definition_text":"Overloaded term with the following meanings:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"perplexity\"></a>",
         "<h2 class=\"hide-from-toc\"> perplexity</h2>",
         "<p>One measure of how well a <a href=\"#model\"><strong>model</strong></a> is accomplishing its task.\nFor example, suppose your task is to read the first few letters of a word\na user is typing on a smartphone keyboard, and to offer a list of possible\ncompletion words. Perplexity, P, for this task is approximately the number\nof guesses you need to offer in order for your list to contain the actual\nword the user is trying to type.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<p>Perplexity is related to <a href=\"#cross-entropy\"><strong>cross-entropy</strong></a> as follows:</p>",
         "<a href=\"#cross-entropy\"><strong>cross-entropy</strong></a>",
         "<strong>cross-entropy</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#perplexity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"pipeline",
      "definition_text":"One measure of how well a model is accomplishing its task. For example, suppose your task is to read the first few letters of a word a user is typing on a smartphone keyboard, and to offer a list of possible completion words. Perplexity, P, for this task is approximately the number of guesses you need to offer in order for your list to contain the actual word the user is trying to type.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"pipeline\"></a>",
         "<h2 class=\"hide-from-toc\"> pipeline</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#pipeline",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"policy",
      "definition_text":"The infrastructure surrounding a machine learning algorithm. A pipeline includes gathering the data, putting the data into training data files, training one or more models, and exporting the models to production.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"policy\"></a>",
         "<h2 class=\"hide-from-toc\"> policy</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, an <a href=\"#agent\"><strong>agent's</strong></a> probabilistic mapping\nfrom <a href=\"#state\"><strong>states</strong></a> to <a href=\"#action\"><strong>actions</strong></a>.</p>",
         "<a href=\"#agent\"><strong>agent's</strong></a>",
         "<strong>agent's</strong>",
         "<a href=\"#state\"><strong>states</strong></a>",
         "<strong>states</strong>",
         "<a href=\"#action\"><strong>actions</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#policy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"pooling",
      "definition_text":"In reinforcement learning, an agent's probabilistic mapping from states to actions.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"pooling\"></a>",
         "<h2 class=\"hide-from-toc\"> pooling</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>Reducing a matrix (or matrices) created by an earlier\n<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a> to a smaller matrix.\nPooling usually involves taking either the maximum or average value\nacross the pooled area. For example, suppose we have the\nfollowing 3x3 matrix:</p>",
         "<a href=\"#convolutional_layer\"><strong>convolutional layer</strong></a>",
         "<strong>convolutional layer</strong>",
         "<p>\n<img src=\"/machine-learning/glossary/images/PoolingStart.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/PoolingStart.svg\"/>",
         "<p>A pooling operation, just like a convolutional operation, divides that\nmatrix into slices and then slides that convolutional operation by\n<a href=\"#stride\"><strong>strides</strong></a>. For example, suppose the pooling operation\ndivides the convolutional matrix into 2x2 slices with a 1x1 stride.\nAs the following diagram illustrates, four pooling operations take place.\nImagine that each pooling operation picks the maximum value of the\nfour in that slice:</p>",
         "<a href=\"#stride\"><strong>strides</strong></a>",
         "<strong>strides</strong>",
         "<p>\n<img src=\"/machine-learning/glossary/images/PoolingConvolution.svg\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/PoolingConvolution.svg\"/>",
         "<p>Pooling helps enforce\n<a href=\"#translational_invariance\"><strong>translational invariance</strong></a> in the input matrix.</p>",
         "<a href=\"#translational_invariance\"><strong>translational invariance</strong></a>",
         "<strong>translational invariance</strong>",
         "<p>Pooling for vision applications is known more formally as <strong>spatial pooling</strong>.\nTime-series applications usually refer to pooling as <strong>temporal pooling</strong>.\nLess formally, pooling is often called <strong>subsampling</strong> or <strong>downsampling</strong>.</p>",
         "<strong>spatial pooling</strong>",
         "<strong>temporal pooling</strong>",
         "<strong>subsampling</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#pooling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"positive class",
      "definition_text":"Reducing a matrix (or matrices) created by an earlier convolutional layer to a smaller matrix. Pooling usually involves taking either the maximum or average value across the pooled area. For example, suppose we have the following 3x3 matrix:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"positive_class\"></a>",
         "<h2 class=\"hide-from-toc\"> positive class</h2>",
         "<p>In <a href=\"#binary_classification\"><strong>binary classification</strong></a>, the two possible\nclasses are labeled as positive and negative. The positive outcome is the\nthing we're testing for. (Admittedly, we're simultaneously testing for\nboth outcomes, but play along.) For example, the positive class in a\nmedical test might be \"tumor.\" The positive class in an email classifier\nmight be \"spam.\"</p>",
         "<a href=\"#binary_classification\"><strong>binary classification</strong></a>",
         "<strong>binary classification</strong>",
         "<p>Contrast with <a href=\"#negative_class\"><strong>negative class</strong></a>.</p>",
         "<a href=\"#negative_class\"><strong>negative class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#positive_class",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"post-processing",
      "definition_text":"In binary classification, the two possible classes are labeled as positive and negative. The positive outcome is the thing we're testing for. (Admittedly, we're simultaneously testing for both outcomes, but play along.) For example, the positive class in a medical test might be \"tumor.\" The positive class in an email classifier might be \"spam.\"",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"post-processing\"></a>",
         "<h2 class=\"hide-from-toc\"> post-processing</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<em>after</em>",
         "<p>For example, one might apply post-processing to a binary classifier\nby setting a classification threshold such that\n<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a> is maintained\nfor some attribute by checking that the <a href=\"#TP_rate\"><strong>true positive rate</strong></a>\nis the same for all values of that attribute.</p>",
         "<a href=\"#equality_of_opportunity\"><strong>equality of opportunity</strong></a>",
         "<strong>equality of opportunity</strong>",
         "<a href=\"#TP_rate\"><strong>true positive rate</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#post-processing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"area under the pr curve",
      "definition_text":"Area under the interpolated precision-recall curve, obtained by plotting (recall, precision) points for different values of the classification threshold. Depending on how it's calculated, PR AUC may be equivalent to the average precision of the model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"area_under_the_pr_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> PR AUC (area under the PR curve)</h2>",
         "<p>Area under the interpolated\n<a href=\"#precision-recall_curve\"><strong>precision-recall curve</strong></a>, obtained by plotting\n(recall, precision) points for different values of the\n<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>. Depending on how\nit's calculated, PR AUC may be equivalent to the\n<a href=\"#average_precision\"><strong>average precision</strong></a> of the model.</p>",
         "<a href=\"#precision-recall_curve\"><strong>precision-recall curve</strong></a>",
         "<strong>precision-recall curve</strong>",
         "<a href=\"#classification_threshold\"><strong>classification threshold</strong></a>",
         "<strong>classification threshold</strong>",
         "<a href=\"#average_precision\"><strong>average precision</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#area_under_the_pr_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"precision",
      "definition_text":"A metric for classification models. Precision identifies the frequency with which a model was correct when predicting the positive class. That is:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"precision\"></a>",
         "<h2 class=\"hide-from-toc\"> precision</h2>",
         "<p>A metric for <a href=\"#classification_model\"><strong>classification models</strong></a>. Precision\nidentifies the frequency with which a model was correct when predicting the\n<a href=\"#positive_class\"><strong>positive class</strong></a>. That is:</p>",
         "<a href=\"#classification_model\"><strong>classification models</strong></a>",
         "<strong>classification models</strong>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>",
         "<strong>positive class</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#precision",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"precision-recall curve",
      "definition_text":"A curve of precision vs. recall at different classification thresholds.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"precision-recall_curve\"></a>",
         "<h2 class=\"hide-from-toc\"> precision-recall curve</h2>",
         "<p>A curve of <a href=\"#precision\"><strong>precision</strong></a> vs. <a href=\"#recall\"><strong>recall</strong></a> at different\n<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>.</p>",
         "<a href=\"#precision\"><strong>precision</strong></a>",
         "<strong>precision</strong>",
         "<a href=\"#recall\"><strong>recall</strong></a>",
         "<strong>recall</strong>",
         "<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#precision-recall_curve",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"prediction",
      "definition_text":"A model's output when provided with an input example.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"prediction\"></a>",
         "<h2 class=\"hide-from-toc\"> prediction</h2>",
         "<p>A model's output when provided with an input <a href=\"#example\"><strong>example</strong></a>.</p>",
         "<a href=\"#example\"><strong>example</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#prediction",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"prediction bias",
      "definition_text":"A value indicating how far apart the average of predictions is from the average of labels in the dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"prediction_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> prediction bias</h2>",
         "<p>A value indicating how far apart the average of\n<a href=\"#prediction\"><strong>predictions</strong></a> is from the average of <a href=\"#label\"><strong>labels</strong></a>\nin the dataset.</p>",
         "<a href=\"#prediction\"><strong>predictions</strong></a>",
         "<strong>predictions</strong>",
         "<a href=\"#label\"><strong>labels</strong></a>",
         "<strong>labels</strong>",
         "<p>Not to be confused with the <a href=\"#bias\"><strong>bias term</strong></a> in machine learning models\nor with <a href=\"#bias_ethics\"><strong>bias in ethics and fairness</strong></a>.</p>",
         "<a href=\"#bias\"><strong>bias term</strong></a>",
         "<strong>bias term</strong>",
         "<a href=\"#bias_ethics\"><strong>bias in ethics and fairness</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#prediction_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"predictive parity",
      "definition_text":"A fairness metric that checks whether, for a given classifier, the precision rates are equivalent for subgroups under consideration.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"predictive_parity\"></a>",
         "<h2 class=\"hide-from-toc\"> predictive parity</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>A <a href=\"#fairness_metric\"><strong>fairness metric</strong></a> that checks whether,\nfor a given classifier, the <a href=\"#precision\"><strong>precision</strong></a> rates\nare equivalent for subgroups under consideration.</p>",
         "<a href=\"#fairness_metric\"><strong>fairness metric</strong></a>",
         "<strong>fairness metric</strong>",
         "<a href=\"#precision\"><strong>precision</strong></a>",
         "<strong>precision</strong>",
         "<p>For example, a model that predicts college acceptance would satisfy\npredictive parity for nationality if its precision rate is the same\nfor Lilliputians and Brobdingnagians.</p>",
         "<p>Predictive parity is sometime also called <em>predictive rate parity</em>.</p>",
         "<em>predictive rate parity</em>",
         "<p>See <a href=\"http://fairware.cs.umass.edu/papers/Verma.pdf\">\"Fairness Definitions\nExplained\"</a> (section 3.2.1)\nfor a more detailed discussion of predictive parity.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#predictive_parity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"predictive rate parity",
      "definition_text":"Another name for predictive parity.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"predictive_rate_parity\"></a>",
         "<h2 class=\"hide-from-toc\"> predictive rate parity</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Another name for <a href=\"#predictive_parity\"><strong>predictive parity</strong></a>.</p>",
         "<a href=\"#predictive_parity\"><strong>predictive parity</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#predictive_rate_parity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"premade Estimator",
      "definition_text":"An Estimator that someone has already built. TensorFlow provides several premade Estimators, including DNNClassifier, DNNRegressor, and LinearClassifier.  To learn more about premade Estimators, see the Premade Estimators chapter in the TensorFlow Programmers Guide.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"premade_Estimator\"></a>",
         "<h2 class=\"hide-from-toc\"> premade Estimator</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An <a href=\"#Estimators\"><strong>Estimator</strong></a> that someone has already built.\nTensorFlow provides several premade Estimators, including <code dir=\"ltr\" translate=\"no\">DNNClassifier</code>,\n<code dir=\"ltr\" translate=\"no\">DNNRegressor</code>, and <code dir=\"ltr\" translate=\"no\">LinearClassifier</code>.  To learn more about\npremade Estimators, see the\n<a href=\"https://www.tensorflow.org/guide/premade_estimators\" target=\"T\">Premade Estimators chapter</a> in the TensorFlow Programmers Guide.</p>",
         "<a href=\"#Estimators\"><strong>Estimator</strong></a>",
         "<strong>Estimator</strong>",
         "<code dir=\"ltr\" translate=\"no\">DNNClassifier</code>",
         "<code dir=\"ltr\" translate=\"no\">DNNRegressor</code>",
         "<code dir=\"ltr\" translate=\"no\">LinearClassifier</code>",
         "<a href=\"https://www.tensorflow.org/guide/premade_estimators\" target=\"T\">Premade Estimators chapter</a>",
         "<p>Contrast with <a href=\"#custom_estimator\"><strong>custom estimators</strong></a>.</p>",
         "<a href=\"#custom_estimator\"><strong>custom estimators</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#premade_Estimator",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"preprocessing",
      "definition_text":"Models or model components (such as embeddings) that have been already been trained. Sometimes, you'll feed pre-trained embeddings into a neural network. Other times, your model will train the embeddings itself rather than rely on the pre-trained embeddings.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"preprocessing\"></a>",
         "<h2 class=\"hide-from-toc\"> preprocessing</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a>",
         "<strong>sensitive attributes</strong>",
         "<a href=\"#fairness_constraint\"><strong>fairness constraints</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#preprocessing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"pre-trained model",
      "definition_text":"What you believe about the data before you begin training on it. For example, L2 regularization relies on a prior belief that weights should be small and normally distributed around zero.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"pre-trained_model\"></a>",
         "<h2 class=\"hide-from-toc\"> pre-trained model</h2>",
         "<p>Models or model components (such as <a href=\"#embeddings\"><strong>embeddings</strong></a>) that have\nbeen already been trained. Sometimes, you'll feed pre-trained embeddings\ninto a <a href=\"#neural_network\"><strong>neural network</strong></a>. Other times, your model will\ntrain the embeddings itself rather than rely on the pre-trained embeddings.</p>",
         "<a href=\"#embeddings\"><strong>embeddings</strong></a>",
         "<strong>embeddings</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#pre-trained_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"prior belief",
      "definition_text":"Data used to approximate labels not directly available in a dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"prior_belief\"></a>",
         "<h2 class=\"hide-from-toc\"> prior belief</h2>",
         "<p>What you believe about the data before you begin training on it. For\nexample, <a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a> relies on\na prior belief that <a href=\"#weight\"><strong>weights</strong></a> should be small and normally\ndistributed around zero.</p>",
         "<a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>",
         "<strong>L<sub>2</sub> regularization</strong>",
         "<sub>2</sub>",
         "<a href=\"#weight\"><strong>weights</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#prior_belief",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"proxy sensitive attributes",
      "definition_text":"For example, suppose you want is it raining? to be a Boolean label for your dataset, but the dataset doesn't contain rain data. If photographs are available, you might establish pictures of people carrying umbrellas as a proxy label for is it raining?  However, proxy labels may distort results. For example, in some places, it may be more common to carry umbrellas to protect against sun than the rain.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"proxy_sensitive_attributes\"></a>",
         "<h2 class=\"hide-from-toc\"> proxy (sensitive attributes)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attribute</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#proxy_sensitive_attributes",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"proxy labels",
      "definition_text":"In reinforcement learning, the function that predicts the expected return from taking an action in a state and then following a given policy.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"proxy_labels\"></a>",
         "<h2 class=\"hide-from-toc\"> proxy labels</h2>",
         "<p>Data used to approximate labels not directly available in a dataset.</p>",
         "<p>For example, suppose you want <em>is it raining?</em> to be a Boolean label\nfor your dataset, but the dataset doesn't contain rain data. If\nphotographs are available, you might establish pictures of people\ncarrying umbrellas as a proxy label for <em>is it raining?</em>  However,\nproxy labels may distort results. For example, in some places, it\nmay be more common to carry umbrellas to protect against sun than\nthe rain.</p>",
         "<em>is it raining?</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#proxy_labels",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"q-function",
      "definition_text":"In reinforcement learning, an algorithm that allows an agent to learn the optimal Q-function of a Markov decision process by applying the Bellman equation. The Markov decision process models an environment.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"q-function\"></a>",
         "<h2 class=\"hide-from-toc\"> Q-function</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the function that predicts the expected\n<a href=\"#return\"><strong>return</strong></a> from taking an <a href=\"#action\"><strong>action</strong></a> in a\n<a href=\"#state\"><strong>state</strong></a> and then following a given <a href=\"#policy\"><strong>policy</strong></a>.</p>",
         "<a href=\"#return\"><strong>return</strong></a>",
         "<strong>return</strong>",
         "<a href=\"#action\"><strong>action</strong></a>",
         "<strong>action</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<p>Q-function is also known as <strong>state-action value function</strong>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#q-function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"q-learning",
      "definition_text":"Each bucket in quantile bucketing.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"q-learning\"></a>",
         "<h2 class=\"hide-from-toc\"> Q-learning</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, an algorithm that allows an <a href=\"#agent\"><strong>agent</strong></a>\nto learn the optimal <a href=\"#q-function\"><strong>Q-function</strong></a> of a\n<a href=\"#markov_decision_process\"><strong>Markov decision process</strong></a> by applying the\n<a href=\"#bellman_equation\"><strong>Bellman equation</strong></a>. The Markov decision process models\nan <a href=\"#environment\"><strong>environment</strong></a>.</p>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#q-function\"><strong>Q-function</strong></a>",
         "<strong>Q-function</strong>",
         "<a href=\"#markov_decision_process\"><strong>Markov decision process</strong></a>",
         "<strong>Markov decision process</strong>",
         "<a href=\"#bellman_equation\"><strong>Bellman equation</strong></a>",
         "<strong>Bellman equation</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#q-learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"quantile",
      "definition_text":"Distributing a feature's values into buckets so that each bucket contains the same (or almost the same) number of examples.  For example, the following figure divides 44 points into 4 buckets, each of which contains 11 points.  In order for each bucket in the figure to contain the same number of points, some buckets span a different width of x-values.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"quantile\"></a>",
         "<h2 class=\"hide-from-toc\"> quantile</h2>",
         "<p>Each bucket in <a href=\"#quantile_bucketing\"><strong>quantile bucketing</strong></a>.</p>",
         "<a href=\"#quantile_bucketing\"><strong>quantile bucketing</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#quantile",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"quantile bucketing",
      "definition_text":"An algorithm that implements quantile bucketing on a particular feature in a dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"quantile_bucketing\"></a>",
         "<h2 class=\"hide-from-toc\"> quantile bucketing</h2>",
         "<p>Distributing a feature's values into <a href=\"#bucketing\"><strong>buckets</strong></a> so that each\nbucket contains the same (or almost the same) number of examples.  For example,\nthe following figure divides 44 points into 4 buckets, each of which\ncontains 11 points.  In order for each bucket in the figure to contain the\nsame number of points, some buckets span a different width of x-values.</p>",
         "<a href=\"#bucketing\"><strong>buckets</strong></a>",
         "<strong>buckets</strong>",
         "<p>\n<img alt=\"40 data\npoints divided into 4 buckets of 11 points each. Some of the buckets contain\na wider range of feature values than others.\" src=\"/machine-learning/glossary/images/QuantileBucketing.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#quantile_bucketing",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"quantization",
      "definition_text":"A TensorFlow Operation that implements a queue data structure. Typically used in I/O.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"quantization\"></a>",
         "<h2 class=\"hide-from-toc\"> quantization</h2>",
         "<p>An algorithm that implements <a href=\"#quantile_bucketing\"><strong>quantile bucketing</strong></a> on\na particular <a href=\"#feature\"><strong>feature</strong></a> in a <a href=\"#data_set\"><strong>dataset</strong></a>.</p>",
         "<a href=\"#quantile_bucketing\"><strong>quantile bucketing</strong></a>",
         "<strong>quantile bucketing</strong>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<a href=\"#data_set\"><strong>dataset</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#quantization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"queue",
      "definition_text":"An ensemble approach to finding the decision tree that best fits the training data by creating many decision trees and then determining the \"average\" one. The \"random\" part of the term refers to building each of the decision trees from a random selection of features; the \"forest\" refers to the set of decision trees.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"queue\"></a>",
         "<h2 class=\"hide-from-toc\"> queue</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A TensorFlow <a href=\"#Operation\"><strong>Operation</strong></a> that implements a queue data\nstructure. Typically\nused in I/O.</p>",
         "<a href=\"#Operation\"><strong>Operation</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#queue",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"random forest",
      "definition_text":"In reinforcement learning, a policy that chooses an action at random.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"random_forest\"></a>",
         "<h2 class=\"hide-from-toc\"> random forest</h2>",
         "<p>An ensemble approach to finding the <a href=\"#decision_tree\"><strong>decision tree</strong></a> that\nbest fits the training data by creating many decision trees and then\ndetermining the \"average\" one. The \"random\" part of the term refers to\nbuilding each of the decision trees from a random selection of features;\nthe \"forest\" refers to the set of decision trees.</p>",
         "<a href=\"#decision_tree\"><strong>decision tree</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#random_forest",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"random policy",
      "definition_text":"The ordinal position of a class in a machine learning problem that categorizes classes from highest to lowest. For example, a behavior ranking system could rank a dog's rewards from highest (a steak) to lowest (wilted kale).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"random_policy\"></a>",
         "<h2 class=\"hide-from-toc\"> random policy</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, a <a href=\"#policy\"><strong>policy</strong></a> that chooses an\n<a href=\"#action\"><strong>action</strong></a> at random.</p>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#action\"><strong>action</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#random_policy",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"rank ordinality",
      "definition_text":"The number of dimensions in a Tensor. For instance, a scalar has rank 0, a vector has rank 1, and a matrix has rank 2.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"rank_ordinality\"></a>",
         "<h2 class=\"hide-from-toc\"> rank (ordinality)</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#rank_ordinality",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"rank Tensor",
      "definition_text":"A human who provides labels in examples. Sometimes called an \"annotator.\"",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"rank_Tensor\"></a>",
         "<h2 class=\"hide-from-toc\"> rank (Tensor)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>The number of dimensions in a <a href=\"#tensor\"><strong>Tensor</strong></a>. For instance,\na scalar has rank 0, a vector has rank 1, and a matrix has rank 2.</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>",
         "<strong>Tensor</strong>",
         "<p>Not to be confused with <a href=\"#rank_ordinality\"><strong>rank (ordinality)</strong></a>.</p>",
         "<a href=\"#rank_ordinality\"><strong>rank (ordinality)</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#rank_Tensor",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"rater",
      "definition_text":"A metric for classification models that answers the following question: Out of all the possible positive labels, how many did the model correctly identify? That is:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"rater\"></a>",
         "<h2 class=\"hide-from-toc\"> rater</h2>",
         "<p>A human who provides <a href=\"#label\"><strong>labels</strong></a> in <a href=\"#example\"><strong>examples</strong></a>.\nSometimes called an \"annotator.\"</p>",
         "<a href=\"#label\"><strong>labels</strong></a>",
         "<strong>labels</strong>",
         "<a href=\"#example\"><strong>examples</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#rater",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"recall",
      "definition_text":"Recall=True PositivesTrue Positives+False Negatives",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"recall\"></a>",
         "<h2 class=\"hide-from-toc\"> recall</h2>",
         "<p>A metric for <a href=\"#classification_model\"><strong>classification models</strong></a> that answers\nthe following question: Out of all the possible positive labels, how many\ndid the model correctly identify? That is:</p>",
         "<a href=\"#classification_model\"><strong>classification models</strong></a>",
         "<strong>classification models</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#recall",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"recommendation system",
      "definition_text":"A system that selects for each user a relatively small set of desirable items from a large corpus. For example, a video recommendation system might recommend two videos from a corpus of 100,000 videos, selecting Casablanca and The Philadelphia Story for one user, and Wonder Woman and Black Panther for another. A video recommendation system might base its recommendations on factors such as:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"recommendation_system\"></a>",
         "<h2 class=\"hide-from-toc\"> recommendation system</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>A system that selects for each user a relatively small set of desirable\n<a href=\"#items\"><strong>items</strong></a> from a large corpus.\nFor example, a video recommendation system might recommend two videos\nfrom a corpus of 100,000 videos, selecting <em>Casablanca</em> and\n<em>The Philadelphia Story</em> for one user, and <em>Wonder Woman</em> and\n<em>Black Panther</em> for another. A video recommendation system might\nbase its recommendations on factors such as:</p>",
         "<a href=\"#items\"><strong>items</strong></a>",
         "<strong>items</strong>",
         "<em>Casablanca</em>",
         "<em>The Philadelphia Story</em>",
         "<em>Wonder Woman</em>",
         "<em>Black Panther</em>",
         "<ul>\n<li>Movies that similar users have rated or watched.</li>\n<li>Genre, directors, actors, target demographic...</li>\n</ul>",
         "<li>Movies that similar users have rated or watched.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#recommendation_system",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ReLU",
      "definition_text":"An activation function with the following rules:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ReLU\"></a>",
         "<h2 class=\"hide-from-toc\"> Rectified Linear Unit (ReLU)</h2>",
         "<p>An <a href=\"#activation_function\"><strong>activation function</strong></a> with the following rules:</p>",
         "<a href=\"#activation_function\"><strong>activation function</strong></a>",
         "<strong>activation function</strong>",
         "<ul>\n<li>If input is negative or zero, output is 0.</li>\n<li>If input is positive, output is equal to input.</li>\n</ul>",
         "<li>If input is negative or zero, output is 0.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ReLU",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"recurrent neural network",
      "definition_text":"A neural network that is intentionally run multiple times, where parts of each run feed into the next run. Specifically, hidden layers from the previous run provide part of the input to the same hidden layer in the next run. Recurrent neural networks are particularly useful for evaluating sequences, so that the hidden layers can learn from previous runs of the neural network on earlier parts of the sequence.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"recurrent_neural_network\"></a>",
         "<h2 class=\"hide-from-toc\"> recurrent neural network </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>A <a href=\"#neural_network\"><strong>neural network</strong></a> that is intentionally run multiple\ntimes, where parts of each run feed into the next run. Specifically,\nhidden layers from the previous run provide part of the\ninput to the same hidden layer in the next run. Recurrent neural networks\nare particularly useful for evaluating sequences, so that the hidden layers\ncan learn from previous runs of the neural network on earlier parts of\nthe sequence.</p>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<p>For example, the following figure shows a recurrent neural network that\nruns four times. Notice that the values learned in the hidden layers from\nthe first run become part of the input to the same hidden layers in\nthe second run. Similarly, the values learned in the hidden layer on the\nsecond run become part of the input to the same hidden layer in the\nthird run. In this way, the recurrent neural network gradually trains and\npredicts the meaning of the entire sequence rather than just the meaning\nof individual words.</p>",
         "<p>\n<img alt=\"An RNN that runs four times to process four input words.\" height=\"500\" src=\"/machine-learning/glossary/images/RNN.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#recurrent_neural_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"regression model",
      "definition_text":"A type of model that outputs continuous (typically, floating-point) values. Compare with classification models, which output discrete values, such as \"day lily\" or \"tiger lily.\"",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"regression_model\"></a>",
         "<h2 class=\"hide-from-toc\"> regression model</h2>",
         "<p>A type of model that outputs continuous (typically, floating-point) values.\nCompare with <a href=\"#classification_model\"><strong>classification models</strong></a>, which\noutput discrete values, such as \"day lily\" or \"tiger lily.\"</p>",
         "<a href=\"#classification_model\"><strong>classification models</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#regression_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"regularization",
      "definition_text":"The penalty on a model's complexity. Regularization helps prevent overfitting. Different kinds of regularization include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"regularization\"></a>",
         "<h2 class=\"hide-from-toc\"> regularization</h2>",
         "<p>The penalty on a model's complexity. Regularization helps prevent\n<a href=\"#overfitting\"><strong>overfitting</strong></a>. Different kinds of regularization include:</p>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>",
         "<strong>overfitting</strong>",
         "<ul>\n<li><a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a></li>\n<li><a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a></li>\n<li><a href=\"#dropout_regularization\"><strong>dropout regularization</strong></a></li>\n<li><a href=\"#early_stopping\"><strong>early stopping</strong></a> (this is not a formal\nregularization method, but can effectively limit overfitting)</li>\n</ul>",
         "<li><a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a></li>",
         "<a href=\"#L1_regularization\"><strong>L<sub>1</sub> regularization</strong></a>",
         "<strong>L<sub>1</sub> regularization</strong>",
         "<sub>1</sub>",
         "<li><a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a></li>",
         "<a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>",
         "<strong>L<sub>2</sub> regularization</strong>",
         "<sub>2</sub>",
         "<li><a href=\"#dropout_regularization\"><strong>dropout regularization</strong></a></li>",
         "<a href=\"#dropout_regularization\"><strong>dropout regularization</strong></a>",
         "<strong>dropout regularization</strong>",
         "<li><a href=\"#early_stopping\"><strong>early stopping</strong></a> (this is not a formal\nregularization method, but can effectively limit overfitting)</li>",
         "<a href=\"#early_stopping\"><strong>early stopping</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#regularization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"regularization rate",
      "definition_text":"A scalar value, represented as lambda, specifying the relative importance of the regularization function. The following simplified loss equation shows the regularization rate's influence:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"regularization_rate\"></a>",
         "<h2 class=\"hide-from-toc\"> regularization rate</h2>",
         "<p>A scalar value, represented as lambda, specifying the relative importance\nof the regularization function. The following simplified <a href=\"#loss\"><strong>loss</strong></a>\nequation shows the regularization rate's influence:</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<div>\n$$\\text{minimize(loss function + }\\lambda\\text{(regularization function))}$$\n</div>",
         "<p>Raising the regularization rate reduces <a href=\"#overfitting\"><strong>overfitting</strong></a>\nbut may make the model less <a href=\"#accuracy\"><strong>accurate</strong></a>.</p>",
         "<a href=\"#overfitting\"><strong>overfitting</strong></a>",
         "<strong>overfitting</strong>",
         "<a href=\"#accuracy\"><strong>accurate</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#regularization_rate",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"reinforcement learning",
      "definition_text":"A family of algorithms that learn an optimal policy, whose goal is to maximize return when interacting with an environment. For example, the ultimate reward of most games is victory. Reinforcement learning systems can become expert at playing complex games by evaluating sequences of previous game moves that ultimately led to wins and sequences that ultimately led to losses.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"reinforcement_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> reinforcement learning (RL)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>A family of algorithms that learn an optimal <a href=\"#policy\"><strong>policy</strong></a>, whose goal\nis to maximize <a href=\"#return\"><strong>return</strong></a> when interacting with\nan <a href=\"#environment\"><strong>environment</strong></a>.\nFor example, the ultimate reward of most games is victory.\nReinforcement learning systems can become expert at playing complex\ngames by evaluating sequences of previous game moves that ultimately\nled to wins and sequences that ultimately led to losses.</p>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#return\"><strong>return</strong></a>",
         "<strong>return</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#reinforcement_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"replay buffer",
      "definition_text":"In DQN-like algorithms, the memory used by the agent to store state transitions for use in experience replay.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"replay_buffer\"></a>",
         "<h2 class=\"hide-from-toc\"> replay buffer</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In <a href=\"#deep_q-network\"><strong>DQN</strong></a>-like algorithms, the memory used by the agent\nto store state transitions for use in\n<a href=\"#experience_replay\"><strong>experience replay</strong></a>.</p>",
         "<a href=\"#deep_q-network\"><strong>DQN</strong></a>",
         "<strong>DQN</strong>",
         "<a href=\"#experience_replay\"><strong>experience replay</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#replay_buffer",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"reporting bias",
      "definition_text":"The fact that the frequency with which people write about actions, outcomes, or properties is not a reflection of their real-world frequencies or the degree to which a property is characteristic of a class of individuals. Reporting bias can influence the composition of data that machine learning systems learn from.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"reporting_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> reporting bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>The fact that the frequency with which people write about actions,\noutcomes, or properties is not a reflection of their real-world\nfrequencies or the degree to which a property is characteristic\nof a class of individuals. Reporting bias can influence the composition\nof data that machine learning systems learn from.</p>",
         "<p>For example, in books, the word <em>laughed</em> is more prevalent than\n<em>breathed</em>.  A machine learning model that estimates the relative frequency of\nlaughing and breathing from a book corpus would probably determine\nthat laughing is more common than breathing.</p>",
         "<em>laughed</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#reporting_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"representation",
      "definition_text":"The process of mapping data to useful features.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"representation\"></a>",
         "<h2 class=\"hide-from-toc\"> representation</h2>",
         "<p>The process of mapping data to useful <a href=\"#feature\"><strong>features</strong></a>.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#representation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"re-ranking",
      "definition_text":"The final stage of a recommendation system, during which scored items may be re-graded according to some other (typically, non-ML) algorithm. Re-ranking evaluates the list of items generated by the scoring phase, taking actions such as:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"re-ranking\"></a>",
         "<h2 class=\"hide-from-toc\"> re-ranking</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>The final stage of a <a href=\"#recommendation_system\"><strong>recommendation system</strong></a>,\nduring which scored items may be re-graded according to some other\n(typically, non-ML) algorithm. Re-ranking evaluates the list of items\ngenerated by the <a href=\"#scoring\"><strong>scoring</strong></a> phase, taking actions such as:</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation system</strong></a>",
         "<strong>recommendation system</strong>",
         "<a href=\"#scoring\"><strong>scoring</strong></a>",
         "<strong>scoring</strong>",
         "<ul>\n<li>Eliminating items that the user has already purchased.</li>\n<li>Boosting the score of fresher items.</li>\n</ul>",
         "<li>Eliminating items that the user has already purchased.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#re-ranking",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"return",
      "definition_text":"In reinforcement learning, given a certain policy and a certain state, the return is the sum of all rewards that the agent expects to receive when following the policy from the state to the end of the episode. The agent accounts for the delayed nature of expected rewards by discounting rewards according to the state transitions required to obtain the reward.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"return\"></a>",
         "<h2 class=\"hide-from-toc\"> return</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, given a certain policy and a certain state, the\nreturn is the sum of all <a href=\"#reward\"><strong>rewards</strong></a> that the <a href=\"#agent\"><strong>agent</strong></a>\nexpects to receive when following the <a href=\"#policy\"><strong>policy</strong></a> from the\n<a href=\"#state\"><strong>state</strong></a> to the end of the <a href=\"#episode\"><strong>episode</strong></a>. The agent\naccounts for the delayed nature of expected rewards by discounting rewards\naccording to the state transitions required to obtain the reward.</p>",
         "<a href=\"#reward\"><strong>rewards</strong></a>",
         "<strong>rewards</strong>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#policy\"><strong>policy</strong></a>",
         "<strong>policy</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#episode\"><strong>episode</strong></a>",
         "<strong>episode</strong>",
         "<p>Therefore, if the discount factor is \\(\\gamma\\), and \\(r_0, \\ldots, r_{N}\\)\ndenote the rewards until the end of the episode, then the return calculation\nis as follows:</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#return",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"reward",
      "definition_text":"In reinforcement learning, the numerical result of taking an action in a state, as defined by the environment.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"reward\"></a>",
         "<h2 class=\"hide-from-toc\"> reward</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the numerical result of taking an\n<a href=\"#action\"><strong>action</strong></a> in a <a href=\"#state\"><strong>state</strong></a>, as defined by\nthe <a href=\"#environment\"><strong>environment</strong></a>.</p>",
         "<a href=\"#action\"><strong>action</strong></a>",
         "<strong>action</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#environment\"><strong>environment</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#reward",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ridge regularization",
      "definition_text":"Synonym for L2 regularization. The term ridge regularization is more frequently used in pure statistics contexts, whereas L2 regularization is used more often in machine learning.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ridge_regularization\"></a>",
         "<h2 class=\"hide-from-toc\"> ridge regularization</h2>",
         "<p>Synonym for <a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>. The term\n<strong>ridge regularization</strong> is more frequently used in pure statistics\ncontexts, whereas <strong>L<sub>2</sub> regularization</strong> is used more often\nin machine learning.</p>",
         "<a href=\"#L2_regularization\"><strong>L<sub>2</sub> regularization</strong></a>",
         "<strong>L<sub>2</sub> regularization</strong>",
         "<sub>2</sub>",
         "<strong>ridge regularization</strong>",
         "<strong>L<sub>2</sub> regularization</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ridge_regularization",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"RNN",
      "definition_text":"Abbreviation for recurrent neural networks.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"RNN\"></a>",
         "<h2 class=\"hide-from-toc\"> RNN</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>Abbreviation for <a href=\"#recurrent_neural_network\"><strong>recurrent neural networks</strong></a>.</p>",
         "<a href=\"#recurrent_neural_network\"><strong>recurrent neural networks</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#RNN",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"ROC",
      "definition_text":"A curve of true positive rate vs. false positive rate at different classification thresholds. See also AUC.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"ROC\"></a>",
         "<h2 class=\"hide-from-toc\"> ROC (receiver operating characteristic) Curve</h2>",
         "<p>A curve of <a href=\"#TP_rate\"><strong>true positive rate</strong></a> vs.\n<a href=\"#FP_rate\"><strong>false positive rate</strong></a> at different\n<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>. See also\n<a href=\"#AUC\"><strong>AUC</strong></a>.</p>",
         "<a href=\"#TP_rate\"><strong>true positive rate</strong></a>",
         "<strong>true positive rate</strong>",
         "<a href=\"#FP_rate\"><strong>false positive rate</strong></a>",
         "<strong>false positive rate</strong>",
         "<a href=\"#classification_threshold\"><strong>classification thresholds</strong></a>",
         "<strong>classification thresholds</strong>",
         "<a href=\"#AUC\"><strong>AUC</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#ROC",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"root directory",
      "definition_text":"The directory you specify for hosting subdirectories of the TensorFlow checkpoint and events files of multiple models.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"root_directory\"></a>",
         "<h2 class=\"hide-from-toc\"> root directory</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#root_directory",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"RMSE",
      "definition_text":"The square root of the Mean Squared Error.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"RMSE\"></a>",
         "<h2 class=\"hide-from-toc\"> Root Mean Squared Error (RMSE)</h2>",
         "<p>The square root of the <a href=\"#MSE\"><strong>Mean Squared Error</strong></a>.</p>",
         "<a href=\"#MSE\"><strong>Mean Squared Error</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#RMSE",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"rotational invariance",
      "definition_text":"In an image classification problem, an algorithm's ability to successfully classify images even when the orientation of the image changes. For example, the algorithm can still identify a tennis racket whether it is pointing up, sideways, or down. Note that rotational invariance is not always desirable; for example, an upside-down 9 should not be classified as a 9.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"rotational_invariance\"></a>",
         "<h2 class=\"hide-from-toc\"> rotational invariance</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In an image classification problem, an algorithm's ability to successfully\nclassify images even when the orientation of the image changes. For example,\nthe algorithm can still identify a tennis racket whether it is pointing up,\nsideways, or down. Note that rotational invariance is not always desirable;\nfor example, an upside-down 9 should not be classified as a 9.</p>",
         "<p>See also <a href=\"#translational_invariance\"><strong>translational invariance</strong></a> and\n<a href=\"#size_invariance\"><strong>size invariance</strong></a>.</p>",
         "<a href=\"#translational_invariance\"><strong>translational invariance</strong></a>",
         "<strong>translational invariance</strong>",
         "<a href=\"#size_invariance\"><strong>size invariance</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#rotational_invariance",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sampling bias",
      "definition_text":"See selection bias.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sampling_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> sampling bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>See <a href=\"#selection_bias\"><strong>selection bias</strong></a>.</p>",
         "<a href=\"#selection_bias\"><strong>selection bias</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sampling_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"SavedModel",
      "definition_text":"The recommended format for saving and recovering TensorFlow models. SavedModel is a language-neutral, recoverable serialization format, which enables higher-level systems and tools to produce, consume, and transform TensorFlow models.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"SavedModel\"></a>",
         "<h2 class=\"hide-from-toc\"> SavedModel</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>The recommended format for saving and recovering TensorFlow models. SavedModel\nis a language-neutral, recoverable serialization format, which enables\nhigher-level systems and tools to produce, consume, and transform TensorFlow\nmodels.</p>",
         "<p>See the <a href=\"https://www.tensorflow.org/guide/saved_model\" target=\"T\">Saving and Restoring chapter</a>\nin the TensorFlow Programmer's Guide for complete details.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#SavedModel",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Saver",
      "definition_text":"A TensorFlow object responsible for saving model checkpoints.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Saver\"></a>",
         "<h2 class=\"hide-from-toc\"> Saver</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/Saver\" target=\"T\">TensorFlow object</a>\nresponsible for saving model checkpoints.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Saver",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"scalar",
      "definition_text":"A single number or a single string that can be represented as a tensor of rank 0. For example, the following lines of code each create one scalar in TensorFlow:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"scalar\"></a>",
         "<h2 class=\"hide-from-toc\"> scalar</h2>",
         "<p>A single number or a single string that can be represented as a\n<a href=\"#tensor\"><strong>tensor</strong></a> of <a href=\"#rank\"><strong>rank</strong></a> 0. For example, the following\nlines of code each create one scalar in TensorFlow:</p>",
         "<a href=\"#tensor\"><strong>tensor</strong></a>",
         "<strong>tensor</strong>",
         "<a href=\"#rank\"><strong>rank</strong></a>",
         "<strong>rank</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#scalar",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"scaling",
      "definition_text":"A commonly used practice in feature engineering to tame a feature's range of values to match the range of other features in the dataset. For example, suppose that you want all floating-point features in the dataset to have a range of 0 to 1. Given a particular feature's range of 0 to 500, you could scale that feature by dividing each value by 500.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"scaling\"></a>",
         "<h2 class=\"hide-from-toc\"> scaling</h2>",
         "<p>A commonly used practice in <a href=\"#feature_engineering\"><strong>feature engineering</strong></a>\nto tame a feature's range of values to match the range of other features in\nthe dataset. For example, suppose that you want all floating-point features\nin the dataset to have a range of 0 to 1. Given a particular feature's\nrange of 0 to 500, you could scale that feature by dividing each value\nby 500.</p>",
         "<a href=\"#feature_engineering\"><strong>feature engineering</strong></a>",
         "<strong>feature engineering</strong>",
         "<p>See also <a href=\"#normalization\"><strong>normalization</strong></a>.</p>",
         "<a href=\"#normalization\"><strong>normalization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#scaling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"scikit-learn",
      "definition_text":"A popular open-source machine learning platform. See www.scikit-learn.org.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"scikit-learn\"></a>",
         "<h2 class=\"hide-from-toc\"> scikit-learn</h2>",
         "<p>A popular open-source machine learning platform. See\n<a href=\"http://www.scikit-learn.org/\" target=\"T\">www.scikit-learn.org</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#scikit-learn",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"scoring",
      "definition_text":"The part of a recommendation system that provides a value or ranking for each item produced by the candidate generation phase.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"scoring\"></a>",
         "<h2 class=\"hide-from-toc\"> scoring</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>The part of a <a href=\"#recommendation_system\"><strong>recommendation system</strong></a> that\nprovides a value or ranking for each item produced by the\n<a href=\"#candidate_generation\"><strong>candidate generation</strong></a> phase.</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation system</strong></a>",
         "<strong>recommendation system</strong>",
         "<a href=\"#candidate_generation\"><strong>candidate generation</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#scoring",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"selection bias",
      "definition_text":"Errors in conclusions drawn from sampled data due to a selection process that generates systematic differences between samples observed in the data and those not observed.  The following forms of selection bias exist:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"selection_bias\"></a>",
         "<h2 class=\"hide-from-toc\"> selection bias </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>Errors in conclusions drawn from sampled data due to a selection process\nthat generates systematic differences between samples observed in the data\nand those not observed.  The following forms of selection bias exist:</p>",
         "<ul>\n<li><strong>coverage bias</strong>: The population represented in the dataset does not\nmatch the population that the machine learning model is making\npredictions about.</li>\n<li><strong>sampling bias</strong>: Data is not collected randomly from the target group.</li>\n<li><strong>non-response bias</strong> (also called <strong>participation bias</strong>): Users from\ncertain groups opt-out of surveys at different rates than users from\nother groups.</li>\n</ul>",
         "<li><strong>coverage bias</strong>: The population represented in the dataset does not\nmatch the population that the machine learning model is making\npredictions about.</li>",
         "<strong>coverage bias</strong>",
         "<li><strong>sampling bias</strong>: Data is not collected randomly from the target group.</li>",
         "<strong>sampling bias</strong>",
         "<li><strong>non-response bias</strong> (also called <strong>participation bias</strong>): Users from\ncertain groups opt-out of surveys at different rates than users from\nother groups.</li>",
         "<strong>non-response bias</strong>",
         "<strong>participation bias</strong>",
         "<p>For example, suppose you are creating a machine learning model that predicts\npeople's enjoyment of a movie.  To collect training data,\nyou hand out a survey to everyone in the front row of a theater\nshowing the movie.  Offhand, this may sound like a reasonable way\nto gather a dataset; however, this form of data collection may\nintroduce the following forms of selection bias:</p>",
         "<ul>\n<li>coverage bias: By sampling from a population who chose to see\nthe movie, your model's predictions may not generalize to people\nwho did not already express that level of interest in the movie.</li>\n<li>sampling bias: Rather than randomly sampling from the\nintended population (all the people at the movie), you sampled only\nthe people in the front row. It is possible that the people sitting\nin the front row were more interested in the movie than those in\nother rows.</li>\n<li>non-response bias: In general, people with strong opinions tend\nto respond to optional surveys more frequently than people with mild\nopinions.  Since the movie survey is optional, the responses\nare more likely to form a\n<a href=\"https://wikipedia.org/wiki/Multimodal_distribution\" target=\"T\">bimodal distribution</a>\nthan a normal (bell-shaped) distribution.</li>\n</ul>",
         "<li>coverage bias: By sampling from a population who chose to see\nthe movie, your model's predictions may not generalize to people\nwho did not already express that level of interest in the movie.</li>",
         "<li>sampling bias: Rather than randomly sampling from the\nintended population (all the people at the movie), you sampled only\nthe people in the front row. It is possible that the people sitting\nin the front row were more interested in the movie than those in\nother rows.</li>",
         "<li>non-response bias: In general, people with strong opinions tend\nto respond to optional surveys more frequently than people with mild\nopinions.  Since the movie survey is optional, the responses\nare more likely to form a\n<a href=\"https://wikipedia.org/wiki/Multimodal_distribution\" target=\"T\">bimodal distribution</a>\nthan a normal (bell-shaped) distribution.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#selection_bias",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"semi-supervised learning",
      "definition_text":"Training a model on data where some of the training examples have labels but others don\u2019t. One technique for semi-supervised learning is to infer labels for the unlabeled examples, and then to train on the inferred labels to create a new model. Semi-supervised learning can be useful if labels are expensive to obtain but unlabeled examples are plentiful.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"semi-supervised_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> semi-supervised learning</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#semi-supervised_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sensitive attribute",
      "definition_text":"Using statistical or machine learning algorithms to determine a group's overall attitude\u2014positive or negative\u2014toward a service, product, organization, or topic. For example, using natural language understanding, an algorithm could perform sentiment analysis on the textual feedback from a university course to determine the degree to which students generally liked or disliked the course.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sensitive_attribute\"></a>",
         "<h2 class=\"hide-from-toc\"> sensitive attribute</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sensitive_attribute",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sentiment analysis",
      "definition_text":"A model whose inputs have a sequential dependence. For example, predicting the next video watched from a sequence of previously watched videos.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sentiment_analysis\"></a>",
         "<h2 class=\"hide-from-toc\"> sentiment analysis</h2>",
         "<p>Using statistical or machine learning algorithms to determine a group's\noverall attitude\u2014positive or negative\u2014toward a service, product,\norganization, or topic. For example, using\n<a href=\"#natural_language_understanding\"><strong>natural language understanding</strong></a>,\nan algorithm could perform sentiment analysis on the textual feedback\nfrom a university course to determine the degree to which students\ngenerally liked or disliked the course.</p>",
         "<a href=\"#natural_language_understanding\"><strong>natural language understanding</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sentiment_analysis",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sequence model",
      "definition_text":"A synonym for inferring.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sequence_model\"></a>",
         "<h2 class=\"hide-from-toc\"> sequence model</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sequence_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"serving",
      "definition_text":"An object that encapsulates the state of the TensorFlow runtime and runs all or part of a graph. When using the low-level TensorFlow APIs, you instantiate and manage one or more tf.session objects directly. When using the Estimators API, Estimators instantiate session objects for you.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"serving\"></a>",
         "<h2 class=\"hide-from-toc\"> serving</h2>",
         "<p>A synonym for <a href=\"#inference\"><strong>inferring</strong></a>.</p>",
         "<a href=\"#inference\"><strong>inferring</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#serving",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"session",
      "definition_text":"The number of elements in each dimension of a tensor. The shape is represented as a list of integers. For example, the following two-dimensional tensor has a shape of [3,4]:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"session\"></a>",
         "<h2 class=\"hide-from-toc\"> session (tf.session)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An object that encapsulates the state of the TensorFlow runtime\nand runs all or part of a <a href=\"#graph\"><strong>graph</strong></a>. When using the\nlow-level TensorFlow APIs, you instantiate and manage one or more\n<code dir=\"ltr\" translate=\"no\">tf.session</code> objects directly. When using the Estimators API,\nEstimators instantiate session objects for you.</p>",
         "<a href=\"#graph\"><strong>graph</strong></a>",
         "<strong>graph</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#session",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"shape",
      "definition_text":"A function that maps logistic or multinomial regression output (log odds) to probabilities, returning a value between 0 and 1.  The sigmoid function has the following formula:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"shape\"></a>",
         "<h2 class=\"hide-from-toc\"> shape (Tensor)</h2>",
         "<p>\nThe number of elements in each <b><a href=\"#dimensions\">dimension</a></b> of a\ntensor. The shape is represented as a list of integers. For example,\nthe following two-dimensional tensor has a shape of [3,4]:\n</p>",
         "<b><a href=\"#dimensions\">dimension</a></b>",
         "<a href=\"#dimensions\">dimension</a>",
         "<pre class=\"prettyprint\" dir=\"ltr\" translate=\"no\">\n[[5, 7, 6, 4],\n [2, 9, 4, 8],\n [3, 6, 5, 1]]\n</pre>",
         "<p>TensorFlow uses row-major (C-style) format to represent the order of\ndimensions, which is why the shape in TensorFlow is [3,4] rather than\n[4,3]. In other words, in a two-dimensional TensorFlow Tensor, the shape\nis [<em>number of rows</em>, <em>number of columns</em>].</p>",
         "<em>number of rows</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#shape",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sigmoid function",
      "definition_text":"In clustering algorithms, the metric used to determine how alike (how similar) any two examples are.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sigmoid_function\"></a>",
         "<h2 class=\"hide-from-toc\"> sigmoid function</h2>",
         "<p>A function that maps logistic or multinomial regression output (log odds) to\nprobabilities, returning a value between 0 and 1.  The sigmoid function has\nthe following formula:</p>",
         "<div>\n$$y = \\frac{1}{1 + e^{-\\sigma}}$$\n</div>",
         "<p>where \\(\\sigma\\) in <a href=\"#logistic_regression\"><strong>logistic regression</strong></a> problems\nis simply:</p>",
         "<a href=\"#logistic_regression\"><strong>logistic regression</strong></a>",
         "<strong>logistic regression</strong>",
         "<div>\n$$\\sigma = b + w_1x_1 + w_2x_2 + \u2026 w_nx_n$$\n</div>",
         "<p>In other words, the sigmoid function converts \\(\\sigma\\) into a probability\nbetween 0 and 1.</p>",
         "<p>In some <a href=\"#neural_network\"><strong>neural networks</strong></a>, the sigmoid function acts as\nthe <a href=\"#activation_function\"><strong>activation function</strong></a>.</p>",
         "<a href=\"#neural_network\"><strong>neural networks</strong></a>",
         "<strong>neural networks</strong>",
         "<a href=\"#activation_function\"><strong>activation function</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sigmoid_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"similarity measure",
      "definition_text":"In an image classification problem, an algorithm's ability to successfully classify images even when the size of the image changes. For example, the algorithm can still identify a cat whether it consumes 2M pixels or 200K pixels. Note that even the best image classification algorithms still have practical limits on size invariance. For example, an algorithm (or human) is unlikely to correctly classify a cat image consuming only 20 pixels.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"similarity_measure\"></a>",
         "<h2 class=\"hide-from-toc\"> similarity measure</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>In <a href=\"#clustering\"><strong>clustering</strong></a> algorithms, the metric used to determine\nhow alike (how similar) any two examples are.</p>",
         "<a href=\"#clustering\"><strong>clustering</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#similarity_measure",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"size invariance",
      "definition_text":"In unsupervised machine learning, a category of algorithms that perform a preliminary similarity analysis on examples. Sketching algorithms use a  locality-sensitive hash function to identify points that are likely to be similar, and then group them into buckets.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"size_invariance\"></a>",
         "<h2 class=\"hide-from-toc\"> size invariance</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In an image classification problem, an algorithm's ability to successfully\nclassify images even when the size of the image changes. For example,\nthe algorithm can still identify a\ncat whether it consumes 2M pixels or 200K pixels. Note that even the best\nimage classification algorithms still have practical limits on size invariance.\nFor example, an algorithm (or human) is unlikely to correctly classify a\ncat image consuming only 20 pixels.</p>",
         "<p>See also <a href=\"#translational_invariance\"><strong>translational invariance</strong></a> and\n<a href=\"#rotational_invariance\"><strong>rotational invariance</strong></a>.</p>",
         "<a href=\"#translational_invariance\"><strong>translational invariance</strong></a>",
         "<strong>translational invariance</strong>",
         "<a href=\"#rotational_invariance\"><strong>rotational invariance</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#size_invariance",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sketching",
      "definition_text":"A function that provides probabilities for each possible class in a multi-class classification model. The probabilities add up to exactly 1.0. For example, softmax might determine that the probability of a particular image being a dog at 0.9, a cat at 0.08, and a horse at 0.02. (Also called full softmax.)",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sketching\"></a>",
         "<h2 class=\"hide-from-toc\"> sketching</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>In <a href=\"#unsupervised_machine_learning\"><strong>unsupervised machine learning</strong></a>,\na category of algorithms that perform a preliminary similarity analysis\non examples. Sketching algorithms use a\n<a href=\"https://wikipedia.org/wiki/Locality-sensitive_hashing\" target=\"T\">\nlocality-sensitive hash function</a>\nto identify points that are likely to be similar, and then group\nthem into buckets.</p>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised machine learning</strong></a>",
         "<strong>unsupervised machine learning</strong>",
         "<a href=\"https://wikipedia.org/wiki/Locality-sensitive_hashing\" target=\"T\">\nlocality-sensitive hash function</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sketching",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"softmax",
      "definition_text":"Feature vector whose values are predominately zero or empty. For example, a vector containing a single 1 value and a million 0 values is sparse. As another example, words in a search query could also be a sparse feature\u2014there are many possible words in a given language, but only a few of them occur in a given query.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"softmax\"></a>",
         "<h2 class=\"hide-from-toc\"> softmax</h2>",
         "<p>A function that provides probabilities for each possible class in a\n<a href=\"#multi-class\"><strong>multi-class classification model</strong></a>. The probabilities add up\nto exactly 1.0. For example, softmax might determine that the probability of a\nparticular image being a dog at 0.9, a cat at 0.08, and a horse at 0.02.\n(Also called <strong>full softmax</strong>.)</p>",
         "<a href=\"#multi-class\"><strong>multi-class classification model</strong></a>",
         "<strong>multi-class classification model</strong>",
         "<strong>full softmax</strong>",
         "<p>Contrast with <a href=\"#candidate_sampling\"><strong>candidate sampling</strong></a>.</p>",
         "<a href=\"#candidate_sampling\"><strong>candidate sampling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#softmax",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sparse features",
      "definition_text":"A representation of a tensor that only stores nonzero elements.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sparse_features\"></a>",
         "<h2 class=\"hide-from-toc\"> sparse feature</h2>",
         "<p><a href=\"#feature\"><strong>Feature</strong></a> vector whose values are predominately zero or empty.\nFor example, a vector containing a single 1 value and a million 0 values is\nsparse. As another example, words in a search query could also be a\nsparse feature\u2014there are many possible words in a given language, but only a\nfew of them occur in a given query.</p>",
         "<a href=\"#feature\"><strong>Feature</strong></a>",
         "<strong>Feature</strong>",
         "<p>Contrast with <a href=\"#dense_feature\"><strong>dense feature</strong></a>.</p>",
         "<a href=\"#dense_feature\"><strong>dense feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sparse_features",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sparse representation",
      "definition_text":"A vector whose values are mostly zeroes. See also sparse feature.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sparse_representation\"></a>",
         "<h2 class=\"hide-from-toc\"> sparse representation</h2>",
         "<p>A <a href=\"#representation\"><strong>representation</strong></a> of a tensor that only stores\nnonzero elements.</p>",
         "<a href=\"#representation\"><strong>representation</strong></a>",
         "<strong>representation</strong>",
         "<p>For example, the English language consists of about a million words.\nConsider two ways to represent a count of the words used in one English\nsentence:</p>",
         "<ul>\n<li>A <strong>dense representation</strong> of this sentence\nmust set an integer for all one million cells, placing a 0 in most\nof them, and a low integer into a few of them.</li>\n<li>A sparse representation of this sentence stores only those cells\nsymbolizing a word actually in the sentence. So, if the sentence\ncontained only 20 unique words, then the sparse representation for\nthe sentence would store an integer in only 20 cells.</li>\n</ul>",
         "<li>A <strong>dense representation</strong> of this sentence\nmust set an integer for all one million cells, placing a 0 in most\nof them, and a low integer into a few of them.</li>",
         "<strong>dense representation</strong>",
         "<li>A sparse representation of this sentence stores only those cells\nsymbolizing a word actually in the sentence. So, if the sentence\ncontained only 20 unique words, then the sparse representation for\nthe sentence would store an integer in only 20 cells.</li>",
         "<p>For example, consider two ways to represent the sentence, \"Dogs wag tails.\"\nAs the following tables show, the dense representation consumes\nabout a million cells; the sparse representation consumes only 3 cells:</p>",
         "<div id=\"sparse-dense-tables\">\n<table id=\"sparse-table\">\n<caption>Dense Representation</caption>\n<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>a</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>aardvark</td>\n<td>0</td>\n</tr>\n<tr>\n<td>2</td>\n<td>aargh</td>\n<td>0</td>\n</tr>\n<tr>\n<td>3</td>\n<td>aarti</td>\n<td>0</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 140,391 more words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 633,062 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 189,136 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 many more words with an occurrence of 0</strong></td>\n</tr>\n</tbody>\n</table>\n<table id=\"dense-table\">\n<caption>Sparse Representation</caption>\n<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>",
         "<table id=\"sparse-table\">\n<caption>Dense Representation</caption>\n<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>a</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>aardvark</td>\n<td>0</td>\n</tr>\n<tr>\n<td>2</td>\n<td>aargh</td>\n<td>0</td>\n</tr>\n<tr>\n<td>3</td>\n<td>aarti</td>\n<td>0</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 140,391 more words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 633,062 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 189,136 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 many more words with an occurrence of 0</strong></td>\n</tr>\n</tbody>\n</table>",
         "<caption>Dense Representation</caption>",
         "<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>",
         "<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>",
         "<th>Cell Number</th>",
         "<th>Word</th>",
         "<th>Occurrence</th>",
         "<tbody>\n<tr>\n<td>0</td>\n<td>a</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>aardvark</td>\n<td>0</td>\n</tr>\n<tr>\n<td>2</td>\n<td>aargh</td>\n<td>0</td>\n</tr>\n<tr>\n<td>3</td>\n<td>aarti</td>\n<td>0</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 140,391 more words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 633,062 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 189,136 words with an occurrence of 0</strong></td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 many more words with an occurrence of 0</strong></td>\n</tr>\n</tbody>",
         "<tr>\n<td>0</td>\n<td>a</td>\n<td>0</td>\n</tr>",
         "<td>0</td>",
         "<td>a</td>",
         "<td>0</td>",
         "<tr>\n<td>1</td>\n<td>aardvark</td>\n<td>0</td>\n</tr>",
         "<td>1</td>",
         "<td>aardvark</td>",
         "<td>0</td>",
         "<tr>\n<td>2</td>\n<td>aargh</td>\n<td>0</td>\n</tr>",
         "<td>2</td>",
         "<td>aargh</td>",
         "<td>0</td>",
         "<tr>\n<td>3</td>\n<td>aarti</td>\n<td>0</td>\n</tr>",
         "<td>3</td>",
         "<td>aarti</td>",
         "<td>0</td>",
         "<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 140,391 more words with an occurrence of 0</strong></td>\n</tr>",
         "<td colspan=\"3\"><strong>\u2026 140,391 more words with an occurrence of 0</strong></td>",
         "<strong>\u2026 140,391 more words with an occurrence of 0</strong>",
         "<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>",
         "<td>140395</td>",
         "<td>dogs</td>",
         "<td>1</td>",
         "<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 633,062 words with an occurrence of 0</strong></td>\n</tr>",
         "<td colspan=\"3\"><strong>\u2026 633,062 words with an occurrence of 0</strong></td>",
         "<strong>\u2026 633,062 words with an occurrence of 0</strong>",
         "<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>",
         "<td>773458</td>",
         "<td>tails</td>",
         "<td>1</td>",
         "<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 189,136 words with an occurrence of 0</strong></td>\n</tr>",
         "<td colspan=\"3\"><strong>\u2026 189,136 words with an occurrence of 0</strong></td>",
         "<strong>\u2026 189,136 words with an occurrence of 0</strong>",
         "<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>",
         "<td>962594</td>",
         "<td>wag</td>",
         "<td>1</td>",
         "<tr class=\"elided-rows\">\n<td colspan=\"3\"><strong>\u2026 many more words with an occurrence of 0</strong></td>\n</tr>",
         "<td colspan=\"3\"><strong>\u2026 many more words with an occurrence of 0</strong></td>",
         "<strong>\u2026 many more words with an occurrence of 0</strong>",
         "<table id=\"dense-table\">\n<caption>Sparse Representation</caption>\n<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>",
         "<caption>Sparse Representation</caption>",
         "<thead>\n<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>\n</thead>",
         "<tr>\n<th>Cell Number</th>\n<th>Word</th>\n<th>Occurrence</th>\n</tr>",
         "<th>Cell Number</th>",
         "<th>Word</th>",
         "<th>Occurrence</th>",
         "<tbody>\n<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>\n<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>\n<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>\n</tbody>",
         "<tr>\n<td>140395</td>\n<td>dogs</td>\n<td>1</td>\n</tr>",
         "<td>140395</td>",
         "<td>dogs</td>",
         "<td>1</td>",
         "<tr>\n<td>773458</td>\n<td>tails</td>\n<td>1</td>\n</tr>",
         "<td>773458</td>",
         "<td>tails</td>",
         "<td>1</td>",
         "<tr>\n<td>962594</td>\n<td>wag</td>\n<td>1</td>\n</tr>",
         "<td>962594</td>",
         "<td>wag</td>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sparse_representation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sparse vector",
      "definition_text":"The number of elements set to zero (or null) in a vector or matrix divided by the total number of entries in that vector or matrix. For example, consider a 10x10 matrix in which 98 cells contain zero. The calculation of sparsity is as follows:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sparse_vector\"></a>",
         "<h2 class=\"hide-from-toc\"> sparse vector</h2>",
         "<p>A vector whose values are mostly zeroes. See also <a href=\"#sparse_features\"><strong>sparse\nfeature</strong></a>.</p>",
         "<a href=\"#sparse_features\"><strong>sparse\nfeature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sparse_vector",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"sparsity",
      "definition_text":"See pooling.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"sparsity\"></a>",
         "<h2 class=\"hide-from-toc\"> sparsity</h2>",
         "<p>The number of elements set to zero (or null) in a vector or matrix divided\nby the total number of entries in that vector or matrix. For example,\nconsider a 10x10 matrix in which 98 cells contain zero. The calculation of\nsparsity is as follows:</p>",
         "<div>\n$$\n{\\text{sparsity}} =\n\\frac{\\text{98}} {\\text{100}} =\n{\\text{0.98}}\n$$\n</div>",
         "<p><strong>Feature sparsity</strong> refers to the sparsity of a feature vector;\n<strong>model sparsity</strong> refers to the sparsity of the model weights.</p>",
         "<strong>Feature sparsity</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#sparsity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"spatial pooling",
      "definition_text":"The square of the hinge loss.  Squared hinge loss penalizes outliers more harshly than regular hinge loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"spatial_pooling\"></a>",
         "<h2 class=\"hide-from-toc\"> spatial pooling</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>See <a href=\"#pooling\"><strong>pooling</strong></a>.</p>",
         "<a href=\"#pooling\"><strong>pooling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#spatial_pooling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"squared hinge loss",
      "definition_text":"The loss function used in linear regression.  (Also known as L2 Loss.) This function calculates the squares of the difference between a model's predicted value for a labeled example and the actual value of the label. Due to squaring, this loss function amplifies the influence of bad predictions. That is, squared loss reacts more strongly to outliers than L1 loss.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"squared_hinge_loss\"></a>",
         "<h2 class=\"hide-from-toc\"> squared hinge loss</h2>",
         "<p>The square of the <a href=\"#hinge-loss\"><strong>hinge loss</strong></a>.  Squared hinge loss penalizes\noutliers more harshly than regular hinge loss.</p>",
         "<a href=\"#hinge-loss\"><strong>hinge loss</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#squared_hinge_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"squared loss",
      "definition_text":"In reinforcement learning, the parameter values that describe the current configuration of the environment, which the agent uses to choose an action.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"squared_loss\"></a>",
         "<h2 class=\"hide-from-toc\"> squared loss</h2>",
         "<p>The <a href=\"#loss\"><strong>loss</strong></a> function used in\n<a href=\"#linear_regression\"><strong>linear regression</strong></a>.  (Also known as\n<strong>L<sub>2</sub> Loss</strong>.) This function calculates the squares of\nthe difference between a model's predicted value for a labeled\n<a href=\"#example\"><strong>example</strong></a> and the actual value of the <a href=\"#label\"><strong>label</strong></a>.\nDue to squaring, this loss function amplifies the influence of bad predictions.\nThat is, squared loss reacts more strongly to outliers\nthan <a href=\"#L1_loss\"><strong>L<sub>1</sub> loss</strong></a>.</p>",
         "<a href=\"#loss\"><strong>loss</strong></a>",
         "<strong>loss</strong>",
         "<a href=\"#linear_regression\"><strong>linear regression</strong></a>",
         "<strong>linear regression</strong>",
         "<strong>L<sub>2</sub> Loss</strong>",
         "<sub>2</sub>",
         "<a href=\"#example\"><strong>example</strong></a>",
         "<strong>example</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#L1_loss\"><strong>L<sub>1</sub> loss</strong></a>",
         "<strong>L<sub>1</sub> loss</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#squared_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"state",
      "definition_text":"Synonym for Q-function.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"state\"></a>",
         "<h2 class=\"hide-from-toc\"> state</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the parameter values that describe the current\nconfiguration of the environment, which the <a href=\"#agent\"><strong>agent</strong></a> uses to\nchoose an <a href=\"#action\"><strong>action</strong></a>.</p>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#action\"><strong>action</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#state",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"state-action value function",
      "definition_text":"A model that is trained offline.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"state-action_value_function\"></a>",
         "<h2 class=\"hide-from-toc\"> state-action value function</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>Synonym for <a href=\"#q-function\"><strong>Q-function</strong></a>.</p>",
         "<a href=\"#q-function\"><strong>Q-function</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#state-action_value_function",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"static model",
      "definition_text":"A property of data in a dataset, in which the data distribution stays constant across one or more dimensions. Most commonly, that dimension is time, meaning that data exhibiting stationarity doesn't change over time. For example, data that exhibits stationarity doesn't change from September to December.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"static_model\"></a>",
         "<h2 class=\"hide-from-toc\"> static model</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#static_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"stationarity",
      "definition_text":"A forward and backward evaluation of one batch.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"stationarity\"></a>",
         "<h2 class=\"hide-from-toc\"> stationarity</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#stationarity",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"step",
      "definition_text":"Synonym for learning rate.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"step\"></a>",
         "<h2 class=\"hide-from-toc\"> step</h2>",
         "<p>A forward and backward evaluation of one <a href=\"#batch\"><strong>batch</strong></a>.</p>",
         "<a href=\"#batch\"><strong>batch</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#step",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"step size",
      "definition_text":"A gradient descent algorithm in which the batch size is one. In other words, SGD relies on a single example chosen uniformly at random from a dataset to calculate an estimate of the gradient at each step.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"step_size\"></a>",
         "<h2 class=\"hide-from-toc\"> step size</h2>",
         "<p>Synonym for <a href=\"#learning_rate\"><strong>learning rate</strong></a>.</p>",
         "<a href=\"#learning_rate\"><strong>learning rate</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#step_size",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"SGD",
      "definition_text":"In a convolutional operation or pooling, the delta in each dimension of the next series of input slices. For example, the following animation demonstrates a (1,1) stride during a convolutional operation. Therefore, the next input slice starts one position to the right of the previous input slice. When the operation reaches the right edge, the next slice is all the way over to the left but one position down.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"SGD\"></a>",
         "<h2 class=\"hide-from-toc\"> stochastic gradient descent (SGD)</h2>",
         "<p>A <a href=\"#gradient_descent\"><strong>gradient descent</strong></a> algorithm in which the batch size\nis one. In other words, SGD relies on a single example chosen uniformly at\nrandom from a dataset to calculate an estimate of the gradient at each step.</p>",
         "<a href=\"#gradient_descent\"><strong>gradient descent</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#SGD",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"stride",
      "definition_text":"The preceding example demonstrates a two-dimensional stride.  If the input matrix is three-dimensional, the stride would also be three-dimensional.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"stride\"></a>",
         "<h2 class=\"hide-from-toc\"> stride</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In a convolutional operation or pooling, the delta in each dimension of the\nnext series of input slices. For example, the following animation\ndemonstrates a (1,1) stride during a convolutional operation. Therefore,\nthe next input slice starts one position to the right of the previous input\nslice. When the operation reaches the right edge, the next slice is all\nthe way over to the left but one position down.</p>",
         "<p>\n<img src=\"/machine-learning/glossary/images/AnimatedConvolution.gif\"/>\n</p>",
         "<img src=\"/machine-learning/glossary/images/AnimatedConvolution.gif\"/>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#stride",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"SRM",
      "definition_text":"An algorithm that balances two goals:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"SRM\"></a>",
         "<h2 class=\"hide-from-toc\"> structural risk minimization (SRM)</h2>",
         "<p>An algorithm that balances two goals:</p>",
         "<ul>\n<li>The desire to build the most predictive model (for example, lowest loss).</li>\n<li>The desire to keep the model as simple as possible (for example, strong\nregularization).</li>\n</ul>",
         "<li>The desire to build the most predictive model (for example, lowest loss).</li>",
         "<li>The desire to keep the model as simple as possible (for example, strong\nregularization).</li>",
         "<p>For example, a function that minimizes loss+regularization on the\ntraining set is a structural risk minimization algorithm.</p>",
         "<p>For more information, see\n<a href=\"http://www.svms.org/srm/\" target=\"T\">http://www.svms.org/srm/</a>.</p>",
         "<a href=\"http://www.svms.org/srm/\" target=\"T\">http://www.svms.org/srm/</a>",
         "<p>Contrast with <a href=\"#ERM\"><strong>empirical risk minimization</strong></a>.</p>",
         "<a href=\"#ERM\"><strong>empirical risk minimization</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#SRM",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"subsampling",
      "definition_text":"See pooling.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"subsampling\"></a>",
         "<h2 class=\"hide-from-toc\"> subsampling</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>See <a href=\"#pooling\"><strong>pooling</strong></a>.</p>",
         "<a href=\"#pooling\"><strong>pooling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#subsampling",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"summary",
      "definition_text":"In TensorFlow, a value or set of values calculated at a particular step, usually used for tracking model metrics during training.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"summary\"></a>",
         "<h2 class=\"hide-from-toc\"> summary</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>In TensorFlow, a value or set of values calculated at a particular\n<a href=\"#step\"><strong>step</strong></a>, usually used for tracking model metrics during training.</p>",
         "<a href=\"#step\"><strong>step</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#summary",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"supervised machine learning",
      "definition_text":"Training a model from input data and its corresponding labels. Supervised machine learning is analogous to a student learning a subject by studying a set of questions and their corresponding answers.  After mastering the mapping between questions and answers, the student can then provide answers to new (never-before-seen) questions on the same topic.  Compare with unsupervised machine learning.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"supervised_machine_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> supervised machine learning</h2>",
         "<p>Training a <a href=\"#model\"><strong>model</strong></a> from input data and its corresponding\n<a href=\"#label\"><strong>labels</strong></a>. Supervised machine learning is analogous to a student\nlearning a subject by studying a set of questions and their corresponding\nanswers.  After mastering the mapping between questions and answers, the\nstudent can then provide answers to new (never-before-seen) questions on\nthe same topic.  Compare with\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised machine learning</strong></a>.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<a href=\"#label\"><strong>labels</strong></a>",
         "<strong>labels</strong>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised machine learning</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#supervised_machine_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"synthetic feature",
      "definition_text":"A feature not present among the input features, but created from one or more of them. Kinds of synthetic features include:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"synthetic_feature\"></a>",
         "<h2 class=\"hide-from-toc\"> synthetic feature</h2>",
         "<p>A <a href=\"#feature\"><strong>feature</strong></a> not present among the input features, but\ncreated from one or more of them. Kinds of synthetic features include:</p>",
         "<a href=\"#feature\"><strong>feature</strong></a>",
         "<strong>feature</strong>",
         "<ul>\n<li><a href=\"#bucketing\"><strong>Bucketing</strong></a> a continuous feature into range bins.</li>\n<li>Multiplying (or dividing) one feature value by other feature value(s)\nor by itself.</li>\n<li>Creating a <a href=\"#feature_cross\"><strong>feature cross</strong></a>.</li>\n</ul>",
         "<li><a href=\"#bucketing\"><strong>Bucketing</strong></a> a continuous feature into range bins.</li>",
         "<a href=\"#bucketing\"><strong>Bucketing</strong></a>",
         "<strong>Bucketing</strong>",
         "<li>Multiplying (or dividing) one feature value by other feature value(s)\nor by itself.</li>",
         "<li>Creating a <a href=\"#feature_cross\"><strong>feature cross</strong></a>.</li>",
         "<a href=\"#feature_cross\"><strong>feature cross</strong></a>",
         "<strong>feature cross</strong>",
         "<p>Features created by <a href=\"#normalization\"><strong>normalizing</strong></a> or <a href=\"#scaling\"><strong>scaling</strong></a>\nalone are not considered synthetic features.</p>",
         "<a href=\"#normalization\"><strong>normalizing</strong></a>",
         "<strong>normalizing</strong>",
         "<a href=\"#scaling\"><strong>scaling</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#synthetic_feature",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tabular q-learning",
      "definition_text":"In reinforcement learning, implementing Q-learning by using a table to store the Q-functions for every combination of state and action.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tabular_q-learning\"></a>",
         "<h2 class=\"hide-from-toc\"> tabular Q-learning</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, implementing <a href=\"#q-learning\"><strong>Q-learning</strong></a>\nby using a table to store the <a href=\"#q-function\"><strong>Q-functions</strong></a> for every\ncombination of <a href=\"#state\"><strong>state</strong></a> and <a href=\"#action\"><strong>action</strong></a>.</p>",
         "<a href=\"#q-learning\"><strong>Q-learning</strong></a>",
         "<strong>Q-learning</strong>",
         "<a href=\"#q-function\"><strong>Q-functions</strong></a>",
         "<strong>Q-functions</strong>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#action\"><strong>action</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tabular_q-learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"target",
      "definition_text":"Synonym for label.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"target\"></a>",
         "<h2 class=\"hide-from-toc\"> target</h2>",
         "<p>Synonym for <a href=\"#label\"><strong>label</strong></a>.</p>",
         "<a href=\"#label\"><strong>label</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#target",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"target network",
      "definition_text":"In Deep Q-learning, a neural network that is a stable approximation of the main neural network, where the main neural network implements either a Q-function or a policy. Then, you can train the main network on the Q-values predicted by the target network. Therefore, you prevent the feedback loop that occurs when the main network trains on Q-values predicted by itself. By avoiding this feedback, training stability increases.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"target_network\"></a>",
         "<h2 class=\"hide-from-toc\"> target network</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In <a href=\"#q-learning\"><strong>Deep Q-learning</strong></a>, a neural network that is a stable\napproximation of the main neural network, where the main neural network\nimplements either a <a href=\"#q-function\"><strong>Q-function</strong></a> or a <a href=\"#policy\"><strong>policy</strong></a>.\nThen, you can train the main network on the Q-values predicted by the target\nnetwork. Therefore, you prevent the feedback loop that occurs when the main\nnetwork trains on Q-values predicted by itself. By avoiding this feedback,\ntraining stability increases.</p>",
         "<a href=\"#q-learning\"><strong>Deep Q-learning</strong></a>",
         "<strong>Deep Q-learning</strong>",
         "<a href=\"#q-function\"><strong>Q-function</strong></a>",
         "<strong>Q-function</strong>",
         "<a href=\"#policy\"><strong>policy</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#target_network",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"temporal data",
      "definition_text":"Data recorded at different points in time. For example, winter coat sales recorded for each day of the year would be temporal data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"temporal_data\"></a>",
         "<h2 class=\"hide-from-toc\"> temporal data</h2>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#temporal_data",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tensor",
      "definition_text":"The primary data structure in TensorFlow programs. Tensors are N-dimensional (where N could be very large) data structures, most commonly scalars, vectors, or matrices. The elements of a Tensor can hold integer, floating-point, or string values.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tensor\"></a>",
         "<h2 class=\"hide-from-toc\"> Tensor</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tensor",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TensorBoard",
      "definition_text":"The dashboard that displays the summaries saved during the execution of one or more TensorFlow programs.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TensorBoard\"></a>",
         "<h2 class=\"hide-from-toc\"> TensorBoard</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TensorBoard",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TensorFlow",
      "definition_text":"A large-scale, distributed, machine learning platform. The term also refers to the base API layer in the TensorFlow stack, which supports general computation on dataflow graphs.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TensorFlow\"></a>",
         "<h2 class=\"hide-from-toc\"> TensorFlow</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A large-scale, distributed, machine learning platform. The term also refers to\nthe base API layer in the TensorFlow stack, which supports general computation\non dataflow graphs.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TensorFlow",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TensorFlow Playground",
      "definition_text":"A program that visualizes how different hyperparameters influence model (primarily neural network) training. Go to  http://playground.tensorflow.org to experiment with TensorFlow Playground.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TensorFlow_Playground\"></a>",
         "<h2 class=\"hide-from-toc\"> TensorFlow Playground</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A program that visualizes how different\n<a href=\"#hyperparameter\"><strong>hyperparameters</strong></a> influence model\n(primarily neural network) training.\nGo to\n<a href=\"http://playground.tensorflow.org\" target=\"T\">\nhttp://playground.tensorflow.org</a>\nto experiment with TensorFlow Playground.</p>",
         "<a href=\"#hyperparameter\"><strong>hyperparameters</strong></a>",
         "<strong>hyperparameters</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TensorFlow_Playground",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TensorFlow Serving",
      "definition_text":"A platform to deploy trained models in production.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TensorFlow_Serving\"></a>",
         "<h2 class=\"hide-from-toc\"> TensorFlow Serving</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TensorFlow_Serving",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU",
      "definition_text":"An application-specific integrated circuit (ASIC) that optimizes the performance of machine learning workloads. These ASICs are deployed as multiple TPU chips on a TPU device.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU\"></a>",
         "<h2 class=\"hide-from-toc\"> Tensor Processing Unit (TPU)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>An application-specific integrated circuit (ASIC) that optimizes the\nperformance of machine learning workloads. These ASICs are deployed as\nmultiple <a href=\"#TPU_chip\"><strong>TPU chips</strong></a> on a <a href=\"#TPU_device\"><strong>TPU device</strong></a>.</p>",
         "<a href=\"#TPU_chip\"><strong>TPU chips</strong></a>",
         "<strong>TPU chips</strong>",
         "<a href=\"#TPU_device\"><strong>TPU device</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tensor rank",
      "definition_text":"See rank (Tensor).",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tensor_rank\"></a>",
         "<h2 class=\"hide-from-toc\"> Tensor rank</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>See <a href=\"#rank_Tensor\"><strong>rank (Tensor)</strong></a>.</p>",
         "<a href=\"#rank_Tensor\"><strong>rank (Tensor)</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tensor_rank",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tensor shape",
      "definition_text":"The number of elements a Tensor contains in various dimensions. For example, a [5, 10] Tensor has a shape of 5 in one dimension and 10 in another.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tensor_shape\"></a>",
         "<h2 class=\"hide-from-toc\"> Tensor shape</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>The number of elements a <a href=\"#tensor\"><strong>Tensor</strong></a> contains in various dimensions.\nFor example, a [5, 10] Tensor has a shape of 5 in one dimension and 10\nin another.</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tensor_shape",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tensor size",
      "definition_text":"The total number of scalars a Tensor contains. For example, a [5, 10] Tensor has a size of 50.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tensor_size\"></a>",
         "<h2 class=\"hide-from-toc\"> Tensor size</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>The total number of scalars a <a href=\"#tensor\"><strong>Tensor</strong></a> contains. For example, a\n[5, 10] Tensor has a size of 50.</p>",
         "<a href=\"#tensor\"><strong>Tensor</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tensor_size",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"termination condition",
      "definition_text":"In reinforcement learning, the conditions that determine when an episode ends, such as when the agent reaches a certain state or exceeds a threshold number of state transitions. For example, in tic-tac-toe (also known as noughts and crosses), an episode terminates either when a player marks three consecutive spaces or when all spaces are marked.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"termination_condition\"></a>",
         "<h2 class=\"hide-from-toc\"> termination condition</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, the conditions that determine when an\n<a href=\"#episode\"><strong>episode</strong></a> ends, such as when the agent reaches a certain state\nor exceeds a threshold number of state transitions.\nFor example, in <a href=\"https://wikipedia.org/wiki/Tic-tac-toe\">tic-tac-toe</a> (also\nknown as noughts and crosses), an episode terminates either when a player marks\nthree consecutive spaces or when all spaces are marked.</p>",
         "<a href=\"#episode\"><strong>episode</strong></a>",
         "<strong>episode</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#termination_condition",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"test set",
      "definition_text":"The subset of the dataset that you use to test your model after the model has gone through initial vetting by the validation set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"test_set\"></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#test_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tf.Example",
      "definition_text":"A standard  protocol buffer for describing input data for machine learning model training or inference.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tf.Example\"></a>",
         "<h2 class=\"hide-from-toc\"> tf.Example</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>A standard\n<a href=\"https://developers.google.com/protocol-buffers/\" target=\"T\">\nprotocol buffer</a>\nfor describing input data for machine learning model training or inference.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tf.Example",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tf.keras",
      "definition_text":"An implementation of Keras integrated into TensorFlow.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tf.keras\"></a>",
         "<h2 class=\"hide-from-toc\"> tf.keras</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<p>An implementation of <a href=\"#Keras\"><strong>Keras</strong></a> integrated into\n<a href=\"#TensorFlow\"><strong>TensorFlow</strong></a>.</p>",
         "<a href=\"#Keras\"><strong>Keras</strong></a>",
         "<strong>Keras</strong>",
         "<a href=\"#TensorFlow\"><strong>TensorFlow</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tf.keras",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"time series analysis",
      "definition_text":"A subfield of machine learning and statistics that analyzes temporal data.  Many types of machine learning problems require time series analysis, including classification, clustering, forecasting, and anomaly detection. For example, you could use time series analysis to forecast the future sales of winter coats by month based on historical sales data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"time_series_analysis\"></a>",
         "<h2 class=\"hide-from-toc\"> time series analysis</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>A subfield of machine learning and statistics that analyzes\n<a href=\"#temporal_data\"><strong>temporal data</strong></a>.  Many types of machine learning\nproblems require time series analysis, including classification, clustering,\nforecasting, and anomaly detection. For example, you could use\ntime series analysis to forecast the future sales of winter coats by month\nbased on historical sales data.</p>",
         "<a href=\"#temporal_data\"><strong>temporal data</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#time_series_analysis",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"timestep",
      "definition_text":"One \"unrolled\" cell within a recurrent neural network. For example, the following figure shows three timesteps (labeled with the subscripts t-1, t, and t+1):",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"timestep\"></a>",
         "<h2 class=\"hide-from-toc\">timestep</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>One \"unrolled\" cell within a\n<a href=\"#recurrent_neural_network\"><strong>recurrent neural network</strong></a>.\nFor example, the following figure shows three timesteps (labeled with\nthe subscripts t-1, t, and t+1):</p>",
         "<a href=\"#recurrent_neural_network\"><strong>recurrent neural network</strong></a>",
         "<strong>recurrent neural network</strong>",
         "<p>\n<img src=\"/machine-learning/glossary/images/Simple_RNN.svg\"/>\n</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#timestep",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"tower",
      "definition_text":"A component of a deep neural network that is itself a deep neural network without an output layer. Typically, each tower reads from an independent data source. Towers are independent until their output is combined in a final layer.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"tower\"></a>",
         "<h2 class=\"hide-from-toc\">tower</h2>",
         "<p>A component of a <a href=\"#deep_neural_network\"><strong>deep neural network</strong></a> that\nis itself a deep neural network without an output layer. Typically,\neach tower reads from an independent data source. Towers are independent\nuntil their output is combined in a final layer.</p>",
         "<a href=\"#deep_neural_network\"><strong>deep neural network</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#tower",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPUabbrev",
      "definition_text":"Abbreviation for Tensor Processing Unit.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPUabbrev\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>Abbreviation for <a href=\"#TPU\"><strong>Tensor Processing Unit</strong></a>.</p>",
         "<a href=\"#TPU\"><strong>Tensor Processing Unit</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPUabbrev",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU chip",
      "definition_text":"A programmable linear algebra accelerator with on-chip high bandwidth memory that is optimized for machine learning workloads. Multiple TPU chips are deployed on a TPU device.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_chip\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU chip </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A programmable linear algebra accelerator with on-chip high bandwidth memory\nthat is optimized for machine learning workloads.\nMultiple TPU chips are deployed on a <a href=\"#TPU_device\"><strong>TPU device</strong></a>.</p>",
         "<a href=\"#TPU_device\"><strong>TPU device</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_chip",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU device",
      "definition_text":"A printed circuit board (PCB) with multiple TPU chips, high bandwidth network interfaces, and system cooling hardware.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_device\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU device </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A printed circuit board (PCB) with multiple <a href=\"#TPU_chip\"><strong>TPU chips</strong></a>,\nhigh bandwidth network interfaces, and system cooling hardware.</p>",
         "<a href=\"#TPU_chip\"><strong>TPU chips</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_device",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU master",
      "definition_text":"The central coordination process running on a host machine that sends and receives data, results, programs, performance, and system health information to the TPU workers. The TPU master also manages the setup and shutdown of TPU devices.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_master\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU master</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>The central coordination process running on a host machine that sends and\nreceives data, results, programs, performance, and system health information\nto the <a href=\"#TPU_worker\"><strong>TPU workers</strong></a>. The TPU master also manages the setup\nand shutdown of <a href=\"#TPU_device\"><strong>TPU devices</strong></a>.</p>",
         "<a href=\"#TPU_worker\"><strong>TPU workers</strong></a>",
         "<strong>TPU workers</strong>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_master",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU node",
      "definition_text":"A TPU resource on Google Cloud Platform with a specific TPU type. The TPU node connects to your VPC Network from a peer VPC network. TPU nodes are a resource defined in the Cloud TPU API.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_node\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU node </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A TPU resource on Google Cloud Platform with a specific\n<a href=\"#TPU_type\"><strong>TPU type</strong></a>. The TPU node connects to your\n<a href=\"https://cloud.google.com/vpc/docs/\">VPC Network</a> from a\n<a href=\"https://cloud.google.com/vpc/docs/vpc-peering\">peer VPC network</a>.\nTPU nodes are a resource defined in the\n<a href=\"https://cloud.google.com/tpu/docs/reference/rest/v1/projects.locations.nodes\">Cloud TPU API</a>.</p>",
         "<a href=\"#TPU_type\"><strong>TPU type</strong></a>",
         "<strong>TPU type</strong>",
         "<a href=\"https://cloud.google.com/vpc/docs/\">VPC Network</a>",
         "<a href=\"https://cloud.google.com/vpc/docs/vpc-peering\">peer VPC network</a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_node",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU Pod",
      "definition_text":"A specific configuration of TPU devices in a Google data center. All of the devices in a TPU pod are connected to one another over a dedicated high-speed network. A TPU Pod is the largest configuration of TPU devices available for a specific TPU version.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_Pod\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU Pod </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A specific configuration of <a href=\"#TPU_device\"><strong>TPU devices</strong></a> in a Google\ndata center. All of the devices in a TPU pod are connected to one another\nover a dedicated high-speed network. A TPU Pod is the largest configuration of\n<a href=\"#TPU_device\"><strong>TPU devices</strong></a> available for a specific TPU version.</p>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>",
         "<strong>TPU devices</strong>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_Pod",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU resource",
      "definition_text":"A TPU entity on Google Cloud Platform that you create, manage, or consume. For example, TPU nodes and TPU types are TPU resources.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_resource\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU resource</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A TPU entity on Google Cloud Platform that you create, manage, or consume. For\nexample, <a href=\"#TPU_node\"><strong>TPU nodes</strong></a> and <a href=\"#TPU_type\"><strong>TPU types</strong></a> are\nTPU resources.</p>",
         "<a href=\"#TPU_node\"><strong>TPU nodes</strong></a>",
         "<strong>TPU nodes</strong>",
         "<a href=\"#TPU_type\"><strong>TPU types</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_resource",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU slice",
      "definition_text":"A TPU slice is a fractional portion of the TPU devices in a TPU Pod. All of the devices in a TPU slice are connected to one another over a dedicated high-speed network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_slice\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU slice</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A TPU slice is a fractional portion of the <a href=\"#TPU_device\"><strong>TPU devices</strong></a> in\na <a href=\"#TPU_Pod\"><strong>TPU Pod</strong></a>. All of the devices in a TPU slice are connected\nto one another over a dedicated high-speed network.</p>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>",
         "<strong>TPU devices</strong>",
         "<a href=\"#TPU_Pod\"><strong>TPU Pod</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_slice",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU type",
      "definition_text":"A configuration of one or more TPU devices with a specific TPU hardware version. You select a TPU type when you create a TPU node on Google Cloud Platform. For example, a v2-8 TPU type is a single TPU v2 device with 8 cores. A v3-2048 TPU type has 256 networked TPU v3 devices and a total of 2048 cores. TPU types are a resource defined in the Cloud TPU API.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_type\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU type </h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A configuration of one or more <a href=\"#TPU_device\"><strong>TPU devices</strong></a> with a specific\nTPU hardware version. You select a TPU type when you create\na <a href=\"#TPU_node\"><strong>TPU node</strong></a> on Google Cloud Platform. For example, a <code dir=\"ltr\" translate=\"no\">v2-8</code>\nTPU type is a single TPU v2 device with 8 cores. A <code dir=\"ltr\" translate=\"no\">v3-2048</code> TPU type has 256\nnetworked TPU v3 devices and a total of 2048 cores. TPU types are a resource\ndefined in the\n<a href=\"https://cloud.google.com/tpu/docs/reference/rest/v1/projects.locations.acceleratorTypes\">Cloud TPU API</a>.</p>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>",
         "<strong>TPU devices</strong>",
         "<a href=\"#TPU_node\"><strong>TPU node</strong></a>",
         "<strong>TPU node</strong>",
         "<code dir=\"ltr\" translate=\"no\">v2-8</code>",
         "<code dir=\"ltr\" translate=\"no\">v3-2048</code>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_type",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TPU worker",
      "definition_text":"A process that runs on a host machine and executes machine learning programs on TPU devices.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TPU_worker\"></a>",
         "<h2 class=\"hide-from-toc\"> TPU worker</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>\n<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"TensorFlow\">#TensorFlow</div>",
         "<div class=\"glossary-icon\" title=\"Google Cloud\">#GoogleCloud</div>",
         "<p>A process that runs on a host machine and executes machine learning programs\non <a href=\"#TPU_device\"><strong>TPU devices</strong></a>.</p>",
         "<a href=\"#TPU_device\"><strong>TPU devices</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TPU_worker",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"training",
      "definition_text":"The process of determining the ideal parameters comprising a model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"training\"></a>",
         "<h2 class=\"hide-from-toc\"> training</h2>",
         "<p>The process of determining the ideal <a href=\"#parameter\"><strong>parameters</strong></a> comprising\na model.</p>",
         "<a href=\"#parameter\"><strong>parameters</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#training",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"training set",
      "definition_text":"The subset of the dataset used to train a model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"training_set\"></a>",
         "<h2 class=\"hide-from-toc\"> training set</h2>",
         "<p>The subset of the dataset used to train a model.</p>",
         "<p>Contrast with <a href=\"#validation_set\"><strong>validation set</strong></a> and\n<a href=\"#test_set\"><strong>test set</strong></a>.</p>",
         "<a href=\"#validation_set\"><strong>validation set</strong></a>",
         "<strong>validation set</strong>",
         "<a href=\"#test_set\"><strong>test set</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#training_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"trajectory",
      "definition_text":"In reinforcement learning, a sequence of tuples that represent a sequence of state transitions of the agent, where each tuple corresponds to the state, action, reward, and next state for a given state transition.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"trajectory\"></a>",
         "<h2 class=\"hide-from-toc\"> trajectory</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Reinforcement Learning\">#rl</div>",
         "<p>In reinforcement learning, a sequence of\n<a href=\"https://wikipedia.org/wiki/Tuple\" target=\"T\">tuples</a> that represent\na sequence of <a href=\"#state\"><strong>state</strong></a> transitions of the <a href=\"#agent\"><strong>agent</strong></a>,\nwhere each tuple corresponds to the state, <a href=\"#action\"><strong>action</strong></a>,\n<a href=\"#reward\"><strong>reward</strong></a>, and next state for a given state transition.</p>",
         "<a href=\"https://wikipedia.org/wiki/Tuple\" target=\"T\">tuples</a>",
         "<a href=\"#state\"><strong>state</strong></a>",
         "<strong>state</strong>",
         "<a href=\"#agent\"><strong>agent</strong></a>",
         "<strong>agent</strong>",
         "<a href=\"#action\"><strong>action</strong></a>",
         "<strong>action</strong>",
         "<a href=\"#reward\"><strong>reward</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#trajectory",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"transfer learning",
      "definition_text":"Transferring information from one machine learning task to another. For example, in multi-task learning, a single model solves multiple tasks, such as a deep model that has different output nodes for different tasks.  Transfer learning might involve transferring knowledge from the solution of a simpler task to a more complex one, or involve transferring knowledge from a task where there is more data to one where there is less data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"transfer_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> transfer learning</h2>",
         "<p>Transferring information from one machine learning task to another.\nFor example, in multi-task learning, a single model solves multiple tasks,\nsuch as a <a href=\"#deep_model\"><strong>deep model</strong></a> that has different output nodes for\ndifferent tasks.  Transfer learning might involve transferring knowledge\nfrom the solution of a simpler task to a more complex one, or involve\ntransferring knowledge from a task where there is more data to one where\nthere is less data.</p>",
         "<a href=\"#deep_model\"><strong>deep model</strong></a>",
         "<strong>deep model</strong>",
         "<p>Most machine learning systems solve a <em>single</em> task. Transfer learning is a\nbaby step towards artificial intelligence in which a single program can solve\n<em>multiple</em> tasks.</p>",
         "<em>single</em>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#transfer_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"translational invariance",
      "definition_text":"In an image classification problem, an algorithm's ability to successfully classify images even when the position of objects within the image changes. For example, the algorithm can still identify a dog, whether it is in the center of the frame or at the left end of the frame.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"translational_invariance\"></a>",
         "<h2 class=\"hide-from-toc\"> translational invariance</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Image Models\">#image</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Image Models\">#image</div>",
         "<p>In an image classification problem, an algorithm's ability to successfully\nclassify images even when the position of objects within the image changes.\nFor example, the algorithm can still identify a dog, whether it is in the\ncenter of the frame or at the left end of the frame.</p>",
         "<p>See also <a href=\"#size_invariance\"><strong>size invariance</strong></a> and\n<a href=\"#rotational_invariance\"><strong>rotational invariance</strong></a>.</p>",
         "<a href=\"#size_invariance\"><strong>size invariance</strong></a>",
         "<strong>size invariance</strong>",
         "<a href=\"#rotational_invariance\"><strong>rotational invariance</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#translational_invariance",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"trigram",
      "definition_text":"An N-gram in which N=3.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"trigram\"></a>",
         "<h2 class=\"hide-from-toc\"> trigram</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>An <a href=\"#N-gram\"><strong>N-gram</strong></a> in which N=3.</p>",
         "<a href=\"#N-gram\"><strong>N-gram</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#trigram",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TN",
      "definition_text":"An example in which the model correctly predicted the negative class. For example, the model inferred that a particular email message was not spam, and that email message really was not spam.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TN\"></a>",
         "<h2 class=\"hide-from-toc\"> true negative (TN)</h2>",
         "<p>An example in which the model <em>correctly</em> predicted the\n<a href=\"#negative_class\"><strong>negative class</strong></a>. For example, the model inferred that\na particular email message was not spam, and that email message really was\nnot spam.</p>",
         "<em>correctly</em>",
         "<a href=\"#negative_class\"><strong>negative class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TN",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TP",
      "definition_text":"An example in which the model correctly predicted the positive class. For example, the model inferred that a particular email message was spam, and that email message really was spam.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TP\"></a>",
         "<h2 class=\"hide-from-toc\"> true positive (TP)</h2>",
         "<p>An example in which the model <em>correctly</em> predicted the\n<a href=\"#positive_class\"><strong>positive class</strong></a>. For example, the model inferred that\na particular email message was spam, and that email message really was spam.</p>",
         "<em>correctly</em>",
         "<a href=\"#positive_class\"><strong>positive class</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TP",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"TP rate",
      "definition_text":"Synonym for recall. That is:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"TP_rate\"></a>",
         "<h2 class=\"hide-from-toc\"> true positive rate (TPR)</h2>",
         "<p>Synonym for <a href=\"#recall\"><strong>recall</strong></a>. That is:</p>",
         "<a href=\"#recall\"><strong>recall</strong></a>",
         "<strong>recall</strong>",
         "<div>\n$$\\text{True Positive Rate} = \\frac{\\text{True Positives}} {\\text{True Positives} + \\text{False Negatives}}$$\n</div>",
         "<p>True positive rate is the y-axis in an <a href=\"#ROC\"><strong>ROC curve</strong></a>.</p>",
         "<a href=\"#ROC\"><strong>ROC curve</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#TP_rate",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"unawareness",
      "definition_text":"A situation in which sensitive attributes are present, but not included in the training data. Because sensitive attributes are often correlated with other attributes of one\u2019s data, a model trained with unawareness about a sensitive attribute could still have disparate impact with respect to that attribute, or violate other fairness constraints.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"unawareness\"></a>",
         "<h2 class=\"hide-from-toc\"> unawareness (to a sensitive attribute)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Fairness\">#fairness</div>",
         "<p>A situation in which <a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a> are\npresent, but not included in the training data. Because sensitive attributes\nare often correlated with other attributes of one\u2019s data, a model trained\nwith unawareness about a sensitive attribute could still have\n<a href=\"#disparate_impact\"><strong>disparate impact</strong></a> with respect to that attribute,\nor violate other <a href=\"#fairness_constraint\"><strong>fairness constraints</strong></a>.</p>",
         "<a href=\"#sensitive_attribute\"><strong>sensitive attributes</strong></a>",
         "<strong>sensitive attributes</strong>",
         "<a href=\"#disparate_impact\"><strong>disparate impact</strong></a>",
         "<strong>disparate impact</strong>",
         "<a href=\"#fairness_constraint\"><strong>fairness constraints</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#unawareness",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"underfitting",
      "definition_text":"Producing a model with poor predictive ability because the model hasn't captured the complexity of the training data. Many problems can cause underfitting, including:",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"underfitting\"></a>",
         "<h2 class=\"hide-from-toc\"> underfitting</h2>",
         "<p>Producing a model with poor predictive ability because the model\nhasn't captured the complexity of the training data. Many problems\ncan cause underfitting, including:</p>",
         "<ul>\n<li>Training on the wrong set of features.</li>\n<li>Training for too few epochs or at too low a learning rate.</li>\n<li>Training with too high a regularization rate.</li>\n<li>Providing too few hidden layers in a deep neural network.</li>\n</ul>",
         "<li>Training on the wrong set of features.</li>",
         "<li>Training for too few epochs or at too low a learning rate.</li>",
         "<li>Training with too high a regularization rate.</li>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#underfitting",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"unlabeled example",
      "definition_text":"An example that contains features but no label. Unlabeled examples are the input to inference. In semi-supervised and unsupervised learning, unlabeled examples are used during training.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"unlabeled_example\"></a>",
         "<h2 class=\"hide-from-toc\"> unlabeled example</h2>",
         "<p>An example that contains <a href=\"#feature\"><strong>features</strong></a> but no <a href=\"#label\"><strong>label</strong></a>.\nUnlabeled examples are the input to <a href=\"#inference\"><strong>inference</strong></a>. In\n<a href=\"#semi-supervised_learning\"><strong>semi-supervised</strong></a> and\n<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a> learning,\nunlabeled examples are used during training.</p>",
         "<a href=\"#feature\"><strong>features</strong></a>",
         "<strong>features</strong>",
         "<a href=\"#label\"><strong>label</strong></a>",
         "<strong>label</strong>",
         "<a href=\"#inference\"><strong>inference</strong></a>",
         "<strong>inference</strong>",
         "<a href=\"#semi-supervised_learning\"><strong>semi-supervised</strong></a>",
         "<strong>semi-supervised</strong>",
         "<a href=\"#unsupervised_machine_learning\"><strong>unsupervised</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#unlabeled_example",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"unsupervised machine learning",
      "definition_text":"Training a model to find patterns in a dataset, typically an unlabeled dataset.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"unsupervised_machine_learning\"></a>",
         "<h2 class=\"hide-from-toc\"> unsupervised machine learning</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Clustering\">#clustering</div>",
         "<p>Training a <a href=\"#model\"><strong>model</strong></a> to find patterns in a dataset, typically an\nunlabeled dataset.</p>",
         "<a href=\"#model\"><strong>model</strong></a>",
         "<strong>model</strong>",
         "<p>The most common use of unsupervised machine learning is to cluster data\ninto groups of similar examples. For example, an unsupervised machine\nlearning algorithm can cluster songs together based on various properties\nof the music. The resulting clusters can become an input to other machine\nlearning algorithms (for example, to a music recommendation service).\nClustering can be helpful in domains where true labels are hard to obtain.\nFor example, in domains such as anti-abuse and fraud, clusters can help\nhumans better understand the data.</p>",
         "<p>Another example of unsupervised machine learning is\n<a href=\"https://wikipedia.org/wiki/Principal_component_analysis\" target=\"T\">principal\ncomponent analysis (PCA)</a>.\nFor example, applying PCA on a\ndataset containing the contents of millions of shopping carts might reveal\nthat shopping carts containing lemons frequently also contain antacids.</p>",
         "<a href=\"https://wikipedia.org/wiki/Principal_component_analysis\" target=\"T\">principal\ncomponent analysis (PCA)</a>",
         "<p>Compare with <a href=\"#supervised_machine_learning\"><strong>supervised machine learning</strong></a>.</p>",
         "<a href=\"#supervised_machine_learning\"><strong>supervised machine learning</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#unsupervised_machine_learning",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"upweighting",
      "definition_text":"Applying a weight to the downsampled class equal to the factor by which you downsampled.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"upweighting\"></a>",
         "<h2 class=\"hide-from-toc\"> upweighting</h2>",
         "<p>Applying a weight to the <a href=\"#downsampling\"><strong>downsampled</strong></a> class equal\nto the factor by which you downsampled.</p>",
         "<a href=\"#downsampling\"><strong>downsampled</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#upweighting",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"user matrix",
      "definition_text":"In recommendation systems, an embedding generated by matrix factorization that holds latent signals about user preferences. Each row of the user matrix holds information about the relative strength of various latent signals for a single user. For example, consider a movie recommendation system.  In this system, the latent signals in the user matrix might represent each user's interest in particular genres, or might be harder-to-interpret signals that involve complex interactions across multiple factors.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"user_matrix\"></a>",
         "<h2 class=\"hide-from-toc\"> user matrix</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>In <a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>, an\n<a href=\"#embeddings\"><strong>embedding</strong></a> generated by\n<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a>\nthat holds latent signals about user preferences.\nEach row of the user matrix holds information about the relative\nstrength of various latent signals for a single user.\nFor example, consider a movie recommendation system.  In this system,\nthe latent signals in the user matrix might represent each user's interest\nin particular genres, or might be harder-to-interpret signals that involve\ncomplex interactions across multiple factors.</p>",
         "<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>",
         "<strong>recommendation systems</strong>",
         "<a href=\"#embeddings\"><strong>embedding</strong></a>",
         "<strong>embedding</strong>",
         "<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a>",
         "<strong>matrix factorization</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#user_matrix",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"validation",
      "definition_text":"A process used, as part of training, to evaluate the quality of a machine learning model using the validation set. Because the validation set is disjoint from the training set, validation helps ensure that the model\u2019s performance generalizes beyond the training set.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"validation\"></a>",
         "<h2 class=\"hide-from-toc\"> validation</h2>",
         "<p>A process used, as part of <a href=\"#training\"><strong>training</strong></a>, to evaluate\nthe quality of a <a href=\"#machine_learning\"><strong>machine learning</strong></a> model\nusing the <a href=\"#validation_set\"><strong>validation set</strong></a>. Because the validation\nset is disjoint from the training set, validation helps ensure that the\nmodel\u2019s performance generalizes beyond the training set.</p>",
         "<a href=\"#training\"><strong>training</strong></a>",
         "<strong>training</strong>",
         "<a href=\"#machine_learning\"><strong>machine learning</strong></a>",
         "<strong>machine learning</strong>",
         "<a href=\"#validation_set\"><strong>validation set</strong></a>",
         "<strong>validation set</strong>",
         "<p>Contrast with <a href=\"#test_set\"><strong>test set</strong></a>.</p>",
         "<a href=\"#test_set\"><strong>test set</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#validation",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"validation set",
      "definition_text":"A subset of the dataset\u2014disjoint from the training set\u2014used in validation.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"validation_set\"></a>",
         "<h2 class=\"hide-from-toc\"> validation set</h2>",
         "<p>A subset of the dataset\u2014disjoint from the training set\u2014used\nin <a href=\"#validation\"><strong>validation</strong></a>.</p>",
         "<a href=\"#validation\"><strong>validation</strong></a>",
         "<strong>validation</strong>",
         "<p>Contrast with <a href=\"#training_set\"><strong>training set</strong></a>\nand <a href=\"#test_set\"><strong>test set</strong></a>.</p>",
         "<a href=\"#training_set\"><strong>training set</strong></a>",
         "<strong>training set</strong>",
         "<a href=\"#test_set\"><strong>test set</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#validation_set",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"vanishing gradient problem",
      "definition_text":"The tendency for the gradients of early hidden layers of some deep neural networks to become surprisingly flat (low). Increasingly lower gradients result in increasingly smaller changes to the weights on nodes in a deep neural network, leading to little or no learning. Models suffering from the vanishing gradient problem become difficult or impossible to train. Long Short-Term Memory cells address this issue.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"vanishing_gradient_problem\"></a>",
         "<h2 class=\"hide-from-toc\">vanishing gradient problem</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Sequence Models\">#seq</div>",
         "<p>The tendency for the gradients of early <a href=\"#hidden_layer\"><strong>hidden layers</strong></a>\nof some <a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a> to become\nsurprisingly flat (low). Increasingly lower gradients result in increasingly\nsmaller changes to the weights on nodes in a deep neural network, leading to\nlittle or no learning. Models suffering from the vanishing gradient problem\nbecome difficult or impossible to train.\n<a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a> cells address this issue.</p>",
         "<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>",
         "<strong>hidden layers</strong>",
         "<a href=\"#deep_neural_network\"><strong>deep neural networks</strong></a>",
         "<strong>deep neural networks</strong>",
         "<a href=\"#Long_Short-Term_Memory\"><strong>Long Short-Term Memory</strong></a>",
         "<strong>Long Short-Term Memory</strong>",
         "<p>Compare to <a href=\"#exploding_gradient_problem\"><strong>exploding gradient problem</strong></a>.</p>",
         "<a href=\"#exploding_gradient_problem\"><strong>exploding gradient problem</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#vanishing_gradient_problem",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Wasserstein loss",
      "definition_text":"One of the loss functions commonly used in generative adversarial networks, based on the earth-mover's distance between the distribution of generated data and real data.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"Wasserstein_loss\"></a>",
         "<h2 class=\"hide-from-toc\">Wasserstein loss</h2>",
         "<p>One of the loss functions commonly used in\n<a href=\"#generative_adversarial_network\"><strong>generative adversarial networks</strong></a>,\nbased on the <a href=\"https://wikipedia.org/wiki/Earth_mover%27s_distance\">earth-mover's\ndistance</a> between\nthe distribution of generated data and real data.</p>",
         "<a href=\"#generative_adversarial_network\"><strong>generative adversarial networks</strong></a>",
         "<strong>generative adversarial networks</strong>",
         "<a href=\"https://wikipedia.org/wiki/Earth_mover%27s_distance\">earth-mover's\ndistance</a>",
         "<p>Wasserstein Loss is the default loss function in\n<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/gan\">TF-GAN</a>.</p>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#Wasserstein_loss",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"weight",
      "definition_text":"A coefficient for a feature in a linear model, or an edge in a deep network. The goal of training a linear model is to determine the ideal weight for each feature. If a weight is 0, then its corresponding feature does not contribute to the model.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"weight\"></a>",
         "<h2 class=\"hide-from-toc\"> weight</h2>",
         "<p>A coefficient for a <a href=\"#feature\"><strong>feature</strong></a> in a linear model, or an edge\nin a deep network. The goal of training a linear model is to determine\nthe ideal weight for each feature. If a weight is 0, then its corresponding\nfeature does not contribute to the model.</p>",
         "<a href=\"#feature\"><strong>feature</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#weight",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"WALS",
      "definition_text":"An algorithm for minimizing the objective function during matrix factorization in recommendation systems, which allows a downweighting of the missing examples. WALS minimizes the weighted squared error between the original matrix and the reconstruction by alternating between fixing the row factorization and column factorization. Each of these optimizations can be solved by least squares convex optimization. For details, see the Recommendation Systems course",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"WALS\"></a>",
         "<h2 class=\"hide-from-toc\">Weighted Alternating Least Squares (WALS)</h2>",
         "<div class=\"glossary-icon-container\">\n<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>\n</div>",
         "<div class=\"glossary-icon\" title=\"Recommendation Systems\">#recsystems</div>",
         "<p>An algorithm for minimizing the objective function during\n<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a> in\n<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>, which allows a\ndownweighting of the missing examples. WALS minimizes the weighted\nsquared error between the original matrix and the reconstruction by\nalternating between fixing the row factorization and column factorization.\nEach of these optimizations can be solved by least squares\n<a href=\"#convex_optimization\"><strong>convex optimization</strong></a>. For details, see the\n<a class=\"gc-analytics-event\" data-action=\"click\" data-category=\"launchRecommendationCourse\" data-label=\"ml-glossary\" href=\"/machine-learning/recommendation/collaborative/matrix\" target=\"T\">Recommendation Systems course</a></p>",
         "<a href=\"#matrix_factorization\"><strong>matrix factorization</strong></a>",
         "<strong>matrix factorization</strong>",
         "<a href=\"#recommendation_system\"><strong>recommendation systems</strong></a>",
         "<strong>recommendation systems</strong>",
         "<a href=\"#convex_optimization\"><strong>convex optimization</strong></a>",
         "<strong>convex optimization</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#WALS",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"wide model",
      "definition_text":"A linear model that typically has many sparse input features. We refer to it as \"wide\" since such a model is a special type of neural network with a large number of inputs that connect directly to the output node. Wide models are often easier to debug and inspect than deep models. Although wide models cannot express nonlinearities through hidden layers, they can use transformations such as feature crossing and bucketization to model nonlinearities in different ways.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"wide_model\"></a>",
         "<h2 class=\"hide-from-toc\"> wide model</h2>",
         "<p>A linear model that typically has many\n<a href=\"#sparse_features\"><strong>sparse input features</strong></a>. We refer to it as \"wide\" since\nsuch a model is a special type of <a href=\"#neural_network\"><strong>neural network</strong></a> with a\nlarge number of inputs that connect directly to the output node. Wide models\nare often easier to debug and inspect than deep models. Although wide models\ncannot express nonlinearities through <a href=\"#hidden_layer\"><strong>hidden layers</strong></a>,\nthey can use transformations such as\n<a href=\"#feature_cross\"><strong>feature crossing</strong></a> and\n<a href=\"#bucketing\"><strong>bucketization</strong></a> to model nonlinearities in different ways.</p>",
         "<a href=\"#sparse_features\"><strong>sparse input features</strong></a>",
         "<strong>sparse input features</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>",
         "<a href=\"#hidden_layer\"><strong>hidden layers</strong></a>",
         "<strong>hidden layers</strong>",
         "<a href=\"#feature_cross\"><strong>feature crossing</strong></a>",
         "<strong>feature crossing</strong>",
         "<a href=\"#bucketing\"><strong>bucketization</strong></a>",
         "<strong>bucketization</strong>",
         "<p>Contrast with <a href=\"#deep_model\"><strong>deep model</strong></a>.</p>",
         "<a href=\"#deep_model\"><strong>deep model</strong></a>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#wide_model",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"width",
      "definition_text":"The number of neurons in a particular layer of a neural network.",
      "definition_html":[
         "<a class=\"glossary-anchor\" name=\"width\"></a>",
         "<h2 class=\"hide-from-toc\"> width</h2>",
         "<p>The number of <a href=\"#neuron\"><strong>neurons</strong></a> in a particular <a href=\"#layer\"><strong>layer</strong></a>\nof a <a href=\"#neural_network\"><strong>neural network</strong></a>.</p>",
         "<a href=\"#neuron\"><strong>neurons</strong></a>",
         "<strong>neurons</strong>",
         "<a href=\"#layer\"><strong>layer</strong></a>",
         "<strong>layer</strong>",
         "<a href=\"#neural_network\"><strong>neural network</strong></a>",
         "<strong>neural network</strong>"
      ],
      "link":"https://developers.google.com/machine-learning/glossary#width",
      "source":"Google Machine Learning Glossary"
   },
   {
      "terms":"Algorithm ",
      "definition_text":"a formula given to a computer in order for it to complete a task (i.e. a set of rules for a computer)\u00a0",
      "definition_html":"<p><strong>Algorithm: </strong>a formula given to a computer in order for it to complete a task (i.e. a set of rules for a computer)\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Artificial intelligence ",
      "definition_text":"a subset of computer science that deals with computer systems performing tasks with similar, equal, or superior intelligence to that of a human (e.g. decision-making, object classification and detection, speech recognition and translation)",
      "definition_html":"<p><strong><a href=\"/what-is-artificial-intelligence\" rel=\"noopener\" target=\"_blank\">Artificial intelligence</a>: </strong>a subset of computer science that deals with computer systems performing tasks with similar, equal, or superior intelligence to that of a human (e.g. decision-making, object classification and detection, speech recognition and translation)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Artificial general intelligence (AGI) ",
      "definition_text":"also known as strong AI, AGI is a type of artificial intelligence that is considered human-like, and still in its preliminary stages (more of a hypothetical existence in present day)",
      "definition_html":"<p><strong>Artificial general intelligence (AGI): </strong>also known as <strong>strong AI</strong>, AGI is a type of artificial intelligence that is considered human-like, and still in its preliminary stages (more of a hypothetical existence in present day)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Artificial narrow intelligence (ANI) ",
      "definition_text":"also known as weak AI, ANI is a type of artificial intelligence that can only focus on one task or problem at a given time (e.g. playing a game against a human competitor). This is the current existing form of AI.",
      "definition_html":"<p><strong>Artificial narrow intelligence (ANI): </strong>also known as <strong>weak AI</strong>, ANI is a type of artificial intelligence that can only focus on one task or problem at a given time (e.g. playing a game against a human competitor). This is the current existing form of AI.</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Artificial neural network (ANN)",
      "definition_text":"a network modeled after the human brain by creating an artificial neural system via a pattern-recognizing computer algorithm that learns from, interprets, and classifies sensory data",
      "definition_html":"<p><strong>Artificial neural network (ANN):</strong> a network modeled after the human brain by creating an artificial neural system via a pattern-recognizing computer algorithm that learns from, interprets, and classifies sensory data</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Backpropagation ",
      "definition_text":"shorthand for \u201cbackward propagation of errors,\u201d is a method of training neural networks where the system\u2019s initial output is compared to the desired output, then adjusted until the difference (between outputs) becomes minimal",
      "definition_html":"<p><strong>Backpropagation: </strong>shorthand for \u201cbackward propagation of errors,\u201d is a method of training neural networks where the system\u2019s <em>initial </em>output is compared to the <em>desired </em>output, then adjusted until the difference (between outputs) becomes minimal</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Bayesian networks ",
      "definition_text":"also known as Bayes network, Bayes model, belief network, and decision network, is a graph-based model representing a set of variables and their dependencies\u00a0",
      "definition_html":"<p><strong>Bayesian networks: </strong>also known as <strong>Bayes network, Bayes model, belief network, and decision network,</strong> is a graph-based model representing a set of variables and their dependencies\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Big data ",
      "definition_text":"large amounts of structured and unstructured data that is too complex to be handled by standard data-processing software",
      "definition_html":"<p><strong><a href=\"/big-data\" rel=\"noopener\" target=\"_blank\">Big data</a>: </strong>large amounts of structured and unstructured data that is too complex to be handled by standard data-processing software</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Chatbots",
      "definition_text":"a chat robot that can converse with a human user through text or voice commands. Utilized by e-commerce, education, health, and business industries for ease of communication and to answer user questions.\u00a0",
      "definition_html":"<p><strong><a href=\"/chatbot\" rel=\"noopener\" target=\"_blank\">Chatbots</a>:</strong> a chat robot that can converse with a human user through text or voice commands. Utilized by e-commerce, education, health, and business industries for ease of communication and to answer user questions.\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Classification ",
      "definition_text":"algorithm technique that allows machines to assign categories to data points",
      "definition_html":"<p style=\"text-align: left;\"><strong>Classification: </strong>algorithm technique that allows machines to assign categories to data points</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Clustering",
      "definition_text":"algorithm technique that allows machines to group similar data into larger data categories",
      "definition_html":"<p><strong>Clustering:</strong> algorithm technique that allows machines to group similar data into larger data categories</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Cognitive computing ",
      "definition_text":"computerized model that mimics human thought processes by data mining, NLP, and pattern recognition",
      "definition_html":"<p><strong>Cognitive computing: </strong>computerized model that mimics human thought processes by data mining, NLP, and pattern recognition</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Computer vision ",
      "definition_text":"when a machine processes visual input from image files (JPEGs) or camera feeds",
      "definition_html":"<p><strong>Computer vision: </strong>when a machine processes visual input from image files (JPEGs) or camera feeds</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Convolutional neural network (CNN) ",
      "definition_text":"a type of neural network specifically created for analyzing, classifying, and clustering visual imagery by using multilayer perceptrons",
      "definition_html":"<p><strong>Convolutional neural network (CNN): </strong>a type of neural network specifically created for analyzing, classifying, and clustering visual imagery by using multilayer perceptrons</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Data mining ",
      "definition_text":"the process of sorting through large sets of data in order to identify recurring patterns while establishing problem-solving relationships",
      "definition_html":"<p><strong><a href=\"/data-mining\" rel=\"noopener\" target=\"_blank\">Data mining</a>: </strong>the process of sorting through large sets of data in order to identify recurring patterns while establishing problem-solving relationships</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Deep learning ",
      "definition_text":"a machine learning technique that teaches computers how to learn by rote (i.e. machines mimic learning as a human mind would, by using classification techniques)",
      "definition_html":"<p><strong><a href=\"/deep-learning\" rel=\"noopener\" target=\"_blank\">Deep learning</a>: </strong>a machine learning technique that teaches computers how to learn by rote (i.e. machines mimic learning as a human mind would, by using classification techniques)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Digital ecosystem",
      "definition_text":"several software platforms or cloud services that work in tandem across a network",
      "definition_html":"<p><strong><a href=\"/digital-ecosystem\" rel=\"noopener\" target=\"_blank\">Digital ecosystem</a>:</strong> several software platforms or cloud services that work in tandem across a network</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Generative adversarial networks (GAN) ",
      "definition_text":"a type of neural network that can generate seemingly authentic photographs on a superficial scale to human eyes. GAN-generated images take elements of photographic data and shape them into realistic-looking images of people, animals, and places.\u00a0",
      "definition_html":"<p><strong>Generative adversarial networks (GAN): </strong>a type of neural network that can generate seemingly authentic photographs on a superficial scale to human eyes. GAN-generated images take elements of photographic data and shape them into realistic-looking images of people, animals, and places.\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Genetic algorithm ",
      "definition_text":"an algorithm based on principles of genetics that is used to efficiently and quickly find solutions to difficult problems",
      "definition_html":"<p><strong>Genetic algorithm: </strong>an algorithm based on principles of genetics that is used to efficiently and quickly find solutions to difficult problems</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Heuristic",
      "definition_text":"a computer science technique designed for quick, optimal, solution-based problem solving",
      "definition_html":"<p><strong>Heuristic:</strong> a computer science technique designed for quick, optimal, solution-based problem solving</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Image recognition",
      "definition_text":"the process of identifying or detecting an object or feature of an object in an image or video",
      "definition_html":"<p><strong>Image recognition:</strong> the process of identifying or detecting an object or feature of an object in an image or video</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Limited memory",
      "definition_text":"systems with short-term memory limited to a given timeframe",
      "definition_html":"<p><strong>Limited memory:</strong> systems with short-term memory limited to a given timeframe</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Machine learning (ML)",
      "definition_text":"focuses on developing programs that access and use data on their own, leading machines to learn for themselves and improve from learned experiences",
      "definition_html":"<p><strong><a href=\"/machine-learning\" rel=\"noopener\" target=\"_blank\">Machine learning (ML)</a>:</strong> focuses on developing programs that access and use data on their own, leading machines to learn for themselves and improve from learned experiences</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Machine translation ",
      "definition_text":"an application of NLP used for language translation (human-to-human) in text- and speech-based conversations",
      "definition_html":"<p><strong>Machine translation: </strong>an application of NLP used for language translation (human-to-human) in text- and speech-based conversations</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Natural language processing (NLP)",
      "definition_text":"helps computers process, interpret, and analyze human language and its characteristics by using natural language data\u00a0",
      "definition_html":"<p><strong><a href=\"/natural-language-processing\" rel=\"noopener\" target=\"_blank\">Natural language processing (NLP)</a>:</strong> helps computers process, interpret, and analyze human language and its characteristics by using natural language data\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Neural networks",
      "definition_text":"see artificial neural networks ",
      "definition_html":"<p><strong>Neural networks:</strong> see <em>artificial neural networks </em></p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Optical Character Recognition (OCR)",
      "definition_text":"conversion of images of text (typed, handwritten, or printed) either electronically or mechanically, into machine-encoded text\u00a0\u00a0",
      "definition_html":"<p><strong><a href=\"/ocr\" rel=\"noopener\" target=\"_blank\">Optical Character Recognition (OCR)</a>:</strong> conversion of images of text (typed, handwritten, or printed) either electronically or mechanically, into machine-encoded text\u00a0\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Pattern recognition ",
      "definition_text":"automated recognition of patterns found in data",
      "definition_html":"<p><strong>Pattern recognition: </strong>automated recognition of patterns found in data</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Reactive machines ",
      "definition_text":"can analyze, perceive, and make predictions about experiences, but do not store data; they react to situations and act based on the given moment",
      "definition_html":"<p><strong>Reactive machines: </strong>can analyze, perceive, and make predictions about experiences, but do not store data; they react to situations and act based on the given moment</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Recurrent neural network (RNN) ",
      "definition_text":"a type of neural network that makes sense of and creates outputs based on sequential information and pattern recognition",
      "definition_html":"<p><strong>Recurrent neural network (RNN): </strong>a type of neural network that makes sense of and creates outputs based on sequential information and pattern recognition</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Reinforcement learning",
      "definition_text":"a machine learning method where the reinforcement algorithm learns by interacting with its environment, and is then penalized or rewarded based off of decisions it makes",
      "definition_html":"<p><strong>Reinforcement learning:</strong> a machine learning method where the reinforcement algorithm learns by interacting with its environment, and is then penalized or rewarded based off of decisions it makes</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Robotics",
      "definition_text":"focused on the design and manufacturing of robots that exhibit and/or replicate human intelligence and actions",
      "definition_html":"<p><strong><a href=\"/what-is-robotics\" rel=\"noopener\" target=\"_blank\">Robotics</a>:</strong> focused on the design and manufacturing of robots that exhibit and/or replicate human intelligence and actions</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Robotic process automation (RPA) ",
      "definition_text":"uses software with artificial intelligence and machine learning capabilities to perform repetitive tasks once completed by humans\u00a0",
      "definition_html":"<p><strong><a href=\"/robotic-process-automation\" rel=\"noopener\" target=\"_blank\">Robotic process automation (RPA)</a>: </strong>uses software with <a href=\"/artificial-intelligence-and-machine-learning\" rel=\"noopener\" target=\"_blank\">artificial intelligence and machine learning</a> capabilities to perform repetitive tasks once completed by humans\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Strong AI ",
      "definition_text":"see artificial general intelligence (AGI)\u00a0\u00a0",
      "definition_html":"<p><strong>Strong AI: </strong>see<em> artificial general intelligence (AGI)\u00a0\u00a0</em></p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Structured data ",
      "definition_text":"clearly defined data with easily searchable patterns\u00a0",
      "definition_html":"<p><strong>Structured data: </strong>clearly defined data with easily searchable patterns\u00a0</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Supervised learning",
      "definition_text":"a type of machine learning where output datasets teach machines to generate desired outcomes or algorithms (akin to a teacher-student relationship)",
      "definition_html":"<p><strong>Supervised learning:</strong> a type of machine learning where output datasets teach machines to generate desired outcomes or algorithms (akin to a teacher-student relationship)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Transfer learning ",
      "definition_text":"a system that uses previously-learned data and applies it to a new set of tasks",
      "definition_html":"<p><strong>Transfer learning: </strong>a system that uses previously-learned data and applies it to a new set of tasks</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Turing Test ",
      "definition_text":"a test created by computer scientist Alan Turing (1950) to see if machines could exhibit intelligence equal to or indistinguishable from that of a human",
      "definition_html":"<p><strong>Turing Test: </strong>a test created by computer scientist Alan Turing (1950) to see if machines could exhibit intelligence equal to or indistinguishable from that of a human</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Unstructured data ",
      "definition_text":"data without easily searchable patterns (e.g. audio, video, social media content)",
      "definition_html":"<p><strong>Unstructured data: </strong>data without easily searchable patterns (e.g. audio, video, social media content)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Unsupervised learning ",
      "definition_text":"a type of machine learning where an algorithm is trained with information that is neither classified nor labeled, thus allowing the algorithm to act without guidance (or supervision)",
      "definition_html":"<p><strong>Unsupervised learning: </strong>a type of machine learning where an algorithm is trained with information that is neither classified nor labeled, thus allowing the algorithm to act without guidance (or supervision)</p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"Weak AI ",
      "definition_text":"see artificial narrow intelligence (ANI)",
      "definition_html":"<p><strong>Weak AI: </strong>see <em>artificial narrow intelligence (ANI)</em></p>",
      "link":"https://learn.g2.com/artificial-intelligence-terms",
      "source":"learng2 Glossary of Artificial Intelligence Terms"
   },
   {
      "terms":"accuracy",
      "definition_text":"Percentage of correct predictions made by the model.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-accuracy\">\n<dt>Accuracy</dt>\n<dd>Percentage of correct predictions made by the model.</dd>\n</dl>",
         "<dt>Accuracy</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"algorithm",
      "definition_text":"A method, function, or series of instructions used to generate a machine learning model. Examples include linear regression, decision trees, support vector machines, and neural networks.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-algorithm\">\n<dt>Algorithm</dt>\n<dd>A method, function, or series of instructions used to generate a machine learning <a class=\"reference internal\" href=\"#glossary-model\"><span class=\"std std-ref\">model</span></a>. Examples include linear regression, decision trees, support vector machines, and neural networks.</dd>\n</dl>",
         "<dt>Algorithm</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"attribute",
      "definition_text":"A quality describing an observation (e.g. color, size, weight). In Excel terms, these are column headers.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-attribute\">\n<dt>Attribute</dt>\n<dd>A quality describing an observation (e.g. color, size, weight). In Excel terms, these are column headers.</dd>\n</dl>",
         "<dt>Attribute</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"bias metric",
      "definition_text":"What is the average difference between your predictions and the correct value for that observation?\n\nLow bias could mean every prediction is correct. It could also mean half of your predictions are above their actual values and half are below, in equal proportion, resulting in low average difference.\nHigh bias (with low variance) suggests your model may be underfitting and you\u2019re using the wrong architecture for the job.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-bias-metric\">\n<dt>Bias metric</dt>\n<dd><p class=\"first\">What is the average difference between your predictions and the correct value for that observation?</p>\n<ul class=\"last simple\">\n<li><strong>Low bias</strong> could mean every prediction is correct. It could also mean half of your predictions are above their actual values and half are below, in equal proportion, resulting in low average difference.</li>\n<li><strong>High bias</strong> (with low variance) suggests your model may be underfitting and you\u00e2\u0080\u0099re using the wrong architecture for the job.</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Bias metric</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"bias term",
      "definition_text":"Allow models to represent patterns that do not pass through the origin. For example, if all my features were 0, would my output also be zero? Is it possible there is some base value upon which my features have an effect? Bias terms typically accompany weights and are attached to neurons or filters.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-bias-term\">\n<dt>Bias term</dt>\n<dd>Allow models to represent patterns that do not pass through the origin. For example, if all my features were 0, would my output also be zero? Is it possible there is some base value upon which my features have an effect? Bias terms typically accompany weights and are attached to neurons or filters.</dd>\n</dl>",
         "<dt>Bias term</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"categorical variables",
      "definition_text":"Variables with a discrete set of possible values. Can be ordinal (order matters) or nominal (order doesn\u2019t matter).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-categorical-variables\">\n<dt>Categorical Variables</dt>\n<dd>Variables with a discrete set of possible values. Can be ordinal (order matters) or nominal (order doesn\u00e2\u0080\u0099t matter).</dd>\n</dl>",
         "<dt>Categorical Variables</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"classification",
      "definition_text":"Predicting a categorical output.\n\nBinary classification predicts one of two possible outcomes (e.g. is the email spam or not spam?)\nMulti-class classification predicts one of multiple possible outcomes (e.g. is this a photo of a cat, dog, horse or human?)",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-classification\">\n<dt>Classification</dt>\n<dd><p class=\"first\">Predicting a categorical output.</p>\n<ul class=\"last simple\">\n<li><strong>Binary classification</strong> predicts one of two possible outcomes (e.g. is the email spam or not spam?)</li>\n<li><strong>Multi-class classification</strong> predicts one of multiple possible outcomes (e.g. is this a photo of a cat, dog, horse or human?)</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Classification</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"classification threshold",
      "definition_text":"The lowest probability value at which we\u2019re comfortable asserting a positive classification. For example, if the predicted probability of being diabetic is > 50%, return True, otherwise return False.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-classification-threshold\">\n<dt>Classification Threshold</dt>\n<dd>The lowest probability value at which we\u00e2\u0080\u0099re comfortable asserting a positive classification. For example, if the predicted probability of being diabetic is &gt; 50%, return True, otherwise return False.</dd>\n</dl>",
         "<dt>Classification Threshold</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"clustering",
      "definition_text":"Unsupervised grouping of data into buckets.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-clustering\">\n<dt>Clustering</dt>\n<dd>Unsupervised grouping of data into buckets.</dd>\n</dl>",
         "<dt>Clustering</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"confusion matrix",
      "definition_text":"Table that describes the performance of a classification model by grouping predictions into 4 categories.\n\nTrue Positives: we correctly predicted they do have diabetes\nTrue Negatives: we correctly predicted they don\u2019t have diabetes\nFalse Positives: we incorrectly predicted they do have diabetes (Type I error)\nFalse Negatives: we incorrectly predicted they don\u2019t have diabetes (Type II error)",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-confusion-matrix\">\n<dt>Confusion Matrix</dt>\n<dd><p class=\"first\">Table that describes the performance of a classification model by grouping predictions into 4 categories.</p>\n<ul class=\"last simple\">\n<li><strong>True Positives</strong>: we <em>correctly</em> predicted they do have diabetes</li>\n<li><strong>True Negatives</strong>: we <em>correctly</em> predicted they don\u00e2\u0080\u0099t have diabetes</li>\n<li><strong>False Positives</strong>: we <em>incorrectly</em> predicted they do have diabetes (Type I error)</li>\n<li><strong>False Negatives</strong>: we <em>incorrectly</em> predicted they don\u00e2\u0080\u0099t have diabetes (Type II error)</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Confusion Matrix</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"continuous variables",
      "definition_text":"Variables with a range of possible values defined by a number scale (e.g. sales, lifespan).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-continuous-variables\">\n<dt>Continuous Variables</dt>\n<dd>Variables with a range of possible values defined by a number scale (e.g. sales, lifespan).</dd>\n</dl>",
         "<dt>Continuous Variables</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"convergence",
      "definition_text":"A state reached during the training of a model when the loss changes very little between each iteration.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-convergence\">\n<dt>Convergence</dt>\n<dd>A state reached during the training of a model when the <a class=\"reference internal\" href=\"#glossary-loss\"><span class=\"std std-ref\">loss</span></a> changes very little between each iteration.</dd>\n</dl>",
         "<dt>Convergence</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"deduction",
      "definition_text":"A top-down approach to answering questions or solving problems. A logic technique that starts with a theory and tests that theory with observations to derive a conclusion. E.g. We suspect X, but we need to test our hypothesis before coming to any conclusions.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-deduction\">\n<dt>Deduction</dt>\n<dd>A top-down approach to answering questions or solving problems. A logic technique that starts with a theory and tests that theory with observations to derive a conclusion. E.g. We suspect X, but we need to test our hypothesis before coming to any conclusions.</dd>\n</dl>",
         "<dt>Deduction</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"deep learning",
      "definition_text":"Deep Learning is derived from one machine learning algorithm called perceptron or multi layer perceptron that gain more and more attention nowadays because of its success in different fields like, computer vision to signal processing and medical diagnosis to self-driving cars. As all other AI algorithms deep learning is from decades, but now today we have more and more data and cheap computing power that make this algorithm really powerful to achieve state of the art accuracy. In modern world this algorithm knowns as artificial neural network. deep learning is much more than traditional artificial neural network. But it was highly influenced by machine learning\u2019s neural network and perceptron network.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-deep-learning\">\n<dt>Deep Learning</dt>\n<dd>Deep Learning is derived from one machine learning algorithm called perceptron or multi layer perceptron that gain more and more attention nowadays because of its success in different fields like, computer vision to signal processing and medical diagnosis to self-driving cars. As all other AI algorithms deep learning is from decades, but now today we have more and more data and cheap computing power that make this algorithm really powerful to achieve state of the art accuracy. In modern world this algorithm knowns as artificial neural network. deep learning is much more than traditional artificial neural network. But it was highly influenced by machine learning\u00e2\u0080\u0099s neural network and perceptron network.</dd>\n</dl>",
         "<dt>Deep Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"dimension",
      "definition_text":"Dimention for machine learning and data scientist is differ from physics, here Dimention of data means how much feature you have in you data ocean(data-set). e.g in case of object detection application, flatten image size and color channel(e.g 28*28*3) is a feature of the input set. In case of house price prediction (maybe) house size is the data-set so we call it 1 dimentional data.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-dimension\">\n<dt>Dimension</dt>\n<dd>Dimention for machine learning and data scientist is differ from physics, here Dimention of data means how much feature you have in you data ocean(data-set). e.g in case of object detection application, flatten image size and color channel(e.g 28*28*3) is a feature of the input set. In case of house price prediction (maybe) house size is the data-set so we call it 1 dimentional data.</dd>\n</dl>",
         "<dt>Dimension</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"epoch",
      "definition_text":"An epoch describes the number of times the algorithm sees the entire data set.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-epoch\">\n<dt>Epoch</dt>\n<dd>An epoch describes the number of times the algorithm sees the entire data set.</dd>\n</dl>",
         "<dt>Epoch</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"extrapolation",
      "definition_text":"Making predictions outside the range of a dataset. E.g. My dog barks, so all dogs must bark. In machine learning we often run into trouble when we extrapolate outside the range of our training data.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-extrapolation\">\n<dt>Extrapolation</dt>\n<dd>Making predictions outside the range of a dataset. E.g. My dog barks, so all dogs must bark. In machine learning we often run into trouble when we extrapolate outside the range of our training data.</dd>\n</dl>",
         "<dt>Extrapolation</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"false positive rate",
      "definition_text":"Defined as\n\n\ud835\udc39\ud835\udc43\ud835\udc45=1\u2212\ud835\udc46\ud835\udc5d\ud835\udc52\ud835\udc50\ud835\udc56\ud835\udc53\ud835\udc56\ud835\udc50\ud835\udc56\ud835\udc61\ud835\udc66=\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60+\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc41\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60FPR=1\u2212Specificity=FalsePositivesFalsePositives+TrueNegatives\nThe False Positive Rate forms the x-axis of the ROC curve.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-false-positive-rate\">\n<dt>False Positive Rate</dt>\n<dd><p class=\"first\">Defined as</p>\n<div class=\"math notranslate nohighlight\">\n\\[FPR = 1 - Specificity = \\frac{False Positives}{False Positives + True Negatives}\\]</div>\n<p class=\"last\">The False Positive Rate forms the x-axis of the <a class=\"reference internal\" href=\"#glossary-roc-curve\"><span class=\"std std-ref\">ROC curve</span></a>.</p>\n</dd>\n</dl>",
         "<dt>False Positive Rate</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"feature",
      "definition_text":"With respect to a dataset, a feature represents an attribute and value combination. Color is an attribute. \u201cColor is blue\u201d is a feature. In Excel terms, features are similar to cells. The term feature has other definitions in different contexts.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-feature\">\n<dt>Feature</dt>\n<dd>With respect to a dataset, a feature represents an <a class=\"reference internal\" href=\"#glossary-attribute\"><span class=\"std std-ref\">attribute</span></a> and value combination. Color is an attribute. \u00e2\u0080\u009cColor is blue\u00e2\u0080\u009d is a feature. In Excel terms, features are similar to cells. The term feature has other definitions in different contexts.</dd>\n</dl>",
         "<dt>Feature</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"feature selection",
      "definition_text":"Feature selection is the process of selecting relevant features from a data-set for creating a Machine Learning model.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-feature-selection\">\n<dt>Feature Selection</dt>\n<dd>Feature selection is the process of selecting relevant features from a data-set for creating a Machine Learning model.</dd>\n</dl>",
         "<dt>Feature Selection</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"feature vector",
      "definition_text":"A list of features describing an observation with multiple attributes. In Excel we call this a row.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-feature-vector\">\n<dt>Feature Vector</dt>\n<dd>A list of features describing an observation with multiple attributes. In Excel we call this a row.</dd>\n</dl>",
         "<dt>Feature Vector</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"gradient accumulation",
      "definition_text":"A mechanism to split the batch of samples\u2014used for training a neural network\u2014into several mini-batches of samples that will be run sequentially. This is used to enable using large batch sizes that require more GPU memory than available.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-gradient-accumulation\">\n<dt>Gradient Accumulation</dt>\n<dd>A mechanism to split the batch of samples\u00e2\u0080\u0094used for training a neural network\u00e2\u0080\u0094into several mini-batches of samples that will be run sequentially. This is used to enable using large batch sizes that require more GPU memory than available.</dd>\n</dl>",
         "<dt>Gradient Accumulation</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"hyperparameters",
      "definition_text":"Hyperparameters are higher-level properties of a model such as how fast it can learn (learning rate) or complexity of a model. The depth of trees in a Decision Tree or number of hidden layers in a Neural Networks are examples of hyper parameters.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-hyperparameters\">\n<dt>Hyperparameters</dt>\n<dd>Hyperparameters are higher-level properties of a model such as how fast it can learn (learning rate) or complexity of a model. The depth of trees in a Decision Tree or number of hidden layers in a Neural Networks are examples of hyper parameters.</dd>\n</dl>",
         "<dt>Hyperparameters</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"induction",
      "definition_text":"A bottoms-up approach to answering questions or solving problems. A logic technique that goes from observations to theory. E.g. We keep observing X, so we infer that Y must be True.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-induction\">\n<dt>Induction</dt>\n<dd>A bottoms-up approach to answering questions or solving problems. A logic technique that goes from observations to theory. E.g. We keep observing X, so we infer that Y must be True.</dd>\n</dl>",
         "<dt>Induction</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"instance",
      "definition_text":"A data point, row, or sample in a dataset. Another term for observation.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-instance\">\n<dt>Instance</dt>\n<dd>A data point, row, or sample in a dataset. Another term for <a class=\"reference internal\" href=\"#glossary-observation\"><span class=\"std std-ref\">observation</span></a>.</dd>\n</dl>",
         "<dt>Instance</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"label",
      "definition_text":"The \u201canswer\u201d portion of an observation in supervised learning. For example, in a dataset used to classify flowers into different species, the features might include the petal length and petal width, while the label would be the flower\u2019s species.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-label\">\n<dt>Label</dt>\n<dd>The \u00e2\u0080\u009canswer\u00e2\u0080\u009d portion of an <a class=\"reference internal\" href=\"#glossary-observation\"><span class=\"std std-ref\">observation</span></a> in <a class=\"reference internal\" href=\"#glossary-supervised-learning\"><span class=\"std std-ref\">supervised learning</span></a>. For example, in a dataset used to classify flowers into different species, the features might include the petal length and petal width, while the label would be the flower\u00e2\u0080\u0099s species.</dd>\n</dl>",
         "<dt>Label</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"learning rate",
      "definition_text":"The size of the update steps to take during optimization loops like Gradient Descent. With a high learning rate we can cover more ground each step, but we risk overshooting the lowest point since the slope of the hill is constantly changing. With a very low learning rate, we can confidently move in the direction of the negative gradient since we are recalculating it so frequently. A low learning rate is more precise, but calculating the gradient is time-consuming, so it will take us a very long time to get to the bottom.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-learning-rate\">\n<dt>Learning Rate</dt>\n<dd>The size of the update steps to take during optimization loops like <a class=\"reference internal\" href=\"gradient_descent.html\"><span class=\"doc\">Gradient Descent</span></a>. With a high learning rate we can cover more ground each step, but we risk overshooting the lowest point since the slope of the hill is constantly changing. With a very low learning rate, we can confidently move in the direction of the negative gradient since we are recalculating it so frequently. A low learning rate is more precise, but calculating the gradient is time-consuming, so it will take us a very long time to get to the bottom.</dd>\n</dl>",
         "<dt>Learning Rate</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"loss",
      "definition_text":"Loss = true_value(from data-set)- predicted value(from ML-model)  The lower the loss, the better a model (unless the model has over-fitted to the training data). The loss is calculated on training and validation and its interpretation is how well the model is doing for these two sets. Unlike accuracy, loss is not a percentage. It is a summation of the errors made for each example in training or validation sets.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-loss\">\n<dt>Loss</dt>\n<dd>Loss = true_value(from data-set)- predicted value(from ML-model)  The lower the loss, the better a model (unless the model has over-fitted to the training data). The loss is calculated on training and validation and its interpretation is how well the model is doing for these two sets. Unlike accuracy, loss is not a percentage. It is a summation of the errors made for each example in training or validation sets.</dd>\n</dl>",
         "<dt>Loss</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"machine learning",
      "definition_text":"Mitchell (1997) provides a succinct definition: \u201cA computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.\u201d In simple language machine learning is a field in which human made algorithms have an ability learn by itself or predict future for unseen data.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-machine-learning\">\n<dt>Machine Learning</dt>\n<dd>Mitchell (1997) provides a succinct definition: \u00e2\u0080\u009cA computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.\u00e2\u0080\u009d In simple language machine learning is a field in which human made algorithms have an ability learn by itself or predict future for unseen data.</dd>\n</dl>",
         "<dt>Machine Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"model",
      "definition_text":"A data structure that stores a representation of a dataset (weights and biases). Models are created/learned when you train an algorithm on a dataset.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-model\">\n<dt>Model</dt>\n<dd>A data structure that stores a representation of a dataset (weights and biases). Models are created/learned when you train an algorithm on a dataset.</dd>\n</dl>",
         "<dt>Model</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"neural networks",
      "definition_text":"Neural Networks are mathematical algorithms modeled after the brain\u2019s architecture, designed to recognize patterns and relationships in data.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-neural-networks\">\n<dt>Neural Networks</dt>\n<dd>Neural Networks are mathematical algorithms modeled after the brain\u00e2\u0080\u0099s architecture, designed to recognize patterns and relationships in data.</dd>\n</dl>",
         "<dt>Neural Networks</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"normalization",
      "definition_text":"Restriction of the values of weights in regression to avoid overfitting and improving computation speed.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-normalization\">\n<dt>Normalization</dt>\n<dd>Restriction of the values of weights in regression to avoid overfitting and improving computation speed.</dd>\n</dl>",
         "<dt>Normalization</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"noise",
      "definition_text":"Any irrelevant information or randomness in a dataset which obscures the underlying pattern.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-noise\">\n<dt>Noise</dt>\n<dd>Any irrelevant information or randomness in a dataset which obscures the underlying pattern.</dd>\n</dl>",
         "<dt>Noise</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"null accuracy",
      "definition_text":"Baseline accuracy that can be achieved by always predicting the most frequent class (\u201cB has the highest frequency, so lets guess B every time\u201d).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-null-accuracy\">\n<dt>Null Accuracy</dt>\n<dd>Baseline accuracy that can be achieved by always predicting the most frequent class (\u00e2\u0080\u009cB has the highest frequency, so lets guess B every time\u00e2\u0080\u009d).</dd>\n</dl>",
         "<dt>Null Accuracy</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"observation",
      "definition_text":"A data point, row, or sample in a dataset. Another term for instance.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-observation\">\n<dt>Observation</dt>\n<dd>A data point, row, or sample in a dataset. Another term for <a class=\"reference internal\" href=\"#glossary-instance\"><span class=\"std std-ref\">instance</span></a>.</dd>\n</dl>",
         "<dt>Observation</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"outlier",
      "definition_text":"An observation that deviates significantly from other observations in the dataset.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-outlier\">\n<dt>Outlier</dt>\n<dd>An observation that deviates significantly from other observations in the dataset.</dd>\n</dl>",
         "<dt>Outlier</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"overfitting",
      "definition_text":"Overfitting occurs when your model learns the training data too well and incorporates details and noise specific to your dataset. You can tell a model is overfitting when it performs great on your training/validation set, but poorly on your test set (or new real-world data).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-overfitting\">\n<dt>Overfitting</dt>\n<dd>Overfitting occurs when your model learns the training data too well and incorporates details and noise specific to your dataset. You can tell a model is overfitting when it performs great on your training/validation set, but poorly on your test set (or new real-world data).</dd>\n</dl>",
         "<dt>Overfitting</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"parameters",
      "definition_text":"Parameters are properties of training data learned by training a machine learning model or classifier. They are adjusted using optimization algorithms and unique to each experiment.\nExamples of parameters include:\n\nweights in an artificial neural network\nsupport vectors in a support vector machine\ncoefficients in a linear or logistic regression",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-parameters\">\n<dt>Parameters</dt>\n<dd><p class=\"first\">Parameters are properties of training data learned by training a machine learning model or classifier. They are adjusted using optimization algorithms and unique to each experiment.</p>\n<p>Examples of parameters include:</p>\n<ul class=\"last simple\">\n<li>weights in an artificial neural network</li>\n<li>support vectors in a support vector machine</li>\n<li>coefficients in a linear or logistic regression</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Parameters</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"precision",
      "definition_text":"In the context of binary classification (Yes/No), precision measures the model\u2019s performance at classifying positive observations (i.e. \u201cYes\u201d). In other words, when a positive value is predicted, how often is the prediction correct? We could game this metric by only returning positive for the single observation we are most confident in.\n\n\ud835\udc43=\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60+\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60P=TruePositivesTruePositives+FalsePositives",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-precision\">\n<dt>Precision</dt>\n<dd><p class=\"first\">In the context of binary classification (Yes/No), precision measures the model\u00e2\u0080\u0099s performance at classifying positive observations (i.e. \u00e2\u0080\u009cYes\u00e2\u0080\u009d). In other words, when a positive value is predicted, how often is the prediction correct? We could game this metric by only returning positive for the single observation we are most confident in.</p>\n<div class=\"last math notranslate nohighlight\">\n\\[P = \\frac{True Positives}{True Positives + False Positives}\\]</div>\n</dd>\n</dl>",
         "<dt>Precision</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"recall",
      "definition_text":"Also called sensitivity. In the context of binary classification (Yes/No), recall measures how \u201csensitive\u201d the classifier is at detecting positive instances. In other words, for all the true observations in our sample, how many did we \u201ccatch.\u201d We could game this metric by always classifying observations as positive.\n\n\ud835\udc45=\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60+\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc41\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60R=TruePositivesTruePositives+FalseNegatives",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-recall\">\n<dt>Recall</dt>\n<dd><p class=\"first\">Also called sensitivity. In the context of binary classification (Yes/No), recall measures how \u00e2\u0080\u009csensitive\u00e2\u0080\u009d the classifier is at detecting positive instances. In other words, for all the true observations in our sample, how many did we \u00e2\u0080\u009ccatch.\u00e2\u0080\u009d We could game this metric by always classifying observations as positive.</p>\n<div class=\"last math notranslate nohighlight\">\n\\[R = \\frac{True Positives}{True Positives + False Negatives}\\]</div>\n</dd>\n</dl>",
         "<dt>Recall</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"recall vs precision",
      "definition_text":"Say we are analyzing Brain scans and trying to predict whether a person has a tumor (True) or not (False). We feed it into our model and our model starts guessing.\n\nPrecision is the % of True guesses that were actually correct! If we guess 1 image is True out of 100 images and that image is actually True, then our precision is 100%! Our results aren\u2019t helpful however because we missed 10 brain tumors! We were super precise when we tried, but we didn\u2019t try hard enough.\nRecall, or Sensitivity, provides another lens which with to view how good our model is. Again let\u2019s say there are 100 images, 10 with brain tumors, and we correctly guessed 1 had a brain tumor. Precision is 100%, but recall is 10%. Perfect recall requires that we catch all 10 tumors!",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-recall-vs-precision\">\n<dt>Recall vs Precision</dt>\n<dd><p class=\"first\">Say we are analyzing Brain scans and trying to predict whether a person has a tumor (True) or not (False). We feed it into our model and our model starts guessing.</p>\n<ul class=\"last simple\">\n<li><strong>Precision</strong> is the % of True guesses that were actually correct! If we guess 1 image is True out of 100 images and that image is actually True, then our precision is 100%! Our results aren\u00e2\u0080\u0099t helpful however because we missed 10 brain tumors! We were super precise when we tried, but we didn\u00e2\u0080\u0099t try hard enough.</li>\n<li><strong>Recall</strong>, or Sensitivity, provides another lens which with to view how good our model is. Again let\u00e2\u0080\u0099s say there are 100 images, 10 with brain tumors, and we correctly guessed 1 had a brain tumor. Precision is 100%, but recall is 10%. Perfect recall requires that we catch all 10 tumors!</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Recall vs Precision</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"regression",
      "definition_text":"Predicting a continuous output (e.g. price, sales).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-regression\">\n<dt>Regression</dt>\n<dd>Predicting a continuous output (e.g. price, sales).</dd>\n</dl>",
         "<dt>Regression</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"regularization",
      "definition_text":"Regularization is a technique utilized to combat the overfitting problem. This is achieved by adding a complexity term to the loss function that gives a bigger loss for more complex models",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-regularization\">\n<dt>Regularization</dt>\n<dd>Regularization is a technique utilized to combat the overfitting problem. This is achieved by adding a complexity term to the loss function that gives a bigger loss for more complex models</dd>\n</dl>",
         "<dt>Regularization</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"reinforcement learning",
      "definition_text":"Training a model to maximize a reward via iterative trial and error.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-reinforcement-learning\">\n<dt>Reinforcement Learning</dt>\n<dd>Training a model to maximize a reward via iterative trial and error.</dd>\n</dl>",
         "<dt>Reinforcement Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"roc curve",
      "definition_text":"A plot of the true positive rate against the false positive rate at all classification thresholds. This is used to evaluate the performance of a classification model at different classification thresholds. The area under the ROC curve can be interpreted as the probability that the model correctly distinguishes between a randomly chosen positive observation (e.g. \u201cspam\u201d) and a randomly chosen negative observation (e.g. \u201cnot spam\u201d).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-roc-curve\">\n<dt>ROC (Receiver Operating Characteristic) Curve</dt>\n<dd>A plot of the <a class=\"reference internal\" href=\"#glossary-true-positive-rate\"><span class=\"std std-ref\">true positive rate</span></a> against the <a class=\"reference internal\" href=\"#glossary-false-positive-rate\"><span class=\"std std-ref\">false positive rate</span></a> at all <a class=\"reference internal\" href=\"#glossary-classification-threshold\"><span class=\"std std-ref\">classification thresholds</span></a>. This is used to evaluate the performance of a classification model at different classification thresholds. The area under the ROC curve can be interpreted as the probability that the model correctly distinguishes between a randomly chosen positive observation (e.g. \u00e2\u0080\u009cspam\u00e2\u0080\u009d) and a randomly chosen negative observation (e.g. \u00e2\u0080\u009cnot spam\u00e2\u0080\u009d).</dd>\n</dl>",
         "<dt>ROC (Receiver Operating Characteristic) Curve</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"segmentation",
      "definition_text":"Contribute a definition!",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-segmentation\">\n<dt>Segmentation</dt>\n<dd>Contribute a definition!</dd>\n</dl>",
         "<dt>Segmentation</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"specificity",
      "definition_text":"In the context of binary classification (Yes/No), specificity measures the model\u2019s performance at classifying negative observations (i.e. \u201cNo\u201d). In other words, when the correct label is negative, how often is the prediction correct? We could game this metric if we predict everything as negative.\n\n\ud835\udc46=\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc41\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc41\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60+\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60S=TrueNegativesTrueNegatives+FalsePositives",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-specificity\">\n<dt>Specificity</dt>\n<dd><p class=\"first\">In the context of binary classification (Yes/No), specificity measures the model\u00e2\u0080\u0099s performance at classifying negative observations (i.e. \u00e2\u0080\u009cNo\u00e2\u0080\u009d). In other words, when the correct label is negative, how often is the prediction correct? We could game this metric if we predict everything as negative.</p>\n<div class=\"last math notranslate nohighlight\">\n\\[S = \\frac{True Negatives}{True Negatives + False Positives}\\]</div>\n</dd>\n</dl>",
         "<dt>Specificity</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"supervised learning",
      "definition_text":"Training a model using a labeled dataset.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-supervised-learning\">\n<dt>Supervised Learning</dt>\n<dd>Training a model using a labeled dataset.</dd>\n</dl>",
         "<dt>Supervised Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"test set",
      "definition_text":"A set of observations used at the end of model training and validation to assess the predictive power of your model. How generalizable is your model to unseen data?",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-test-set\">\n<dt>Test Set</dt>\n<dd>A set of observations used at the end of model training and validation to assess the predictive power of your model. How generalizable is your model to unseen data?</dd>\n</dl>",
         "<dt>Test Set</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"training set",
      "definition_text":"A set of observations used to generate machine learning models.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-training-set\">\n<dt>Training Set</dt>\n<dd>A set of observations used to generate machine learning models.</dd>\n</dl>",
         "<dt>Training Set</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"transfer learning",
      "definition_text":"A machine learning method where a model developed for a task is reused as the starting point for a model on a second task. In transfer learning, we take the pre-trained weights of an already trained model (one that has been trained on millions of images belonging to 1000\u2019s of classes, on several high power GPU\u2019s for several days) and use these already learned features to predict new classes.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-transfer-learning\">\n<dt>Transfer Learning</dt>\n<dd>A machine learning method where a model developed for a task is reused as the starting point for a model on a second task. In transfer learning, we take the pre-trained weights of an already trained model (one that has been trained on millions of images belonging to 1000\u00e2\u0080\u0099s of classes, on several high power GPU\u00e2\u0080\u0099s for several days) and use these already learned features to predict new classes.</dd>\n</dl>",
         "<dt>Transfer Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"true positive rate",
      "definition_text":"Another term for recall, i.e.\n\n\ud835\udc47\ud835\udc43\ud835\udc45=\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60\ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\ud835\udc43\ud835\udc5c\ud835\udc60\ud835\udc56\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60+\ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\ud835\udc41\ud835\udc52\ud835\udc54\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc63\ud835\udc52\ud835\udc60TPR=TruePositivesTruePositives+FalseNegatives\nThe True Positive Rate forms the y-axis of the ROC curve.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-true-positive-rate\">\n<dt>True Positive Rate</dt>\n<dd><p class=\"first\">Another term for <a class=\"reference internal\" href=\"#glossary-recall\"><span class=\"std std-ref\">recall</span></a>, i.e.</p>\n<div class=\"math notranslate nohighlight\">\n\\[TPR = \\frac{True Positives}{True Positives + False Negatives}\\]</div>\n<p class=\"last\">The True Positive Rate forms the y-axis of the <a class=\"reference internal\" href=\"#glossary-roc-curve\"><span class=\"std std-ref\">ROC curve</span></a>.</p>\n</dd>\n</dl>",
         "<dt>True Positive Rate</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"type 1 error",
      "definition_text":"False Positives. Consider a company optimizing hiring practices to reduce false positives in job offers. A type 1 error occurs when candidate seems good and they hire him, but he is actually bad.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-type-1-error\">\n<dt>Type 1 Error</dt>\n<dd>False Positives. Consider a company optimizing hiring practices to reduce false positives in job offers. A type 1 error occurs when candidate seems good and they hire him, but he is actually bad.</dd>\n</dl>",
         "<dt>Type 1 Error</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"type 2 error",
      "definition_text":"False Negatives. The candidate was great but the company passed on him.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-type-2-error\">\n<dt>Type 2 Error</dt>\n<dd>False Negatives. The candidate was great but the company passed on him.</dd>\n</dl>",
         "<dt>Type 2 Error</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"underfitting",
      "definition_text":"Underfitting occurs when your model over-generalizes and fails to incorporate relevant variations in your data that would give your model more predictive power. You can tell a model is underfitting when it performs poorly on both training and test sets.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-underfitting\">\n<dt>Underfitting</dt>\n<dd>Underfitting occurs when your model over-generalizes and fails to incorporate relevant variations in your data that would give your model more predictive power. You can tell a model is underfitting when it performs poorly on both training and test sets.</dd>\n</dl>",
         "<dt>Underfitting</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"uat",
      "definition_text":"A neural network with one hidden layer can approximate any continuous function but only for inputs in a specific range. If you train a network on inputs between -2 and 2, then it will work well for inputs in the same range, but you can\u2019t expect it to generalize to other inputs without retraining the model or adding more hidden neurons.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-uat\">\n<dt>Universal Approximation Theorem</dt>\n<dd>A neural network with one hidden layer can approximate any continuous function but only for inputs in a specific range. If you train a network on inputs between -2 and 2, then it will work well for inputs in the same range, but you can\u00e2\u0080\u0099t expect it to generalize to other inputs without retraining the model or adding more hidden neurons.</dd>\n</dl>",
         "<dt>Universal Approximation Theorem</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"unsupervised learning",
      "definition_text":"Training a model to find patterns in an unlabeled dataset (e.g. clustering).",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-unsupervised-learning\">\n<dt>Unsupervised Learning</dt>\n<dd>Training a model to find patterns in an unlabeled dataset (e.g. clustering).</dd>\n</dl>",
         "<dt>Unsupervised Learning</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"validation set",
      "definition_text":"A set of observations used during model training to provide feedback on how well the current parameters generalize beyond the training set. If training error decreases but validation error increases, your model is likely overfitting and you should pause training.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-validation-set\">\n<dt>Validation Set</dt>\n<dd>A set of observations used during model training to provide feedback on how well the current parameters generalize beyond the training set. If training error decreases but validation error increases, your model is likely overfitting and you should pause training.</dd>\n</dl>",
         "<dt>Validation Set</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"variance",
      "definition_text":"How tightly packed are your predictions for a particular observation relative to each other?\n\nLow variance suggests your model is internally consistent, with predictions varying little from each other after every iteration.\nHigh variance (with low bias) suggests your model may be overfitting and reading too deeply into the noise found in every training set.",
      "definition_html":[
         "<dl class=\"docutils\" id=\"glossary-variance\">\n<dt>Variance</dt>\n<dd><p class=\"first\">How tightly packed are your predictions for a particular observation relative to each other?</p>\n<ul class=\"last simple\">\n<li><strong>Low variance</strong> suggests your model is internally consistent, with predictions varying little from each other after every iteration.</li>\n<li><strong>High variance</strong> (with low bias) suggests your model may be overfitting and reading too deeply into the noise found in every training set.</li>\n</ul>\n</dd>\n</dl>",
         "<dt>Variance</dt>"
      ],
      "link":"https://ml-cheatsheet.readthedocs.io/en/latest/glossary.html",
      "source":"ML-Cheatsheet Machine Learning Glossary"
   },
   {
      "terms":"NLP",
      "definition_text":"NLP, or Natural Language Processing, refers to all the tasks that allow a computer to process the data in human language. It is therefore a computer discipline in its own right, covering many subjects and methods, which are at the origin of search engines in particular. Some authors distinguish between so-called “low-level” tasks allowing a simple representation of the text by a computer, and “high-level” tasks allowing the machine to “understand” the text.",
      "definition_html":"<p>NLP, or <strong>Natural Language Processing</strong>, refers to all the tasks that allow a computer to process the data in human language. It is therefore a computer discipline in its own right, covering many subjects and methods, which are at the origin of search engines in particular. Some authors distinguish between so-called “low-level” tasks allowing a simple representation of the text by a computer, and “high-level” tasks allowing the machine to “understand” the text.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#1",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"NLU",
      "definition_text":"A Natural Language Understanding (NLU) module extracts a simplified semantic representation from textual statements.\nLet’s take the example of a chatbot that receives the following request: \nHello, I’m looking to book a Chinese restaurant near the 11th arrondissement in Paris for tomorrow at 8:00 p.m., for 4 people.Is that possible?”\nNLU will allow the bot to identify the user’s intention (find a restaurant) and qualify it by a list of entities (type of restaurant, number of people, location etc…).",
      "definition_html":"<p>A <strong>Natural Language Understanding</strong> (NLU) module extracts a simplified semantic representation from textual statements.<br>\nLet’s take the example of a chatbot that receives the following request:<br>\n“Hello, I’m looking to book a Chinese restaurant near the 11th arrondissement in Paris for tomorrow at 8:00 p.m., for 4 people.Is that possible?”<br>\nNLU will allow the bot to identify the user’s intention (find a restaurant) and qualify it by a list of entities (type of restaurant, number of people, location etc…).</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#2",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Semantic Analysis",
      "definition_text":"Semantic Analysis is the branch of natural language processing that aims to “understand” the meaning of a text. Quotation marks are required here, because the understanding of text for a machine is much less rich than what happens when a human is reading a text.",
      "definition_html":"<p><strong>Semantic Analysis</strong> is the branch of natural language processing that aims to “understand” the meaning of a text. Quotation marks are required here, because the understanding of text for a machine is much less rich than what happens when a human is reading a text.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#3",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"NLG",
      "definition_text":"Natural Language Generation or NLG is the counterpart of semantic analysis: its objective is to transform data into text, with a rendering that should not be distinguished from a human creation. Nothing is more annoying, when you receive a letter or an email, than the moment when you realize that it was written by a machine…",
      "definition_html":"<p><strong>Natural Language Generation</strong> or NLG is the counterpart of semantic analysis: its objective is to transform data into text, with a rendering that should not be distinguished from a human creation. Nothing is more annoying, when you receive a letter or an email, than the moment when you realize that it was written by a machine…</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#4",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Sentiment Analysis",
      "definition_text":"Sentiment Analysis, sometimes called “opinion mining”, in the field of natural language processing, consists of identifying whether a statement (a sentence, a tweet, a piece of feedback…) is positive, neutral or negative according to a certain prism.\nHumans can express their opinions spontaneously (for example by writing on social networks or sending complaint emails) or in response to a solicitation (in particular following a satisfaction survey). What opinions are expressed by the speaker? Is it a positive, negative, neutral or mixed feeling? What exactly is this opinion about? What emotions emerge between joy, anger, fear, surprise, sadness, disgust, trust…? Is a consumer who writes “I am surprised that I still haven’t received a response” surprised, disappointed or angry, or does he or she feel several of these emotions simultaneously?\nFrom a technical point of view, sentiment analysis can be seen as a special case of relationship extraction. Indeed, an opinion links a speaker who expresses himself and the objects of the world concerned (market product, service offered, political action…)",
      "definition_html":"<p><strong>Sentiment Analysis</strong>, sometimes called “opinion mining”, in the field of natural language processing, consists of identifying whether a statement (a sentence, a tweet, a piece of feedback…) is positive, neutral or negative according to a certain prism.</p><p>Humans can express their opinions spontaneously (for example by writing on social networks or sending complaint emails) or in response to a solicitation (in particular following a satisfaction survey). What opinions are expressed by the speaker? Is it a positive, negative, neutral or mixed feeling? What exactly is this opinion about? What emotions emerge between joy, anger, fear, surprise, sadness, disgust, trust…? Is a consumer who writes <em>“I am surprised that I still haven’t received a response”</em> surprised, disappointed or angry, or does he or she feel several of these emotions simultaneously?</p><p>From a technical point of view, sentiment analysis can be seen as a special case of relationship extraction. Indeed, an opinion links a speaker who expresses himself and the objects of the world concerned (market product, service offered, political action…).</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#5",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Opinion Mining",
      "definition_text":"It is another name, more academic, given to Sentiment Analysis.",
      "definition_html":"<p>It is another name, more academic, given to Sentiment Analysis.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#6",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Polarity",
      "definition_text":"Polarity, in sentiment analysis, refers to a score or classification of a textual extract according to the tone of the opinion (positive / neutral / negative).",
      "definition_html":"<p><strong>Polarity</strong>, in sentiment analysis, refers to a score or classification of a textual extract according to the tone of the opinion (positive / neutral / negative).</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#7",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Text Mining",
      "definition_text":"The purpose of Text Mining is to extract knowledge from a given corpus of documents. Text Mining is the Semantic Analysis of documents in a corpus to feed a data mining system. The latter will interpret the results of the textual analysis in such a way as to highlight interesting correlations, perform time series analysis, detect correlations… The text search works better on a corpus that is sufficiently homogeneous so that the same analyzer can process all the documents.",
      "definition_html":"<p>The purpose of <strong>Text Mining</strong> is to extract knowledge from a given corpus of documents. Text Mining is the Semantic Analysis of documents in a corpus to feed a data mining system. The latter will interpret the results of the textual analysis in such a way as to highlight interesting correlations, perform time series analysis, detect correlations… The text search works better on a corpus that is sufficiently homogeneous so that the same analyzer can process all the documents.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#8",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Speech to text",
      "definition_text":"This is a task to extract the text of an audio document, such as voice transcription when dictating a message via a virtual assistant like Siri.\nOnce the audio is transformed into text, it is then possible to semantically analyse it.",
      "definition_html":"<p>This is a task to <strong>extract the text of an audio document</strong>, such as voice transcription when dictating a message via a virtual assistant like Siri.<br>\nOnce the audio is transformed into text, it is then possible to semantically analyse it.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#9",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Categorization",
      "definition_text":"The automatic categorization of a document (or part of it) means taking a global understanding of its content and putting it in one or more boxes. In what language is it written? What type of documents are they? Is there an urgent that needs to be treated in it? What are its main themes? Is an email a spam or not?",
      "definition_html":"<p>The automatic <strong>categorization</strong> of a document (or part of it) means taking a global understanding of its content and putting it in one or more boxes. In what language is it written? What type of documents are they? Is there an urgent that needs to be treated in it? What are its main themes? Is an email a spam or not?</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#10",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Terminological Extraction",
      "definition_text":"Terminological Extraction, also called chunking, is the task of identifying groups of words that form useful expressions. “Sweet potato”, for example does not have the same meaning as the separate words “sweet” and “potato”. We also speak of multi-word expression or n-word grams.\nLinguists also call collocation a frequent multi-word expression, appearing in everyday language (“Fast Food”) or in a specialized vocabulary (“personality disorder”).\nRecognizing multi-word expressions is not as simple as it sounds, because the language can be ambiguous. Take for instance the sentence: “they were milking cows” You don’t know whether the person is referring to milking a cow, or the type of cow.",
      "definition_html":"<p><strong>Terminological Extraction</strong>, also called <strong>chunking</strong>, is the task of identifying groups of words that form useful expressions. “Sweet potato”, for example does not have the same meaning as the separate words “sweet” and “potato”. We also speak of multi-word expression or n-word grams.</p><p>Linguists also call collocation a frequent multi-word expression, appearing in everyday language (“Fast Food”) or in a specialized vocabulary (“personality disorder”).</p><p>Recognizing multi-word expressions is not as simple as it sounds, because the language can be ambiguous. Take for instance the sentence: “they were milking cows” You don’t know whether the person is referring to milking a cow, or the type of cow.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#11",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Named Entity Recognition",
      "definition_text":"Local understanding of a text consists of highlighting words or groups of words in order to recognize concepts. In linguist jargon, this task is called Named Entity Recognition (NER), or Entity Extraction.\nThe simplest case is to identify in a text a unitary information such as a date, a financial amount, a percentage, a telephone number, an e-mail address, a URL, a license plate number, a social security number…",
      "definition_html":"<p><em>Local</em> understanding of a text consists of highlighting words or groups of words in order to recognize concepts. In linguist jargon, this task is called Named Entity Recognition (NER), or Entity Extraction.<br>\nThe simplest case is to identify in a text a unitary information such as a date, a financial amount, a percentage, a telephone number, an e-mail address, a URL, a license plate number, a social security number…</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#12",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Lexical Analysis",
      "definition_text":"Lexical Analysis, generally called tokenization, is the task of separating symbols in the text into “words”, thus creating the lexicon of a given corpus. This is therefore a prerequisite for terminology extraction.",
      "definition_html":"<p><strong>Lexical Analysis</strong>, generally called <strong>tokenization</strong>, is the task of separating symbols in the text into “words”, thus creating the lexicon of a given corpus. This is therefore a prerequisite for terminology extraction.</p>",
      "link":"https://www.proxem.com/en/natural-language-processing-text-analytics-the-glossary/#13",
      "source":"proxem Natural Language Processing & Text Analytics glossary"
   },
   {
      "terms":"Accuracy",
      "definition_text":"Accuracy is the measure of how good a classification model is. It is given by the number of correctly classified examples divided by the number of classified examples.",
      "definition_html":[
         "<a name=\"Accuracy\"></a>",
         "<h2>Accuracy</h2>",
         "<p><em>Accuracy</em> is the measure of how good a classification model is. It is given by the number of correctly classified examples divided by the number of classified examples.</p>",
         "<em>Accuracy</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Activation Function",
      "definition_text":"Activation function is any non-linear function applied to the weighted sum of the inputs of a neuron in a neural network. The presence of activation functions makes neural networks capable of approximating virtually any function.",
      "definition_html":[
         "<a name=\"Activation-Function\"></a>",
         "<h2>Activation Function</h2>",
         "<p><em>Activation function</em> is any non-linear function applied to the weighted sum of the inputs of a <em>neuron</em> in a <em>neural network</em>. The presence of activation functions makes neural networks capable of approximating virtually any function.</p>",
         "<em>Activation function</em>",
         "<em>neuron</em>",
         "<em>neural network</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Active Learning",
      "definition_text":"Active learning is a kind of machine learning in which the algorithm decides on the data it learns from. Active learning is valuable when labeled examples are expensive to obtain. Instead of blindly seeking a diverse range of labeled examples, an active learning algorithm selectively seeks the particular range of examples it needs for learning.",
      "definition_html":[
         "<a name=\"Active-Learning\"></a>",
         "<h2>Active Learning</h2>",
         "<p><em>Active learning</em> is a kind of <em>machine learning</em> in which the algorithm decides on the data it learns from. Active learning is valuable when <em>labeled examples</em> are expensive to obtain. Instead of blindly seeking a diverse range of labeled examples, an active learning algorithm selectively seeks the particular range of examples it needs for learning.</p>",
         "<em>Active learning</em>",
         "<em>machine learning</em>",
         "<em>labeled examples</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Area under the ROC Curve",
      "definition_text":"The ROC curve (ROC stands for \"Receiver Operating Characteristic\" and comes from radar engineering) is a commonly used method for and evaluating the performance of classification models. ROC curves use a combination the false positive rate (i.e. examples that were predicted positive, but actually negative) and true positive rate (i.e. examples that were correctly predicted positive) to build up a summary picture of the classification performance. ROC curves are widely used because they are relatively simple to understand and capture more than one aspect of the classification.",
      "definition_html":[
         "<a name=\"Area-under-the-ROC-Curve\"></a>",
         "<h2>Area under the ROC Curve (AUC)</h2>",
         "<p>The ROC curve (ROC stands for \"Receiver Operating Characteristic\" and comes from radar engineering) is a commonly used method for and evaluating the performance of <em>classification models</em>. ROC curves use a combination the false positive rate (i.e. examples that were predicted positive, but actually negative) and true positive rate (i.e. examples that were correctly predicted positive) to build up a summary picture of the classification performance. ROC curves are widely used because they are relatively simple to understand and capture more than one aspect of the classification.</p>",
         "<em>classification models</em>",
         "<p align=\"center\">\n<img alt=\"Area under the ROC Curve.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/auc.png\" width=\"500\"/><br/>\nArea under the ROC Curve. Source: <a href=\"https://deparkes.co.uk/2018/02/16/the-roc-curve/\">deparkes.co.uk</a>.\n</p>",
         "<img alt=\"Area under the ROC Curve.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/auc.png\" width=\"500\"/>",
         "<br/>",
         "<a href=\"https://deparkes.co.uk/2018/02/16/the-roc-curve/\">deparkes.co.uk</a>",
         "<p>The higher the <em>area under the ROC curve</em> (AUC) is, the better is the classifier. An AUC greater than \\(0.5\\) is better than a random classifier. A perfect classifier would have an AUC of \\(1\\).</p>",
         "<em>area under the ROC curve</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Autoencoder",
      "definition_text":"An autoencoder is a neural network whose goal is to predict the input itself, typically through a bottleneck layer somewhere in the network. By introducing a bottleneck, the network is forced to learn a lower-dimensional representation of the input, effectively compressing the input into a good representation. Autoencoders are related to principal component analysis and other dimensionality reduction and representation learning techniques, but can learn more complex mappings due to their nonlinear nature.",
      "definition_html":[
         "<a name=\"Autoencoder\"></a>",
         "<h2>Autoencoder</h2>",
         "<p>An <em>autoencoder</em> is a <em>neural network</em> whose goal is to predict the input itself, typically through a <em>bottleneck</em> layer somewhere in the network. By introducing a bottleneck, the network is forced to learn a lower-dimensional representation of the input, effectively compressing the input into a good representation. Autoencoders are related to <em>principal component analysis</em> and other <em>dimensionality reduction</em> and <em>representation learning</em> techniques, but can learn more complex mappings due to their nonlinear nature.</p>",
         "<em>autoencoder</em>",
         "<em>neural network</em>",
         "<em>bottleneck</em>",
         "<em>principal component analysis</em>",
         "<em>dimensionality reduction</em>",
         "<em>representation learning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Backpropagation",
      "definition_text":"Backpropagation is the primary algorithm for performing gradient descent on neural networks. First, the output values of each node are calculated in a forward pass. Then, the partial derivative of the error with respect to each parameter is calculated in a backward pass through the computation graph.",
      "definition_html":[
         "<a name=\"Backpropagation\"></a>",
         "<h2>Backpropagation</h2>",
         "<p><em>Backpropagation</em> is the primary algorithm for performing gradient descent on <em>neural networks</em>. First, the output values of each node are calculated in a forward pass. Then, the partial derivative of the error with respect to each parameter is calculated in a backward pass through the computation graph.</p>",
         "<em>Backpropagation</em>",
         "<em>neural networks</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bag of Words",
      "definition_text":"Bag of words is a method of feature engineering for text documents. According to the bag of word approach, in the feature vector, each dimension represents the presence or absence of a specific token in the text document. Therefore, such an approach to representing a document as a feature vector ignores the order of words in the document. However, in practice, bag of words often works well in document classification.",
      "definition_html":[
         "<a name=\"Bag-of-Words\"></a>",
         "<h2>Bag of Words</h2>",
         "<p><em>Bag of words</em> is a method of feature engineering for text documents. According to the bag of word approach, in the feature vector, each dimension represents the presence or absence of a specific token in the text document. Therefore, such an approach to representing a document as a feature vector ignores the order of words in the document. However, in practice, bag of words often works well in document classification.</p>",
         "<em>Bag of words</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bagging",
      "definition_text":"Bootstrap aggregating, also called bagging, is a machine learning ensemble meta-algorithm designed to improve the stability and accuracy of machine learning algorithms used in statistical classification and regression. It also reduces variance and helps to avoid overfitting.",
      "definition_html":[
         "<a name=\"Bagging\"></a>",
         "<h2>Bagging</h2>",
         "<p><em>Bootstrap aggregating</em>, also called <em>bagging</em>, is a machine learning ensemble meta-algorithm designed to improve the stability and accuracy of machine learning algorithms used in statistical classification and regression. It also reduces variance and helps to avoid overfitting.</p>",
         "<em>Bootstrap aggregating</em>",
         "<em>bagging</em>",
         "<p>Bagging consists of training different <em>base learners</em> on different subsets of the <em>training set</em> randomly, by drawing (with replacement) random training sets from the given sample. To obtain the final prediction, the predictions of the base learners are averaged.</p>",
         "<em>base learners</em>",
         "<em>training set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Baseline",
      "definition_text":"A baseline is an algorithm or a heuristic that can be used as a model, often obtained without using machine learning or by using the most simplistic feature engineering method. A baseline helps analysts quantify the minimal expected performance on a particular problem.",
      "definition_html":[
         "<a name=\"Baseline\"></a>",
         "<h2>Baseline</h2>",
         "<p>A <em>baseline</em> is an algorithm or a heuristic that can be used as a <em>model</em>, often obtained without using machine learning or by using the most simplistic feature engineering method. A baseline helps analysts quantify the minimal expected performance on a particular problem.</p>",
         "<em>baseline</em>",
         "<em>model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Base Learner",
      "definition_text":"Base learner is a learning algorithm used to build models that are then combined by an ensemble learning algorithm. A popular example of a base learner is decision tree which is used as a base learner in the random forest and gradient boosting ensemble learning algorithms.",
      "definition_html":[
         "<a name=\"Base-Learner\"></a>",
         "<h2>Base Learner</h2>",
         "<p><em>Base learner</em> is a learning algorithm used to build <em>models</em> that are then combined by an <em>ensemble learning algorithm</em>. A popular example of a base learner is <em>decision tree</em> which is used as a base learner in the <strong>random forest</strong> and <strong>gradient boosting</strong> ensemble learning algorithms.</p>",
         "<em>Base learner</em>",
         "<em>models</em>",
         "<em>ensemble learning algorithm</em>",
         "<em>decision tree</em>",
         "<strong>random forest</strong>",
         "<strong>gradient boosting</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Batch",
      "definition_text":"Batch, or minibatch, is the set of examples used in one\niteration of model training using gradient descent.",
      "definition_html":[
         "<a name=\"Batch\"></a>",
         "<h2>Batch</h2>",
         "<p><em>Batch</em>, or minibatch, is the set of examples used in one\niteration of model training using <em>gradient descent</em>.</p>",
         "<em>Batch</em>",
         "<em>gradient descent</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Batch Normalization",
      "definition_text":"Batch normalization is a technique that normalizes layer inputs per mini-batch. The technique consists in providing any layer in a neural network with inputs that have a zero mean and a unit variance (also see standardization). In practice, it results in speeding up training, allows for the usage of higher learner rates, and often has a regularization effect. Batch normalization has been found to be very effective for convolutional and general feedforward neural networks.",
      "definition_html":[
         "<a name=\"Batch-Normalization\"></a>",
         "<h2>Batch Normalization</h2>",
         "<p><em>Batch normalization</em> is a technique that normalizes layer inputs per mini-batch. The technique consists in providing any layer in a <em>neural network</em> with inputs that have a zero mean and a unit variance (also see <em>standardization</em>). In practice, it results in speeding up training, allows for the usage of higher <em>learner rates</em>, and often has a <em>regularization</em> effect. <em>Batch normalization</em> has been found to be very effective for <em>convolutional</em> and general <em>feedforward neural networks</em>.</p>",
         "<em>Batch normalization</em>",
         "<em>neural network</em>",
         "<em>standardization</em>",
         "<em>learner rates</em>",
         "<em>regularization</em>",
         "<em>Batch normalization</em>",
         "<em>convolutional</em>",
         "<em>feedforward neural networks</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bayes Theorem",
      "definition_text":"Bayes' theorem, named after 18th-century British mathematician Thomas Bayes, is a mathematical formula for determining conditional probability. The theorem provides a way to revise existing predictions or theories given new or additional evidence:",
      "definition_html":[
         "<a name=\"Bayes-Theorem\"></a>",
         "<h2>Bayes' Theorem</h2>",
         "<p><em>Bayes' theorem</em>, named after 18th-century British mathematician Thomas Bayes, is a mathematical formula for determining conditional probability. The theorem provides a way to revise existing predictions or theories given new or additional evidence:</p>",
         "<em>Bayes' theorem</em>",
         "<p>$$P(A\\mid B)={\\frac {P(B\\mid A)\\,P(A)}{P(B)}},$$</p>",
         "<p>where \\(A\\) and \\(B\\) are events and \\(P(B)\\neq 0\\).</p>",
         "<ul>\n<li>\\(P(A\\mid B)\\) is a conditional probability: the likelihood of event \\(A\\) occurring given that \\(B\\) is true.</li>\n<li>\\(P(B\\mid A)\\) is also a conditional probability: the likelihood of event \\(B\\) occurring given that \\(A\\) is true.</li>\n<li>\\(P(A)\\) and \\(P(B)\\) are the probabilities of observing \\(A\\) and \\(B\\) independently of each other.</li>\n</ul>",
         "<li>\\(P(A\\mid B)\\) is a conditional probability: the likelihood of event \\(A\\) occurring given that \\(B\\) is true.</li>",
         "<li>\\(P(B\\mid A)\\) is also a conditional probability: the likelihood of event \\(B\\) occurring given that \\(A\\) is true.</li>",
         "<li>\\(P(A)\\) and \\(P(B)\\) are the probabilities of observing \\(A\\) and \\(B\\) independently of each other.</li>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bias",
      "definition_text":"The bias is an error from erroneous assumptions in the learning algorithm. High bias can cause an algorithm to miss the relevant relations between features and target outputs (underfitting).",
      "definition_html":[
         "<a name=\"Bias\"></a>",
         "<h2>Bias</h2>",
         "<p>The <em>bias</em> is an error from erroneous assumptions in the learning algorithm. High bias can cause an algorithm to miss the relevant relations between <em>features</em> and <em>target</em> outputs (underfitting).</p>",
         "<em>bias</em>",
         "<em>features</em>",
         "<em>target</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bias Variance Tradeoff",
      "definition_text":"The bias\u2013variance tradeoff is the property of a set of predictive models whereby models with a lower bias in parameter estimation have a higher variance of the parameter estimates across samples, and vice versa. The bias-variance problem is the conflict in trying to simultaneously minimize these two sources of error that prevent supervised learning algorithms from generalizing beyond their training set.",
      "definition_html":[
         "<a name=\"Bias-Variance-Tradeoff\"></a>",
         "<h2>Bias-Variance Tradeoff</h2>",
         "<p>The <em>bias\u2013variance tradeoff</em> is the property of a set of <em>predictive models</em> whereby models with a lower <em>bias</em> in parameter estimation have a higher <em>variance</em> of the parameter estimates across samples, and vice versa. The bias-variance problem is the conflict in trying to simultaneously minimize these two sources of error that prevent <em>supervised learning</em> algorithms from generalizing beyond their <em>training set</em>.</p>",
         "<em>bias\u2013variance tradeoff</em>",
         "<em>predictive models</em>",
         "<em>bias</em>",
         "<em>variance</em>",
         "<em>supervised learning</em>",
         "<em>training set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bigram",
      "definition_text":"A bigram is a sequence of two tokens or two characters extracted from a string. For example, in the word \"cat\" there are two character bigrams: \"ca\" and \"at\". In the sentence \"I like to swim\" there are three-word bigrams: \"I like\", \"like to\", \"to swim\". Bigrams are often used as features together with (or in lieu of) words in bag of words.",
      "definition_html":[
         "<a name=\"Bigram\"></a>",
         "<h2>Bigram</h2>",
         "<p>A <em>bigram</em> is a sequence of two tokens or two characters extracted from a string. For example, in the word \"cat\" there are two character bigrams: \"ca\" and \"at\". In the sentence \"I like to swim\" there are three-word bigrams: \"I like\", \"like to\", \"to swim\". Bigrams are often used as features together with (or in lieu of) words in <em>bag of words</em>.</p>",
         "<em>bigram</em>",
         "<em>bag of words</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Binary Variable",
      "definition_text":"A binary variable is a variable (a feature or the target) that can take values either \"Yes\" or \"No\" (True or False, one or zero, etc).",
      "definition_html":[
         "<a name=\"Binary-Variable\"></a>",
         "<h2>Binary Variable</h2>",
         "<p>A <em>binary variable</em> is a variable (a <em>feature</em> or the <em>target</em>) that can take values either \"Yes\" or \"No\" (True or False, one or zero, etc).</p>",
         "<em>binary variable</em>",
         "<em>feature</em>",
         "<em>target</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Binary Classification",
      "definition_text":"A binary classification problem is a classification problem where the label is only one out of two classes. For example, spam detection or determining if a patient has a certain disease or not are examples of a binary classification problem.",
      "definition_html":[
         "<a name=\"Binary-Classification\"></a>",
         "<h2>Binary Classification</h2>",
         "<p>A <em>binary classification</em> problem is a <em>classification</em> problem where the label is only one out of two classes. For example, spam detection or determining if a patient has a certain disease or not are examples of a binary classification problem.</p>",
         "<em>binary classification</em>",
         "<em>classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Binning",
      "definition_text":"Binning (also called bucketing) is the process of converting a continuous feature into multiple binary features called bins or buckets, typically based on value range. For example, instead of representing age as a single integer-valued feature, the analyst could chop ranges of gates into discrete bins: all ages between 0 and 5 years-old could be put into one bin, 6 to 10 years-old could be the second bin, 11 to 15 years-old could be the third bin, 16 to 25 would be the fourth been and so on.",
      "definition_html":[
         "<a name=\"Binning\"></a>",
         "<h2>Binning</h2>",
         "<p><em>Binning</em> (also called <strong>bucketing</strong>) is the process of converting a continuous feature into multiple binary features called <strong>bins</strong> or <strong>buckets</strong>, typically based on value range. For example, instead of representing age as a single integer-valued feature, the analyst could chop ranges of gates into discrete bins: all ages between 0 and 5 years-old could be put into one bin, 6 to 10 years-old could be the second bin, 11 to 15 years-old could be the third bin, 16 to 25 would be the fourth been and so on.</p>",
         "<em>Binning</em>",
         "<strong>bucketing</strong>",
         "<strong>bins</strong>",
         "<strong>buckets</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Boosting",
      "definition_text":"Boosting is an ensemble learning technique that iteratively combines a set of simple and not very accurate classifiers (referred to as weak classifiers) into a classifier with high accuracy (called a strong classifier) by giving a higher weight to the examples that the model is currently classifying incorrectly.",
      "definition_html":[
         "<a name=\"Boosting\"></a>",
         "<h2>Boosting</h2>",
         "<p><em>Boosting</em> is an <em>ensemble learning</em> technique that iteratively combines a set of simple and not very accurate classifiers (referred to as <em>weak classifiers</em>) into a classifier with high <a href=\"#Accuracy\">accuracy</a> (called a <em>strong classifier</em>) by giving a higher weight to the examples that the model is currently classifying incorrectly.</p>",
         "<em>Boosting</em>",
         "<em>ensemble learning</em>",
         "<em>weak classifiers</em>",
         "<a href=\"#Accuracy\">accuracy</a>",
         "<em>strong classifier</em>",
         "<p>Multiple boosting algorithms exist. The most widely used ones are <strong>AdaBoost</strong> and <strong>gradient boosting</strong>.</p>",
         "<strong>AdaBoost</strong>",
         "<strong>gradient boosting</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bootstrapping",
      "definition_text":"Bootstrapping can have one of the following meanings:",
      "definition_html":[
         "<a name=\"Bootstrapping\"></a>",
         "<h2>Bootstrapping</h2>",
         "<p>Bootstrapping can have one of the following meanings:</p>",
         "<ol>\n<li>\n<p><em>Bootstrapping</em> is the process of dividing the dataset into multiple subsets (with replacement). Each subset is of the same size as that of the dataset. The subsets are called bootstrap samples. Bootstrapping can be used to estimate a quantity of a <em>population</em>. This is done by repeatedly taking small samples, calculating the statistic, and taking the average of the calculated statistics.</p>\n</li>\n<li>\n<p><em>Bootstrapping</em> a model means training a model on a small set of labeled data, and then manually reviewing unlabeled examples for errors, and then adding those to the training set in an iterative process.</p>\n</li>\n</ol>",
         "<li>\n<p><em>Bootstrapping</em> is the process of dividing the dataset into multiple subsets (with replacement). Each subset is of the same size as that of the dataset. The subsets are called bootstrap samples. Bootstrapping can be used to estimate a quantity of a <em>population</em>. This is done by repeatedly taking small samples, calculating the statistic, and taking the average of the calculated statistics.</p>\n</li>",
         "<p><em>Bootstrapping</em> is the process of dividing the dataset into multiple subsets (with replacement). Each subset is of the same size as that of the dataset. The subsets are called bootstrap samples. Bootstrapping can be used to estimate a quantity of a <em>population</em>. This is done by repeatedly taking small samples, calculating the statistic, and taking the average of the calculated statistics.</p>",
         "<em>Bootstrapping</em>",
         "<em>population</em>",
         "<li>\n<p><em>Bootstrapping</em> a model means training a model on a small set of labeled data, and then manually reviewing unlabeled examples for errors, and then adding those to the training set in an iterative process.</p>\n</li>",
         "<p><em>Bootstrapping</em> a model means training a model on a small set of labeled data, and then manually reviewing unlabeled examples for errors, and then adding those to the training set in an iterative process.</p>",
         "<em>Bootstrapping</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bottleneck",
      "definition_text":"A bottleneck layer is a layer that contains few nodes compared to the previous layers. It can be used to obtain a representation of the input with reduced dimensionality. An example of this is the use of autoencoders with bottleneck layers for nonlinear dimensionality reduction or representation learning.",
      "definition_html":[
         "<a name=\"Bottleneck\"></a>",
         "<h2>Bottleneck</h2>",
         "<p>A <em>bottleneck</em> layer is a layer that contains few nodes compared to the previous layers. It can be used to obtain a representation of the input with reduced dimensionality. An example of this is the use of autoencoders with bottleneck layers for nonlinear <em>dimensionality reduction</em> or <em>representation learning</em>.</p>",
         "<em>bottleneck</em>",
         "<em>dimensionality reduction</em>",
         "<em>representation learning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Bucketing",
      "definition_text":"See binning.",
      "definition_html":[
         "<a name=\"Bucketing\"></a>",
         "<h2>Bucketing</h2>",
         "<p>See <em>binning</em>.</p>",
         "<em>binning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Categorical Feature",
      "definition_text":"A categorical feature is a feature defined by a categorical variable.",
      "definition_html":[
         "<a name=\"Categorical-Feature\"></a>",
         "<h2>Categorical Feature</h2>",
         "<p>A <em>categorical feature</em> is a <em>feature</em> defined by a categorical variable.</p>",
         "<em>categorical feature</em>",
         "<em>feature</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Categorical Variable",
      "definition_text":"A categorical variable is a variable that can take on one of a limited and usually fixed number of possible values. For example, the variable \"street_light_color\" can have three possible values: \"red\", \"yellow\", and \"green\".",
      "definition_html":[
         "<a name=\"Categorical-Variable\"></a>",
         "<h2>Categorical Variable</h2>",
         "<p>A <em>categorical variable</em> is a variable that can take on one of a limited and usually fixed number of possible values. For example, the variable \"street_light_color\" can have three possible values: \"red\", \"yellow\", and \"green\". </p>",
         "<em>categorical variable</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Centroid",
      "definition_text":"A centroid is the center of a cluster as determined by a k-means or k-median algorithm. For instance, if kk is 44, then the k-means or k-median algorithm finds 44 centroids.",
      "definition_html":[
         "<a name=\"Centroid\"></a>",
         "<h2>Centroid</h2>",
         "<p>A <em>centroid</em> is the center of a cluster as determined by a <em>k-means</em> or <strong>k-median</strong> algorithm. For instance, if \\(k\\) is \\(4\\), then the k-means or k-median algorithm finds \\(4\\) centroids.</p>",
         "<em>centroid</em>",
         "<em>k-means</em>",
         "<strong>k-median</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Class",
      "definition_text":"A class is a group to which an example can belong. A labeled example consists of a feature vector and a reference to the class it belongs to. A specific class attached to a feature vector is called label. For example, in a binary classification model that detects spam, there are two classes, \"spam\" and \"not spam\". In a multi-class classification model that identifies plant species, the classes would be \"trees\", \"flowers\", \"mushrooms\", and so on.",
      "definition_html":[
         "<a name=\"Class\"></a>",
         "<h2>Class</h2>",
         "<p>A <em>class</em> is a group to which an <em>example</em> can belong. A labeled example consists of a <em>feature vector</em> and a reference to the class it belongs to. A specific class attached to a feature vector is called <em>label</em>. For example, in a binary classification model that detects spam, there are two classes, \"spam\" and \"not spam\". In a multi-class classification model that identifies plant species, the classes would be \"trees\", \"flowers\", \"mushrooms\", and so on.</p>",
         "<em>class</em>",
         "<em>example</em>",
         "<em>feature vector</em>",
         "<em>label</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Classification",
      "definition_text":"Classification is a problem of assigning a label to an example.",
      "definition_html":[
         "<a name=\"Classification\"></a>",
         "<h2>Classification</h2>",
         "<p><em>Classification</em> is a problem of assigning a <em>label</em> to an <em>example</em>.</p>",
         "<em>Classification</em>",
         "<em>label</em>",
         "<em>example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Classification Algorithm",
      "definition_text":"A classification algorithm is a machine learning algorithm that uses labeled examples to create a model that can be used for classification.",
      "definition_html":[
         "<a name=\"Classification-Algorithm\"></a>",
         "<h2>Classification Algorithm</h2>",
         "<p>A <em>classification algorithm</em> is a <em>machine learning algorithm</em> that uses <em>labeled examples</em> to create a model that can be used for <em>classification</em>.</p>",
         "<em>classification algorithm</em>",
         "<em>machine learning algorithm</em>",
         "<em>labeled examples</em>",
         "<em>classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Classification Threshold",
      "definition_text":"Classification threshold is a real number that defines a criterion that is applied to a model's predicted score in order to separate the positive class from the negative class. For instance, a classification threshold is used when mapping logistic regression results to binary classification: consider a logistic regression model that determines the probability of a given email message being spam. If the classification threshold is 0.90.9, then logistic regression values above 0.90.9 are classified as spam and those below 0.90.9 are classified as not spam.",
      "definition_html":[
         "<a name=\"Classification-Threshold\"></a>",
         "<h2>Classification Threshold</h2>",
         "<p><em>Classification threshold</em> is a real number that defines a criterion that is applied to a <em>model</em>'s predicted score in order to separate the positive class from the negative class. For instance, a classification threshold is used when mapping <em>logistic regression</em> results to <em>binary classification</em>: consider a logistic <em>regression model</em> that determines the probability of a given email message being spam. If the classification threshold is \\(0.9\\), then logistic regression values above \\(0.9\\) are classified as spam and those below \\(0.9\\) are classified as not spam.</p>",
         "<em>Classification threshold</em>",
         "<em>model</em>",
         "<em>logistic regression</em>",
         "<em>binary classification</em>",
         "<em>regression model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Classification Model",
      "definition_text":"See Model, Classification",
      "definition_html":[
         "<a name=\"Classification-Model\"></a>",
         "<h2>Classification Model</h2>",
         "<p>See <em>Model, Classification</em></p>",
         "<em>Model, Classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Cluster",
      "definition_text":"A cluster is a group of examples (usually, this group is smaller than the complete dataset) that have some resemblance according to a similarity metric.",
      "definition_html":[
         "<a name=\"Cluster\"></a>",
         "<h2>Cluster</h2>",
         "<p>A <em>cluster</em> is a group of <em>examples</em> (usually, this group is smaller than the complete dataset) that have some resemblance according to a <em>similarity metric</em>.</p>",
         "<em>cluster</em>",
         "<em>examples</em>",
         "<em>similarity metric</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Clustering",
      "definition_text":"Clustering is a problem of assigning examples to one or more clusters.",
      "definition_html":[
         "<a name=\"Clustering\"></a>",
         "<h2>Clustering</h2>",
         "<p><em>Clustering</em> is a problem of assigning <em>examples</em> to one or more <em>clusters</em>.</p>",
         "<em>Clustering</em>",
         "<em>examples</em>",
         "<em>clusters</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Clustering Algorithm",
      "definition_text":"A clustering algorithm is an unsupervised learning method used to discover the inherent groupings in the data. For example, customers can be grouped on the basis of their purchasing behavior which is further used to segment the customers.",
      "definition_html":[
         "<a name=\"Clustering-Algorithm\"></a>",
         "<h2>Clustering Algorithm</h2>",
         "<p>A <em>clustering algorithm</em> is an unsupervised learning method used to discover the inherent groupings in the data. For example, customers can be grouped on the basis of their purchasing behavior which is further used to segment the customers.</p>",
         "<em>clustering algorithm</em>",
         "<p>Example of clustering algorithms: <em>k-Means</em>, <em>hierarchical clustering</em>, <strong>DBSCAN</strong>.</p>",
         "<em>k-Means</em>",
         "<em>hierarchical clustering</em>",
         "<strong>DBSCAN</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Confusion Matrix",
      "definition_text":"The confusion matrix is a table that summarizes how successful the classification model was at predicting examples belonging to various classes. One axis of the confusion matrix is the label that the model predicted, and the other axis is the actual label. In a binary classification problem, there are two classes. Let say, the classifier has to predict labels \"spam\" or \"not spam\":",
      "definition_html":[
         "<a name=\"Confusion-Matrix\"></a>",
         "<h2>Confusion Matrix</h2>",
         "<p>The <em>confusion matrix</em> is a table that summarizes how successful the classification model was at predicting <em>examples</em> belonging to various <em>classes</em>. One axis of the confusion matrix is the <em>label</em> that the model predicted, and the other axis is the actual label. In a <em>binary classification</em> problem, there are two classes. Let say, the classifier has to predict labels \"spam\" or \"not spam\":</p>",
         "<em>confusion matrix</em>",
         "<em>examples</em>",
         "<em>classes</em>",
         "<em>label</em>",
         "<em>binary classification</em>",
         "<table>\n<thead>\n<tr>\n<th></th>\n<th>spam (predicted)</th>\n<th>not spam (predicted)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>spam (actual)</td>\n<td>23</td>\n<td>1</td>\n</tr>\n<tr>\n<td>not spam (actual)</td>\n<td>12</td>\n<td>556</td>\n</tr>\n</tbody>\n</table>",
         "<thead>\n<tr>\n<th></th>\n<th>spam (predicted)</th>\n<th>not spam (predicted)</th>\n</tr>\n</thead>",
         "<tr>\n<th></th>\n<th>spam (predicted)</th>\n<th>not spam (predicted)</th>\n</tr>",
         "<th></th>",
         "<th>spam (predicted)</th>",
         "<th>not spam (predicted)</th>",
         "<tbody>\n<tr>\n<td>spam (actual)</td>\n<td>23</td>\n<td>1</td>\n</tr>\n<tr>\n<td>not spam (actual)</td>\n<td>12</td>\n<td>556</td>\n</tr>\n</tbody>",
         "<tr>\n<td>spam (actual)</td>\n<td>23</td>\n<td>1</td>\n</tr>",
         "<td>spam (actual)</td>",
         "<td>23</td>",
         "<td>1</td>",
         "<tr>\n<td>not spam (actual)</td>\n<td>12</td>\n<td>556</td>\n</tr>",
         "<td>not spam (actual)</td>",
         "<td>12</td>",
         "<td>556</td>",
         "<p>The preceding confusion matrix shows that of the 24 samples that actually was spam, the model correctly classified \\(23\\) as spam (\\(23\\) <em>true positives</em>), and incorrectly classified 1 as not spam (\\(1\\) <em>false negative</em>). Similarly, of \\(568\\) samples that actually were not spam, \\(556\\) were correctly classified (\\(556\\) <em>true negatives</em>) and \\(12\\) were incorrectly classified (\\(6\\) <em>false positives</em>).</p>",
         "<em>true positives</em>",
         "<em>false negative</em>",
         "<em>true negatives</em>",
         "<em>false positives</em>",
         "<p>The confusion matrix for a multi-class classification problem can help you determine mistake patterns. For example, a confusion matrix could reveal that a model trained to recognize different species of animals tends to mistakenly predict \"cat\" instead of \"panther\", or \"mouse\" instead of \"rat\".</p>",
         "<p>Confusion matrices can be used to calculate different performance metrics, such as <em>precision</em> and <em>recall</em>.</p>",
         "<em>precision</em>",
         "<em>recall</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Continuous Variable",
      "definition_text":"A continuous variable is a variable that has an infinite number of possible values. In other words, any value is possible for the variable. Examples of a continuous variable are time, distance, or weight.",
      "definition_html":[
         "<a name=\"Continuous-Variable\"></a>",
         "<h2>Continuous Variable</h2>",
         "<p>A <em>continuous variable</em> is a variable that has an infinite number of possible values. In other words, any value is possible for the variable. Examples of a continuous variable are time, distance, or weight.</p>",
         "<em>continuous variable</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Convergence",
      "definition_text":"Convergence often refers to a state reached during iterative training in which training loss and validation loss change very little or not at all with each iteration after a certain number of iterations. A model reaches convergence when additional training using the same data will not improve the model.",
      "definition_html":[
         "<a name=\"Convergence\"></a>",
         "<h2>Convergence</h2>",
         "<p><em>Convergence</em> often refers to a state reached during iterative <em>training</em> in which <em>training loss</em> and <em>validation loss</em> change very little or not at all with each <em>iteration</em> after a certain number of iterations. A model reaches convergence when additional training using the same data will not improve the model.</p>",
         "<em>Convergence</em>",
         "<em>training</em>",
         "<em>training loss</em>",
         "<em>validation loss</em>",
         "<em>iteration</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Convolution",
      "definition_text":"A convolution mixes the convolutional filter and the input matrix in order to train weights.",
      "definition_html":[
         "<a name=\"Convolution\"></a>",
         "<h2>Convolution</h2>",
         "<p>A <em>convolution</em> mixes the <em>convolutional filter</em> and the input matrix in order to train weights.</p>",
         "<em>convolution</em>",
         "<em>convolutional filter</em>",
         "<p>Convolution is an operation of applying a <em>convolution filter</em> to the input matrix which is usually has a much higher dimensionality than that of the convolution filter. The application of the convolution filter to the input consists of multiplying the matrix of the filter by some patch of the input and then summing the values of the obtained matrix. The patches are selected by using a sliding window approach. See an illustration below:</p>",
         "<em>convolution filter</em>",
         "<p align=\"center\">\n<img alt=\"Convolution.\" src=\"https://www.semanti.ca/blog/assets/Glossary-of-Machine-Learning-Terms/convolution.gif\" width=\"500\"/><br/>\nCalculating convolution by sliding image patches over the entire input. One input patch (yellow) of the original input is multiplied by the kernel (red numbers in the yellow patch), and its sum is written to one feature map pixel (red cell in the convolved feature). Source: <a href=\"http://deeplearning.stanford.edu/wiki/index.php/Feature_extraction_using_convolution\">stanford.edu</a>.\n</p>",
         "<img alt=\"Convolution.\" src=\"https://www.semanti.ca/blog/assets/Glossary-of-Machine-Learning-Terms/convolution.gif\" width=\"500\"/>",
         "<br/>",
         "<a href=\"http://deeplearning.stanford.edu/wiki/index.php/Feature_extraction_using_convolution\">stanford.edu</a>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Convolutional Filter",
      "definition_text":"A convolutional filter (or convolutional kernel) is usually a square matrix whose values have to be learned by a neural network training algorithm. Convolutional filters are parts of convolutional neural networks where they are used by multiplying their values by the values of the corresponding patches of the input (or the previous layer) and then summing the obtained values. See convolution for an illustration.",
      "definition_html":[
         "<a name=\"Convolutional-Filter\"></a>",
         "<h2>Convolutional Filter</h2>",
         "<p>A <em>convolutional filter</em> (or convolutional kernel) is usually a square matrix whose values have to be learned by a neural network training algorithm. Convolutional filters are parts of convolutional neural networks where they are used by multiplying their values by the values of the corresponding patches of the input (or the previous layer) and then summing the obtained values. See <em>convolution</em> for an illustration.</p>",
         "<em>convolutional filter</em>",
         "<em>convolution</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Convolutional Neural Network",
      "definition_text":"A convolutional neural network is a class of feedforward neural networks, most commonly applied to analyze images. It uses convolutional layers that filter inputs for useful information. These convolutional layers have parameters that are learned so that these filters are adjusted automatically to extract the most useful information for the task at hand.",
      "definition_html":[
         "<a name=\"Convolutional-Neural-Network\"></a>",
         "<h2>Convolutional Neural Network (CNN)</h2>",
         "<p>A <em>convolutional neural network</em> is a class of <em>feedforward neural networks</em>, most commonly applied to analyze images. It uses <em>convolutional</em> layers that filter inputs for useful information. These convolutional layers have parameters that are learned so that these filters are adjusted automatically to extract the most useful information for the task at hand.</p>",
         "<em>convolutional neural network</em>",
         "<em>feedforward neural networks</em>",
         "<em>convolutional</em>",
         "<p>Usually, multiple convolutions are used as well as multiple convolutional layers. This enables the neural network to filter images for different types of patterns and for more and more abstract information after each layer.</p>",
         "<p>Convolutional networks usually also use <em>pooling</em> to detect the pattern even if it appears at some unusual place. Pooling also reduces the memory consumption and thus allows for the usage of more convolutional layers.</p>",
         "<em>pooling</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Cosine Similarity",
      "definition_text":"Cosine similarity is a similarity metric that measures the similarity between two examples. It is given by the cosine of the angle between two feature vectors.",
      "definition_html":[
         "<a name=\"Cosine-Similarity\"></a>",
         "<h2>Cosine Similarity</h2>",
         "<p><em>Cosine similarity</em> is a <em>similarity metric</em> that measures the similarity between two <em>examples</em>. It is given by the cosine of the angle between two feature vectors.</p>",
         "<em>Cosine similarity</em>",
         "<em>similarity metric</em>",
         "<em>examples</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Cost Function",
      "definition_text":"See loss function.",
      "definition_html":[
         "<a name=\"Cost-Function\"></a>",
         "<h2>Cost Function</h2>",
         "<p>See <em>loss function</em>.</p>",
         "<em>loss function</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Cross Validation",
      "definition_text":"Cross-validation is a method for evaluating a statistical model computed by a learning algorithm that has hyperparameters. Divide the training data into several parts, and in turn, use one part to test the model fitted to the remaining parts. Cross-validation can be used for model selection or hyperparameter tuning.",
      "definition_html":[
         "<a name=\"Cross-Validation\"></a>",
         "<h2>Cross-Validation</h2>",
         "<p><em>Cross-validation</em> is a method for evaluating a statistical <em>model</em> computed by a learning algorithm that has <em>hyperparameters</em>. Divide the training data into several parts, and in turn, use one part to test the model fitted to the remaining parts. <em>Cross-validation</em> can be used for model selection or <em>hyperparameter tuning</em>.</p>",
         "<em>Cross-validation</em>",
         "<em>model</em>",
         "<em>hyperparameters</em>",
         "<em>Cross-validation</em>",
         "<em>hyperparameter tuning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Dataset",
      "definition_text":"A dataset is a collection of examples.",
      "definition_html":[
         "<a name=\"Dataset\"></a>",
         "<h2>Dataset</h2>",
         "<p>A <em>dataset</em> is a collection of <em>examples</em>.</p>",
         "<em>dataset</em>",
         "<em>examples</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Decision Boundary",
      "definition_text":"In a classification problem with two or more classes, a decision boundary is a hypersurface that partitions the underlying vector space into two or more regions, one for each class. How well the classifier works depends upon how well the decision boundary separates examples of different classes from one another. In the figure below, the lines separating examples of each class from one another are decision boundaries.",
      "definition_html":[
         "<a name=\"Decision-Boundary\"></a>",
         "<h2>Decision Boundary</h2>",
         "<p>In a <em>classification</em> problem with two or more classes, a <em>decision boundary</em> is a hypersurface that partitions the underlying vector space into two or more regions, one for each <em>class</em>. How well the classifier works depends upon how well the decision boundary separates examples of different classes from one another. In the figure below, the lines separating examples of each class from one another are decision boundaries.</p>",
         "<em>classification</em>",
         "<em>decision boundary</em>",
         "<em>class</em>",
         "<p align=\"center\">\n<img alt=\"A decision boundary.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/decision-boundary.gif\" width=\"302\"/><br/>\nA decision boundary. Source: <a href=\"https://www.cs.princeton.edu/courses/archive/fall08/cos436/Duda/PR_simp/bndrys.htm\">princeton.edu</a>.\n</p>",
         "<img alt=\"A decision boundary.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/decision-boundary.gif\" width=\"302\"/>",
         "<br/>",
         "<a href=\"https://www.cs.princeton.edu/courses/archive/fall08/cos436/Duda/PR_simp/bndrys.htm\">princeton.edu</a>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Decision Tree",
      "definition_text":"A decision tree is a decision support tool that uses a tree-like graph or model of decisions and their possible consequences. A decision tree is also a way of visually representing an algorithm. The example below is a decision tree that estimates the probability of kyphosis after surgery, given the age of the patient and the vertebra at which surgery was started:",
      "definition_html":[
         "<a name=\"Decision-Tree\"></a>",
         "<h2>Decision Tree</h2>",
         "<p>A <em>decision tree</em> is a decision support tool that uses a tree-like graph or model of decisions and their possible consequences. A decision tree is also a way of visually representing an algorithm. The example below is a decision tree that estimates the probability of kyphosis after surgery, given the age of the patient and the vertebra at which surgery was started:</p>",
         "<em>decision tree</em>",
         "<p align=\"center\">\n<img alt=\"A decision tree.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/decision-tree.png\" width=\"400\"/><br/>\nA decision tree. Source: <a href=\"https://en.wikipedia.org/wiki/Decision_tree_learning\">Wikipedia</a>.\n</p>",
         "<img alt=\"A decision tree.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/decision-tree.png\" width=\"400\"/>",
         "<br/>",
         "<a href=\"https://en.wikipedia.org/wiki/Decision_tree_learning\">Wikipedia</a>",
         "<p>A decision tree can be learned based on a <em>dataset</em> using a decision tree learning algorithm. Examples of such algorithms are ID3, C4.5, CART.</p>",
         "<em>dataset</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Dimensionality Reduction",
      "definition_text":"Dimensionality reduction (also known as dimension reduction) is a process of converting a dataset having vast dimensionality (that is, each example in this dataset is a vector of very high dimensionality) into a dataset with lesser dimensionality ensuring that it conveys similar information concisely.",
      "definition_html":[
         "<a name=\"Dimensionality-Reduction\"></a>",
         "<h2>Dimensionality Reduction</h2>",
         "<p><em>Dimensionality reduction</em> (also known as dimension reduction) is a process of converting a <em>dataset</em> having vast dimensionality (that is, each example in this dataset is a vector of very high dimensionality) into a dataset with lesser dimensionality ensuring that it conveys similar information concisely.</p>",
         "<em>Dimensionality reduction</em>",
         "<em>dataset</em>",
         "<p>Typical algorithms used for dimensionality reduction are <strong>Principal Component Analysis</strong> (PCA), <strong>UMAP</strong>, and various <em>embedding</em> techniques such as <strong>word2vec</strong>.</p>",
         "<strong>Principal Component Analysis</strong>",
         "<strong>UMAP</strong>",
         "<em>embedding</em>",
         "<strong>word2vec</strong>",
         "<p>Dimensionality reduction is helpful in training a <em>model</em> using a bigger dataset. Also, in many cases, the <em>accuracy</em> of the model increases after the original dataset is transformed into a dimensionality-reduced dataset.</p>",
         "<em>model</em>",
         "<em>accuracy</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Dropout",
      "definition_text":"Dropout is a regularization technique for neural networks. It prevents neurons from co-adapting by randomly setting a fraction of them to 00 at each training iteration.",
      "definition_html":[
         "<a name=\"Dropout\"></a>",
         "<h2>Dropout</h2>",
         "<p><em>Dropout</em> is a regularization technique for <em>neural networks</em>. It prevents <em>neurons</em> from co-adapting by randomly setting a fraction of them to \\(0\\) at each training iteration. </p>",
         "<em>Dropout</em>",
         "<em>neural networks</em>",
         "<em>neurons</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Dummy Variable",
      "definition_text":"A dummy variable is usually a binary variable derived from some other variable or a combination of variables. An example of dummy variable one that takes value 00 or 11. 00 means value is true (i.e. age<25age<25) and 11 means value is false (i.e. age>=25age>=25)",
      "definition_html":[
         "<a name=\"Dummy-Variable\"></a>",
         "<h2>Dummy Variable</h2>",
         "<p>A <em>dummy variable</em> is usually a binary variable derived from some other variable or a combination of variables. An example of dummy variable one that takes value \\(0\\) or \\(1\\). \\(0\\) means value is true (i.e. \\(age &lt; 25\\)) and \\(1\\) means value is false (i.e. \\(age &gt;= 25\\))</p>",
         "<em>dummy variable</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Early Stopping",
      "definition_text":"Early stopping is a regularization method that involves ending model training before training loss finishes decreasing. In early stopping, the engineer ends model training when the validation loss starts to increase, that is when generalization performance worsens.",
      "definition_html":[
         "<a name=\"Early-Stopping\"></a>",
         "<h2>Early Stopping</h2>",
         "<p><em>Early stopping</em> is a <em>regularization</em> method that involves ending model training before <em>training loss</em> finishes decreasing. In early stopping, the engineer ends model training when the <em>validation loss</em> starts to increase, that is when generalization performance worsens.</p>",
         "<em>Early stopping</em>",
         "<em>regularization</em>",
         "<em>training loss</em>",
         "<em>validation loss</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Embedding",
      "definition_text":"An embedding maps an input representation, such as a word or sentence, into a vector. Most frequently embeddings refer to word embeddings such as word2vec or GloVe. However, sentences, paragraphs or images can be embedded too. For example, by mapping images and their textual descriptions into a common embedding space and minimizing the distance between them, one can match labels with images. Embeddings may be learned using neural networks.",
      "definition_html":[
         "<a name=\"Embedding\"></a>",
         "<h2>Embedding</h2>",
         "<p>An <em>embedding</em> maps an input representation, such as a word or sentence, into a vector. Most frequently embeddings refer to word embeddings such as <strong>word2vec</strong> or <strong>GloVe</strong>. However, sentences, paragraphs or images can be embedded too. For example, by mapping images and their textual descriptions into a common embedding space and minimizing the distance between them, one can match labels with images. Embeddings may be learned using <em>neural networks</em>.</p>",
         "<em>embedding</em>",
         "<strong>word2vec</strong>",
         "<strong>GloVe</strong>",
         "<em>neural networks</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Ensemble Learning",
      "definition_text":"Ensemble learning is a problem of learning a strong classifier by combining multiple weak classifiers.",
      "definition_html":[
         "<a name=\"Ensemble-Learning\"></a>",
         "<h2>Ensemble Learning</h2>",
         "<p><em>Ensemble learning</em> is a problem of learning a <em>strong classifier</em> by combining multiple <em>weak classifiers</em>.</p>",
         "<em>Ensemble learning</em>",
         "<em>strong classifier</em>",
         "<em>weak classifiers</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Ensemble Learning Algorithm",
      "definition_text":"An ensemble learning algorithm combines multiple weak classifiers to build a strong classifier (the one with a higher accuracy than that of each individual weak classifier).",
      "definition_html":[
         "<a name=\"Ensemble-Learning-Algorithm\"></a>",
         "<h2>Ensemble Learning Algorithm</h2>",
         "<p>An <em>ensemble learning algorithm</em> combines multiple <em>weak classifiers</em> to build a <em>strong classifier</em> (the one with a higher accuracy than that of each individual weak classifier).</p>",
         "<em>ensemble learning algorithm</em>",
         "<em>weak classifiers</em>",
         "<em>strong classifier</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Epoch",
      "definition_text":"An epoch is one pass through the training set by a machine learning algorithm.",
      "definition_html":[
         "<a name=\"Epoch\"></a>",
         "<h2>Epoch</h2>",
         "<p>An <em>epoch</em> is one pass through the <em>training set</em> by a machine learning algorithm.</p>",
         "<em>epoch</em>",
         "<em>training set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Evaluation Metric",
      "definition_text":"An evaluation metric is a formula or a technique used to measure the quality of the model. Examples include area under the ROC curve (AUC), F-score, log loss.",
      "definition_html":[
         "<a name=\"Evaluation-Metric\"></a>",
         "<h2>Evaluation Metric</h2>",
         "<p>An <em>evaluation metric</em> is a formula or a technique used to measure the quality of the <em>model</em>. Examples include <em>area under the ROC curve</em> (AUC), <em>F-score</em>, <em>log loss</em>.</p>",
         "<em>evaluation metric</em>",
         "<em>model</em>",
         "<em>area under the ROC curve</em>",
         "<em>F-score</em>",
         "<em>log loss</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Example",
      "definition_text":"An example (also called instance) is a member of a dataset. Typically, an example is a vector of features. Each feature represents some specific property of the example. For instance, if the dataset contains examples of stars, then one feature can represent the percentage of hydrogen in the star, another feature could represent star's diameter, a third feature could represent some property of star's magnetic field, and so on. All examples represented as vectors have vectors of the same dimensionality and every dimension represents the same feature.",
      "definition_html":[
         "<a name=\"Example\"></a>",
         "<h2>Example</h2>",
         "<p>An <em>example</em> (also called <em>instance</em>) is a member of a <em>dataset</em>. Typically, an example is a vector of <em>features</em>. Each feature represents some specific property of the example. For instance, if the dataset contains examples of stars, then one feature can represent the percentage of hydrogen in the star, another feature could represent star's diameter, a third feature could represent some property of star's magnetic field, and so on. All examples represented as vectors have vectors of the same dimensionality and every dimension represents the same feature.</p>",
         "<em>example</em>",
         "<em>instance</em>",
         "<em>dataset</em>",
         "<em>features</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Labeled Example",
      "definition_text":"A labeled example is a pair that contains the vector of features and a label. A label is typically the quantity the model tries to predict. If our vector of features represents the parameters of a star, then the label could be its age. The machine learning problem would be to predict the age of a star given the vector of its features.",
      "definition_html":[
         "<a name=\"Labeled-Example\"></a>",
         "<h2>Example, Labeled</h2>",
         "<p>A <em>labeled example</em> is a pair that contains the vector of features and a label. A label is typically the quantity the <em>model</em> tries to predict. If our vector of features represents the parameters of a star, then the label could be its age. The machine learning problem would be to predict the age of a star given the vector of its features.</p>",
         "<em>labeled example</em>",
         "<em>model</em>",
         "<p>Also, see <em>unlabeled example</em>.</p>",
         "<em>unlabeled example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Unlabeled Example",
      "definition_text":"An unlabeled example is an example that only contains features.",
      "definition_html":[
         "<a name=\"Unlabeled-Example\"></a>",
         "<h2>Example, Unlabeled</h2>",
         "<p>An <em>unlabeled example</em> is an <em>example</em> that only contains features.</p>",
         "<em>unlabeled example</em>",
         "<em>example</em>",
         "<p>Also, see <em>labeled example</em>.</p>",
         "<em>labeled example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Exploding Gradient Problem",
      "definition_text":"The exploding gradient problem is the opposite of the vanishing gradient problem. In deep neural networks (neural networks with many layers) gradients may explode during backpropagation, resulting in number overflows. A common technique to deal with exploding gradients is to perform gradient clipping.",
      "definition_html":[
         "<a name=\"Exploding-Gradient-Problem\"></a>",
         "<h2>Exploding Gradient Problem</h2>",
         "<p>The <em>exploding gradient problem</em> is the opposite of the <em>vanishing gradient problem</em>. In deep neural networks (neural networks with many layers) gradients may explode during backpropagation, resulting in number overflows. A common technique to deal with exploding gradients is to perform <em>gradient clipping</em>.</p>",
         "<em>exploding gradient problem</em>",
         "<em>vanishing gradient problem</em>",
         "<em>gradient clipping</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"F1 Score",
      "definition_text":"F1 score (also F-score or F-measure) evaluation metric combines both precision and recall as a measure of the effectiveness of classification:",
      "definition_html":[
         "<a name=\"F1-Score\"></a>",
         "<h2>F1 Score</h2>",
         "<p><em>F1 score</em> (also <strong>F-score</strong> or <strong>F-measure</strong>) <em>evaluation metric</em> combines both <em>precision</em> and <em>recall</em> as a measure of the effectiveness of classification:</p>",
         "<em>F1 score</em>",
         "<strong>F-score</strong>",
         "<strong>F-measure</strong>",
         "<em>evaluation metric</em>",
         "<em>precision</em>",
         "<em>recall</em>",
         "<p>$$F_{1} = 2 \\cdot \\frac {\\mathrm {precision} \\cdot \\mathrm {recall} }{\\mathrm {precision} +\\mathrm {recall}}$$</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"False Negative",
      "definition_text":"A false negative is an example in which the model mistakenly predicted the negative class. For example, the model inferred that a particular email message was not spam (the negative class), but that email message actually was spam.",
      "definition_html":[
         "<a name=\"False-Negative\"></a>",
         "<h2>False Negative (FN)</h2>",
         "<p>A <em>false negative</em> is an <em>example</em> in which the model mistakenly predicted the negative class. For example, the model inferred that a particular email message was not spam (the negative <em>class</em>), but that email message actually was spam.</p>",
         "<em>false negative</em>",
         "<em>example</em>",
         "<em>class</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"False Positive",
      "definition_text":"A false positive is an example in which the model mistakenly predicted the positive class. For example, the model inferred that a particular email message was spam (the positive class), but that email message was actually not spam.",
      "definition_html":[
         "<a name=\"False-Positive\"></a>",
         "<h2>False Positive (FP)</h2>",
         "<p>A <em>false positive</em> is an example in which the model mistakenly predicted the positive class. For example, the model inferred that a particular email message was spam (the positive <em>class</em>), but that email message was actually not spam.</p>",
         "<em>false positive</em>",
         "<em>class</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Feature",
      "definition_text":"A feature is an attribute of an example, usually a part of a feature vector. It can be numerical or categorical. If an example is a person, it can have the following features: height (numerical), weight (numerical), race (categorical), etc.",
      "definition_html":[
         "<a name=\"Feature\"></a>",
         "<h2>Feature</h2>",
         "<p>A <em>feature</em> is an attribute of an example, usually a part of a <em>feature vector</em>. It can be numerical or categorical. If an example is a person, it can have the following features: height (numerical), weight (numerical), race (categorical), etc.</p>",
         "<em>feature</em>",
         "<em>feature vector</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Feature Selection",
      "definition_text":"Feature selection is a process of removing from the dataset features that seem irrelevant for modeling.\nThis is a combinatorial optimization problem. The direct approach (the \"wrapper\" method) retrains and re-evaluates a given model for many different feature sets. An approximation (the \"filter\" method) instead optimizes simple criteria which tend to improve performance. The two simplest optimization methods are forward selection (keep adding the best feature) and backward elimination (keep removing the worst feature).",
      "definition_html":[
         "<a name=\"Feature-Selection\"></a>",
         "<h2>Feature Selection</h2>",
         "<p><em>Feature selection</em> is a process of removing from the dataset <em>features</em> that seem irrelevant for modeling.\nThis is a combinatorial optimization problem. The direct approach (the \"wrapper\" method) retrains and re-evaluates a given model for many different feature sets. An approximation (the \"filter\" method) instead optimizes simple criteria which tend to improve performance. The two simplest optimization methods are <strong>forward selection</strong> (keep adding the best feature) and <strong>backward elimination</strong> (keep removing the worst feature).</p>",
         "<em>Feature selection</em>",
         "<em>features</em>",
         "<strong>forward selection</strong>",
         "<strong>backward elimination</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Feature Vector",
      "definition_text":"A feature vector is a vector in which each dimension represent a certain feature of an example.",
      "definition_html":[
         "<a name=\"Feature-Vector\"></a>",
         "<h2>Feature Vector</h2>",
         "<p>A <em>feature vector</em> is a vector in which each dimension represent a certain <em>feature</em> of an <em>example</em>.</p>",
         "<em>feature vector</em>",
         "<em>feature</em>",
         "<em>example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Feedforward Neural Network",
      "definition_text":"A feedforward neural network is a neural network wherein connections between the units do not form a cycle. As such, it is different from recurrent neural networks.",
      "definition_html":[
         "<a name=\"Feedforward-Neural-Network\"></a>",
         "<h2>Feedforward Neural Network</h2>",
         "<p>A <em>feedforward neural network</em> is a <em>neural network</em> wherein connections between the <em>units</em> do not form a cycle. As such, it is different from <em>recurrent neural networks</em>.</p>",
         "<em>feedforward neural network</em>",
         "<em>neural network</em>",
         "<em>units</em>",
         "<em>recurrent neural networks</em>",
         "<p>In such a network, the information moves in only one direction, forward, from the input nodes, through the hidden nodes (if any) and to the output nodes. There are no cycles or loops in the network. See example below:</p>",
         "<p align=\"center\">\n<img alt=\"An example of a feedforward neural network with two hidden layers.\" src=\"https://www.semanti.ca/blog/assets/Glossary-of-Machine-Learning-Terms/feedforward-nn.png\" width=\"700\"/><br/>\nAn example of a feedforward neural network with two hidden layers. Source: <a href=\"https://medium.com/notes-on-learning/crash-course-in-deeplearning-cdfed577468e\">Medium</a>.\n</p>",
         "<img alt=\"An example of a feedforward neural network with two hidden layers.\" src=\"https://www.semanti.ca/blog/assets/Glossary-of-Machine-Learning-Terms/feedforward-nn.png\" width=\"700\"/>",
         "<br/>",
         "<a href=\"https://medium.com/notes-on-learning/crash-course-in-deeplearning-cdfed577468e\">Medium</a>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Few Shot Learning",
      "definition_text":"Few-shot learning is a machine learning approach, usually employed in classification, designed to learn effective classifiers from only a small number of training examples.",
      "definition_html":[
         "<a name=\"Few-Shot-Learning\"></a>",
         "<h2>Few-Shot Learning</h2>",
         "<p><em>Few-shot learning</em> is a machine learning approach, usually employed in <em>classification</em>, designed to learn effective classifiers from only a small number of <em>training examples</em>.</p>",
         "<em>Few-shot learning</em>",
         "<em>classification</em>",
         "<em>training examples</em>",
         "<p><em>One-shot learning</em> tries to learn from one example only.</p>",
         "<em>One-shot learning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Gated Recurrent Unit",
      "definition_text":"The Gated Recurrent Unit (or, simply, GRU) is a simplified version of an LSTM unit with fewer parameters. Just like an LSTM cell, it uses a gating mechanism to allow RNNs to efficiently learn long-range dependencies by reducing the vanishing gradient problem. The GRU consists of a reset and update gate that determine which the extent to which the unit should keep the old value and to which the new value has to replace it at the current time step.",
      "definition_html":[
         "<a name=\"Gated-Recurrent-Unit\"></a>",
         "<h2>Gated Recurrent Unit (GRU)</h2>",
         "<p>The <em>Gated Recurrent Unit</em> (or, simply, GRU) is a simplified version of an <em>LSTM</em> unit with fewer parameters. Just like an LSTM cell, it uses a gating mechanism to allow RNNs to efficiently learn long-range dependencies by reducing the <em>vanishing gradient problem</em>. The GRU consists of a reset and update gate that determine which the extent to which the unit should keep the old value and to which the new value has to replace it at the current time step.</p>",
         "<em>Gated Recurrent Unit</em>",
         "<em>LSTM</em>",
         "<em>vanishing gradient problem</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Gradient Clipping",
      "definition_text":"Gradient clipping means capping gradient values before applying them in gradient descent algorithm during backpropagation. Gradient clipping helps ensure numerical stability and prevents exploding gradient problem.",
      "definition_html":[
         "<a name=\"Gradient-Clipping\"></a>",
         "<h2>Gradient Clipping</h2>",
         "<p><em>Gradient clipping</em> means capping gradient values before applying them in gradient descent algorithm during <em>backpropagation</em>. Gradient clipping helps ensure numerical stability and prevents <em>exploding gradient problem</em>.</p>",
         "<em>Gradient clipping</em>",
         "<em>backpropagation</em>",
         "<em>exploding gradient problem</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Gradient Descent",
      "definition_text":"Gradient descent is an iterative optimization algorithm for differentiable functions. It is designed to find the minimum of a function. In many machine learning algorithms, gradient descent, or its variant is used to find the minimum of the loss function given the training dataset.",
      "definition_html":[
         "<a name=\"Gradient-Descent\"></a>",
         "<h2>Gradient Descent</h2>",
         "<p><em>Gradient descent</em> is an iterative optimization algorithm for differentiable functions. It is designed to find the minimum of a function. In many <em>machine learning algorithms</em>, gradient descent, or its variant is used to find the minimum of the <em>loss function</em> given the training dataset.</p>",
         "<em>Gradient descent</em>",
         "<em>machine learning algorithms</em>",
         "<em>loss function</em>",
         "<p>Also see: <em>stochastic gradient descent</em>.</p>",
         "<em>stochastic gradient descent</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Grid Search",
      "definition_text":"Grid search is a way of hyperparameter tuning. The process consists of training the model on all possible combinations of hyperparameter values and then selecting the best combination. The best combination of hyperparameters is the one that performs the best on the validation set.",
      "definition_html":[
         "<a name=\"Grid-Search\"></a>",
         "<h2>Grid Search</h2>",
         "<p><em>Grid search</em> is a way of <em>hyperparameter tuning</em>. The process consists of training the <em>model</em> on all possible combinations of hyperparameter values and then selecting the best combination. The best combination of hyperparameters is the one that performs the best on the <em>validation set</em>.</p>",
         "<em>Grid search</em>",
         "<em>hyperparameter tuning</em>",
         "<em>model</em>",
         "<em>validation set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hidden Layer",
      "definition_text":"A hidden layer in neural network is a layer in between input layers and output layers, where neurons take in a set of weighted inputs and produce an output through an activation function.",
      "definition_html":[
         "<a name=\"Hidden-Layer\"></a>",
         "<h2>Hidden Layer</h2>",
         "<p>A <em>hidden layer</em> in <em>neural network</em> is a layer in between input layers and output layers, where <em>neurons</em> take in a set of weighted inputs and produce an output through an <em>activation function</em>.</p>",
         "<em>hidden layer</em>",
         "<em>neural network</em>",
         "<em>neurons</em>",
         "<em>activation function</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hierarchical Clustering Algorithm",
      "definition_text":"Hierarchical clustering algorithms is a category of clustering algorithms that create a tree of clusters. Hierarchical clustering algorithms are well-suited to hierarchical data, such as botanical taxonomies. There are two types of hierarchical clustering algorithms:",
      "definition_html":[
         "<a name=\"Hierarchical-Clustering-Algorithm\"></a>",
         "<h2>Hierarchical Clustering Algorithm</h2>",
         "<p><em>Hierarchical clustering algorithms</em> is a category of <em>clustering algorithms</em> that create a tree of clusters. Hierarchical clustering algorithms are well-suited to hierarchical data, such as botanical taxonomies. There are two types of hierarchical clustering algorithms:</p>",
         "<em>Hierarchical clustering algorithms</em>",
         "<em>clustering algorithms</em>",
         "<ul>\n<li>An <em>agglomerative clustering algorithm</em> first assigns every example to its own cluster and iteratively merges the closest clusters to create a hierarchical tree;</li>\n<li>A <em>divisive clustering algorithm</em> first groups all examples into one cluster and then iteratively divides the cluster into a hierarchical tree.</li>\n</ul>",
         "<li>An <em>agglomerative clustering algorithm</em> first assigns every example to its own cluster and iteratively merges the closest clusters to create a hierarchical tree;</li>",
         "<em>agglomerative clustering algorithm</em>",
         "<li>A <em>divisive clustering algorithm</em> first groups all examples into one cluster and then iteratively divides the cluster into a hierarchical tree.</li>",
         "<em>divisive clustering algorithm</em>",
         "<p>See also: <em>partition clustering algorithm</em>.</p>",
         "<em>partition clustering algorithm</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hinge Loss",
      "definition_text":"The hinge loss is a loss function used for training classifiers. The hinge loss is used for \"maximum-margin\" classification, most notably for support vector machines (SVMs). For an intended output y\u2208\u22121,1y\u2208\u22121,1 and a classifier score ^yy^, the hinge loss of the prediction ^yy^ is defined as",
      "definition_html":[
         "<a name=\"Hinge-Loss\"></a>",
         "<h2>Hinge Loss</h2>",
         "<p>The <em>hinge loss</em> is a <em>loss function</em> used for training classifiers. The hinge loss is used for \"maximum-margin\" classification, most notably for <em>support vector machines</em> (SVMs). For an intended output \\(y \\in {-1,1}\\) and a classifier score \\(\\hat{y}\\), the hinge loss of the prediction \\(\\hat{y}\\) is defined as</p>",
         "<em>hinge loss</em>",
         "<em>loss function</em>",
         "<em>support vector machines</em>",
         "<p>$$loss(\\hat{y})=\\max(0,1-y \\cdot \\hat{y})$$</p>",
         "<p>Note that y should be the \"raw\" output of the classifier's decision function, not the predicted class label. For instance, in linear SVMs, \\(\\hat{y}=\\vec{w} \\cdot \\vec{x} + b\\), where \\((\\vec{w}, b)\\) are the parameters of the hyperplane and \\(\\vec{x}\\) is the example to classify.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Holdout Set",
      "definition_text":"Holdout set is a part of the dataset that contains examples intentionally not used (\"held out\") during training. The validation set and test set are examples of holdout data. Holdout data helps to evaluate model's ability to generalize to examples other than the examples it was trained on. The loss on the holdout set provides a better estimate of the loss on an unseen data set than does the loss on the training set.",
      "definition_html":[
         "<a name=\"Holdout-Set\"></a>",
         "<h2>Holdout Set</h2>",
         "<p><em>Holdout set</em> is a part of the <em>dataset</em> that contains <em>examples</em> intentionally not used (\"held out\") during training. The <em>validation set</em> and <em>test set</em> are examples of holdout data. Holdout data helps to evaluate <em>model</em>'s ability to generalize to examples other than the examples it was trained on. The loss on the holdout set provides a better estimate of the loss on an unseen data set than does the loss on the training set.</p>",
         "<em>Holdout set</em>",
         "<em>dataset</em>",
         "<em>examples</em>",
         "<em>validation set</em>",
         "<em>test set</em>",
         "<em>model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hyperparameter",
      "definition_text":"Hyperparameter is a parameter of a machine learning algorithm whose value is not optimized during training. Depending on the algorithm, a hyperparameter could be the number of training iterations, the size of the minibatch, a regularization parameter, the value of the learning rate, and many others.",
      "definition_html":[
         "<a name=\"Hyperparameter\"></a>",
         "<h2>Hyperparameter</h2>",
         "<p><em>Hyperparameter</em> is a parameter of a <em>machine learning algorithm</em> whose value is not optimized during training. Depending on the algorithm, a hyperparameter could be the number of training <em>iterations</em>, the size of the <em>minibatch</em>, a <em>regularization</em> parameter, the value of the <em>learning rate</em>, and many others.</p>",
         "<em>Hyperparameter</em>",
         "<em>machine learning algorithm</em>",
         "<em>iterations</em>",
         "<em>minibatch</em>",
         "<em>regularization</em>",
         "<em>learning rate</em>",
         "<p>Since hyperparameters are not optimized by the machine learning algorithm itself, it is often optimized using <em>cross-validation</em> and techniques like <em>grid search</em>, <em>random search</em>, <em>Bayesian optimization</em>, <em>evolutionary optimization</em>, and others.</p>",
         "<em>cross-validation</em>",
         "<em>grid search</em>",
         "<em>random search</em>",
         "<em>Bayesian optimization</em>",
         "<em>evolutionary optimization</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hyperparameter Tuning",
      "definition_text":"Hyperparameter tuning is the procedure that aims at finding the best values of hyperparameters, usually by trying different values and checking their performance on the validation set.",
      "definition_html":[
         "<a name=\"Hyperparameter-Tuning\"></a>",
         "<h2>Hyperparameter Tuning</h2>",
         "<p><em>Hyperparameter tuning</em> is the procedure that aims at finding the best values of <em>hyperparameters</em>, usually by trying different values and checking their performance on the <em>validation set</em>.</p>",
         "<em>Hyperparameter tuning</em>",
         "<em>hyperparameters</em>",
         "<em>validation set</em>",
         "<p>One frequent way of hyperparameter tuning is <em>grid search</em>.</p>",
         "<em>grid search</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Hyperplane",
      "definition_text":"A hyperplane is a boundary that separates a space into two subspaces. For example, a line is a hyperplane in two dimensions and a plane is a hyperplane in three dimensions. In machine learning, a hyperplane is usually a boundary separating a high-dimensional space. For instance, the Support Vector Machine (SVM) machine learning algorithm uses hyperplanes to separate positive classes from negative classes, often in a very high-dimensional space.",
      "definition_html":[
         "<a name=\"Hyperplane\"></a>",
         "<h2>Hyperplane</h2>",
         "<p>A <em>hyperplane</em> is a boundary that separates a space into two subspaces. For example, a line is a hyperplane in two dimensions and a plane is a hyperplane in three dimensions. In machine learning, a hyperplane is usually a boundary separating a high-dimensional space. For instance, the <strong>Support Vector Machine</strong> (SVM) machine learning algorithm uses hyperplanes to separate positive classes from negative classes, often in a very high-dimensional space.</p>",
         "<em>hyperplane</em>",
         "<strong>Support Vector Machine</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Input Layer",
      "definition_text":"The input layer in neural network is a layer whose neurons take as input the features of the input instance.",
      "definition_html":[
         "<a name=\"Input Layer\"></a>",
         "<h2>Input Layer</h2>",
         "<p>The <em>input layer</em> in <em>neural network</em> is a layer whose <em>neurons</em> take as input the <em>features</em> of the input <em>instance</em>.</p>",
         "<em>input layer</em>",
         "<em>neural network</em>",
         "<em>neurons</em>",
         "<em>features</em>",
         "<em>instance</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Instance",
      "definition_text":"See example.",
      "definition_html":[
         "<a name=\"Instance\"></a>",
         "<h2>Instance</h2>",
         "<p>See <em>example</em>.</p>",
         "<em>example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Instance Based Learning",
      "definition_text":"Instance-based learning (sometimes called memory-based learning) is a family of learning algorithms that, instead of performing explicit generalization, compares new problem instances with instances seen in training, which have been stored in memory.",
      "definition_html":[
         "<a name=\"Instance-Based-Learning\"></a>",
         "<h2>Instance-Based Learning</h2>",
         "<p><em>Instance-based learning</em> (sometimes called memory-based learning) is a family of <em>learning algorithms</em> that, instead of performing explicit generalization, compares new problem instances with instances seen in training, which have been stored in memory.</p>",
         "<em>Instance-based learning</em>",
         "<em>learning algorithms</em>",
         "<p>An example of an instance-based learning algorithm is <em>k Nearest Neighbours</em>.</p>",
         "<em>k Nearest Neighbours</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Iteration",
      "definition_text":"In machine learning, iteration refers to the number of times the machine learning algorithm's parameters are updated while training a model on a dataset. For example, each iteration of training a neural network takes a certain number of training examples and updates the parameters by using gradient descent or some other weight update rule.",
      "definition_html":[
         "<a name=\"Iteration\"></a>",
         "<h2>Iteration</h2>",
         "<p>In machine learning, <em>iteration</em> refers to the number of times the <em>machine learning algorithm</em>'s parameters are updated while training a model on a dataset. For example, each iteration of training a <em>neural network</em> takes a certain number of <em>training examples</em> and updates the <em>parameters</em> by using <em>gradient descent</em> or some other weight update rule.</p>",
         "<em>iteration</em>",
         "<em>machine learning algorithm</em>",
         "<em>neural network</em>",
         "<em>training examples</em>",
         "<em>parameters</em>",
         "<em>gradient descent</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"K Means",
      "definition_text":"k-means is a partitioning clustering algorithm for clustering data into exactly kk clusters. It works as follows. First, define kk initial cluster centroids. Second, assign each example to the closest centroid. Third, recompute the new position for each centroid as the average of the examples assigned to it. Iterate back to step two.",
      "definition_html":[
         "<a name=\"K-Means\"></a>",
         "<h2>K-Means</h2>",
         "<p><em>k-means</em> is a <em>partitioning clustering algorithm</em> for clustering data into exactly \\(k\\) clusters. It works as follows. First, define \\(k\\) initial cluster <em>centroids</em>. Second, assign each example to the closest centroid. Third, recompute the new position for each centroid as the average of the examples assigned to it. Iterate back to step two.</p>",
         "<em>k-means</em>",
         "<em>partitioning clustering algorithm</em>",
         "<em>centroids</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"K Nearest Neighbors",
      "definition_text":"K Nearest Neighbors (also often abbreviated as kNN) is an instance-based learning algorithm that can be used for both classification and regression. When used in the classification context, the algorithm predicts the class of an unlabeled example as the majority class among kk its closest neighbors in the vector space. In the regression context, the label of an unlabeled example is calculated as an average of the labels of the kk its closest neighbors. The distance from one example to another is usually given by a similarity metric.",
      "definition_html":[
         "<a name=\"K-Nearest-Neighbors\"></a>",
         "<h2>K Nearest Neighbors</h2>",
         "<p><em>K Nearest Neighbors</em> (also often abbreviated as kNN) is an <em>instance-based learning algorithm</em> that can be used for both classification and regression. When used in the <em>classification</em> context, the algorithm predicts the class of an <em>unlabeled example</em> as the majority class among \\(k\\) its closest neighbors in the vector space. In the <em>regression</em> context, the label of an unlabeled example is calculated as an average of the labels of the \\(k\\) its closest neighbors. The distance from one example to another is usually given by a <em>similarity metric</em>.</p>",
         "<em>K Nearest Neighbors</em>",
         "<em>instance-based learning algorithm</em>",
         "<em>classification</em>",
         "<em>unlabeled example</em>",
         "<em>regression</em>",
         "<em>similarity metric</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Kernel",
      "definition_text":"Kernel methods can be thought of as instance-based learners: rather than learning some fixed set of parameters corresponding to the features of their inputs, they instead \"remember\" the ii-th training example (\u2192xi,yi)(x\u2192i,yi) and learn for it a corresponding weight wiwi. Prediction for unlabeled inputs, i.e., those not in the training set, is treated by the application of a similarity function kk, called a kernel, between the unlabeled input \u2192x\u2032x\u2032\u2192 and each of the training inputs \u2192xix\u2192i. For instance, a kernelized binary classifier typically computes a weighted sum of similarities",
      "definition_html":[
         "<a name=\"Kernel\"></a>",
         "<h2>Kernel</h2>",
         "<p><em>Kernel</em> methods can be thought of as <em>instance-based learners</em>: rather than learning some fixed set of <em>parameters</em> corresponding to the <em>features</em> of their inputs, they instead \"remember\" the \\(i\\)-th training example \\( (\\vec{x}^{i},y^{i}) \\) and learn for it a corresponding weight \\(w^{i}\\). Prediction for unlabeled inputs, i.e., those not in the training set, is treated by the application of a similarity function \\(k\\), called a <em>kernel</em>, between the unlabeled input \\(\\vec{x'}\\) and each of the training inputs \\(\\vec{x} ^{i}\\). For instance, a kernelized binary classifier typically computes a weighted sum of similarities</p>",
         "<em>Kernel</em>",
         "<em>instance-based learners</em>",
         "<em>parameters</em>",
         "<em>features</em>",
         "<em>kernel</em>",
         "<p>$$\\hat{y}=\\operatorname{sgn} \\sum_{i=1}^{n} w^{i}y^{i}k(\\vec{x}^{i},\\vec{x'}),$$</p>",
         "<p>where</p>",
         "<ul>\n<li>\\(\\hat {y} \\in {-1,+1}\\) is the kernelized binary classifier's predicted label for the unlabeled input \\(\\vec{x'}\\)  whose hidden true label \\(y\\) is of interest;</li>\n<li>\\(k\\colon {\\mathcal{X}}\\times {\\mathcal{X}} \\to \\vec{R}\\) is the kernel function that measures similarity between any pair of inputs \\(\\vec{x}, \\vec{x'} \\in \\mathcal{X}\\);</li>\n<li>the sum ranges over the \\(n\\) labeled examples \\( \\{(\\vec{x}^{i},y^{i})\\} \\) (\\(i=1..n\\)) in the classifier's training set, with \\(y^{i} \\in {-1,+1}\\);</li>\n<li>the \\(w^{i} \\in \\mathbb {R}\\) are the weights for the training examples, as determined by the learning algorithm;</li>\n<li>the sign function \\(\\operatorname{sgn}\\) determines whether the predicted classification \\(\\hat{y}\\) comes out positive or negative.</li>\n</ul>",
         "<li>\\(\\hat {y} \\in {-1,+1}\\) is the kernelized binary classifier's predicted label for the unlabeled input \\(\\vec{x'}\\)  whose hidden true label \\(y\\) is of interest;</li>",
         "<li>\\(k\\colon {\\mathcal{X}}\\times {\\mathcal{X}} \\to \\vec{R}\\) is the kernel function that measures similarity between any pair of inputs \\(\\vec{x}, \\vec{x'} \\in \\mathcal{X}\\);</li>",
         "<li>the sum ranges over the \\(n\\) labeled examples \\( \\{(\\vec{x}^{i},y^{i})\\} \\) (\\(i=1..n\\)) in the classifier's training set, with \\(y^{i} \\in {-1,+1}\\);</li>",
         "<li>the \\(w^{i} \\in \\mathbb {R}\\) are the weights for the training examples, as determined by the learning algorithm;</li>",
         "<li>the sign function \\(\\operatorname{sgn}\\) determines whether the predicted classification \\(\\hat{y}\\) comes out positive or negative.</li>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Label",
      "definition_text":"A label is a class (in classification) or a target (in regression) assigned to a labeled example.",
      "definition_html":[
         "<a name=\"Label\"></a>",
         "<h2>Label</h2>",
         "<p>A <em>label</em> is a <em>class</em> (in classification) or a <em>target</em> (in regression) assigned to a <em>labeled example</em>.</p>",
         "<em>label</em>",
         "<em>class</em>",
         "<em>target</em>",
         "<em>labeled example</em>",
         "<h2>Labeled Example</h2>",
         "<p>See <em>Example, Labeled</em>.</p>",
         "<em>Example, Labeled</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Linear Regression",
      "definition_text":"Linear regression is a popular regression algorithm that learns a model which is a linear combination of features.",
      "definition_html":[
         "<a name=\"Linear-Regression\"></a>",
         "<h2>Linear Regression</h2>",
         "<p><em>Linear regression</em> is a popular <em>regression algorithm</em> that learns a model which is a linear combination of features.</p>",
         "<em>Linear regression</em>",
         "<em>regression algorithm</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Learning Algorithm",
      "definition_text":"A learning algorithm, or a machine learning algorithm, is any algorithm that can produce a model by analyzing a dataset.",
      "definition_html":[
         "<a name=\"Learning-Algorithm\"></a>",
         "<h2>Learning Algorithm</h2>",
         "<p>A <em>learning algorithm</em>, or a <em>machine learning algorithm</em>, is any algorithm that can produce a <em>model</em> by analyzing a <em>dataset</em>.</p>",
         "<em>learning algorithm</em>",
         "<em>machine learning algorithm</em>",
         "<em>model</em>",
         "<em>dataset</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Learning Rate",
      "definition_text":"Learning rate is a scalar used to update model parameters via gradient descent. During each iteration, the gradient descent algorithm multiplies the gradient by the learning rate. The resulting product is called the gradient step.",
      "definition_html":[
         "<a name=\"Learning-Rate\"></a>",
         "<h2>Learning Rate</h2>",
         "<p><em>Learning rate</em> is a scalar used to update <em>model</em> <em>parameters</em> via <em>gradient descent</em>. During each iteration, the gradient descent algorithm multiplies the gradient by the learning rate. The resulting product is called the <strong>gradient step</strong>.</p>",
         "<em>Learning rate</em>",
         "<em>model</em>",
         "<em>parameters</em>",
         "<em>gradient descent</em>",
         "<strong>gradient step</strong>",
         "<p>Learning rate is one of the <em>hyperparameters</em> of <em>neural network</em> learning algorithms.</p>",
         "<em>hyperparameters</em>",
         "<em>neural network</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Log Loss",
      "definition_text":"Log loss is loss function used in the binary logistic regression:",
      "definition_html":[
         "<a name=\"Log-Loss\"></a>",
         "<h2>Log Loss</h2>",
         "<p><em>Log loss</em> is <em>loss function</em> used in the binary <em>logistic regression</em>:</p>",
         "<em>Log loss</em>",
         "<em>loss function</em>",
         "<em>logistic regression</em>",
         "<p>$$logloss(y) = -{(y\\log(p) + (1 - y)\\log(1 - p))},$$</p>",
         "<p>where \\(p\\) is the probability predicted by the model that the label is \\(y\\) and \\(y\\) is the true label.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Logistic Regression",
      "definition_text":"Logistic regression is regression algorithm that produces a model that generates a probability for each possible discrete label value in classification problems by applying a sigmoid function to a linear prediction.",
      "definition_html":[
         "<a name=\"Logistic-Regression\"></a>",
         "<h2>Logistic Regression</h2>",
         "<p><em>Logistic regression</em> is <em>regression algorithm</em> that produces a model that generates a probability for each possible discrete <em>label</em> value in classification problems by applying a <em>sigmoid function</em> to a linear prediction. </p>",
         "<em>Logistic regression</em>",
         "<em>regression algorithm</em>",
         "<em>label</em>",
         "<em>sigmoid function</em>",
         "<p>The term <em>logistic regression</em> is usually employed in <em>binary classification</em> problems. If the label can have more than two discrete values as in <em>multi-class classification</em> problems, then the term multi-class logistic regression or multinomial regression is used.</p>",
         "<em>logistic regression</em>",
         "<em>binary classification</em>",
         "<em>multi-class classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Long Short Term Memory Unit",
      "definition_text":"Long short-term memory (LSTM) units in recurrent neural networks help reducing the vanishing gradient problem during the backpropagation. LSTM unit is a neuron that has a memory cell and three gates: \"input\", \"output\" and \"forget\". The purpose of the memory cell is to retain information previously used by the RNN or forget if needed. Neural networks with LSTM units, also called LSTM networks, are explicitly designed to avoid the long-term dependency problem in RNNs and have been shown to be able to learn complex sequences better than simple RNNs.",
      "definition_html":[
         "<a name=\"Long-Short-Term-Memory-Unit\"></a>",
         "<h2>Long Short-Term Memory Unit (LSTM)</h2>",
         "<p><em>Long short-term memory</em> (LSTM) <em>units</em> in <em>recurrent neural networks</em> help reducing the <em>vanishing gradient problem</em> during the <em>backpropagation</em>. LSTM unit is a <em>neuron</em> that has a memory cell and three gates: \"input\", \"output\" and \"forget\". The purpose of the memory cell is to retain information previously used by the RNN or forget if needed. Neural networks with LSTM units, also called LSTM networks, are explicitly designed to avoid the long-term dependency problem in RNNs and have been shown to be able to learn complex sequences better than simple RNNs.</p>",
         "<em>Long short-term memory</em>",
         "<em>units</em>",
         "<em>recurrent neural networks</em>",
         "<em>vanishing gradient problem</em>",
         "<em>backpropagation</em>",
         "<em>neuron</em>",
         "<p>The structure of a memory cell is: an input gate, that determines how much of information from the previous layer gets stored in the cell; the output gate, that determines how of the next layer gets to know about the state of the current cell; and the forget gate, which determines what to forget about the current state of the memory cell.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Loss Function",
      "definition_text":"In the classification context, a function l(^y,y):Y\u00d7Y\u2192R\u22650l(y^,y):Y\u00d7Y\u2192R\u22650, describes the cost of assigning the label ^yy^ to a sample of class yy.",
      "definition_html":[
         "<a name=\"Loss-Function\"></a>",
         "<h2>Loss Function</h2>",
         "<p>In the <em>classification</em> context, a function \\(l(\n\\hat{y}, y) : Y \\times Y \\rightarrow \\mathbb {R}_{\\ge 0}\\), describes the cost of assigning the <em>label</em> \\(\\hat{y}\\) to a sample of <em>class</em> \\(y\\).</p>",
         "<em>classification</em>",
         "<em>label</em>",
         "<em>class</em>",
         "<p>In the <em>regression</em> context, a function \\(l(\\hat{y}, y) : \\mathbb{R} \\times\n\\mathbb {R} \\rightarrow \\mathbb {R}_{\\ge 0}\\), describes the cost of assigning the value \\(\\hat{y}\\) to the regression\nfunction evaluated at \\(\\vec{x}\\), where it takes value \\(y\\).</p>",
         "<em>regression</em>",
         "<p>The simplest loss function for classification is the \\(0-1\\) loss, having value 0 if\nand only if \\(y = \\hat{y}\\), and value \\(1\\) otherwise.\nThe typical loss function for regression estimation is the squared error.\nThe expected value of the loss is called <em>risk</em>.\nSynonym: <em>cost function</em>, term less frequently used in the classification literature.</p>",
         "<em>risk</em>",
         "<em>cost function</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"LSTM Network",
      "definition_text":"An LSTM network is a recurrent neural network that is using LSTM units.",
      "definition_html":[
         "<a name=\"LSTM-Network\"></a>",
         "<h2>LSTM Network</h2>",
         "<p>An <em>LSTM network</em> is a <em>recurrent neural network</em> that is using <em>LSTM units</em>.</p>",
         "<em>LSTM network</em>",
         "<em>recurrent neural network</em>",
         "<em>LSTM units</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Machine Learning",
      "definition_text":"Machine learning is a subfield of computer science, mathematics, and statistics that focuses on the design of systems that can learn from and make decisions and predictions based on data. Machine learning enables computers to act and make decisions based on examples rather than being explicitly programmed to carry out a certain task. Machine learning algorithms are designed to learn and improve over time when exposed to new data.",
      "definition_html":[
         "<a name=\"Machine-Learning\"></a>",
         "<h2>Machine Learning</h2>",
         "<p><em>Machine learning</em> is a subfield of computer science, mathematics, and statistics that focuses on the design of systems that can learn from and make decisions and predictions based on data. Machine learning enables computers to act and make decisions based on examples rather than being explicitly programmed to carry out a certain task. <em>Machine learning algorithms</em> are designed to learn and improve over time when exposed to new data.</p>",
         "<em>Machine learning</em>",
         "<em>Machine learning algorithms</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Machine Learning Algorithm",
      "definition_text":"See learning algorithm.",
      "definition_html":[
         "<a name=\"Machine-Learning-Algorithm\"></a>",
         "<h2>Machine Learning Algorithm</h2>",
         "<p>See <em>learning algorithm</em>.</p>",
         "<em>learning algorithm</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Metric Learning",
      "definition_text":"Metric learning (or similarity metric learning) is the task of learning a similarity function over examples. A metric or similarity function has to obey four axioms: non-negativity, identity of indiscernibles, symmetry, and subadditivity/triangle inequality. In practice, metric learning algorithms ignore the condition of identity of indiscernibles and learn a pseudo-metric.",
      "definition_html":[
         "<a name=\"Metric-Learning\"></a>",
         "<h2>Metric Learning</h2>",
         "<p><em>Metric learning</em> (or similarity metric learning) is the task of learning a similarity function over <em>examples</em>. A metric or similarity function has to obey four axioms: non-negativity, identity of indiscernibles, symmetry, and subadditivity/triangle inequality. In practice, metric learning algorithms ignore the condition of identity of indiscernibles and learn a pseudo-metric.</p>",
         "<em>Metric learning</em>",
         "<em>examples</em>",
         "<h2>Minibatch</h2>",
         "<p>See <em>batch</em>.</p>",
         "<em>batch</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Model",
      "definition_text":"A model, also known as a statistical model, is the result of a machine learning algorithm applied to the training data. Model is often a parametrized mathematical formula, where parameters are learning by the machine learning algorithm. Given an input example, a model can produce the classification label or regression value directly, or it can produce a probability for each possible value (label).",
      "definition_html":[
         "<a name=\"Model\"></a>",
         "<h2>Model</h2>",
         "<p>A <em>model</em>, also known as a <em>statistical model</em>, is the result of a <em>machine learning algorithm</em> applied to the training data. Model is often a parametrized mathematical formula, where parameters are learning by the machine learning algorithm. Given an input example, a model can produce the classification label or regression value directly, or it can produce a probability for each possible value (label).</p>",
         "<em>model</em>",
         "<em>statistical model</em>",
         "<em>machine learning algorithm</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Classification Model",
      "definition_text":"A classification model is the model that is used to classify examples, that is to produce a categorical label given a feature vector.",
      "definition_html":[
         "<a name=\"Classification Model\"></a>",
         "<h2>Model, Classification</h2>",
         "<p>A <em>classification model</em> is the model that is used to classify <em>examples</em>, that is to produce a categorical label given a <em>feature vector</em>.</p>",
         "<em>classification model</em>",
         "<em>examples</em>",
         "<em>feature vector</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Regression Model",
      "definition_text":"A regression model is the model that is used to produce a real-valued label given a feature vector.",
      "definition_html":[
         "<a name=\"Regression-Model\"></a>",
         "<h2>Model, Regression</h2>",
         "<p>A <em>regression model</em> is the model that is used to produce a real-valued label given a <em>feature vector</em>.</p>",
         "<em>regression model</em>",
         "<em>feature vector</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Multi Class Classification",
      "definition_text":"Multi-class classification is a classification problem that distinguishes among more than two classes. For example, the problem of assigning a label such as \"history\", \"technology\", \"finance\", etc to a text document would be multi-class. Conversely, the problem of dividing emails into only two categories (spam and not spam) would be a binary classification problem.",
      "definition_html":[
         "<a name=\"Multi-Class-Classification\"></a>",
         "<h2>Multi-Class Classification</h2>",
         "<p><em>Multi-class classification</em> is a <em>classification</em> problem that distinguishes among more than two classes. For example, the problem of assigning a label such as \"history\", \"technology\", \"finance\", etc to a text document would be multi-class. Conversely, the problem of dividing emails into only two categories (spam and not spam) would be a <em>binary classification</em> problem.</p>",
         "<em>Multi-class classification</em>",
         "<em>classification</em>",
         "<em>binary classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Multinomial Regression",
      "definition_text":"Multinomial regression is a variant of the logistic regression algorithm used for multi-class classification problems.",
      "definition_html":[
         "<a name=\"Multinomial-Regression\"></a>",
         "<h2>Multinomial Regression</h2>",
         "<p><em>Multinomial regression</em> is a variant of the <em>logistic regression</em> algorithm used for <em>multi-class classification</em> problems.</p>",
         "<em>Multinomial regression</em>",
         "<em>logistic regression</em>",
         "<em>multi-class classification</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Neuron",
      "definition_text":"A neuron, also called unit is a node in a neural network, typically taking in multiple input values and generating one output value. The neuron calculates the output value by applying an activation function (nonlinear transformation) to a weighted sum of input values.",
      "definition_html":[
         "<a name=\"Neuron\"></a>",
         "<h2>Neuron</h2>",
         "<p>A <em>neuron</em>, also called <em>unit</em> is a node in a <em>neural network</em>, typically taking in multiple input values and generating one output value. The neuron calculates the output value by applying an <em>activation function</em> (nonlinear transformation) to a weighted sum of input values.</p>",
         "<em>neuron</em>",
         "<em>unit</em>",
         "<em>neural network</em>",
         "<em>activation function</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Neural Network",
      "definition_text":"A model that is composed of layers consisting of simple connected units or neurons.",
      "definition_html":[
         "<a name=\"Neural-Network\"></a>",
         "<h2>Neural Network</h2>",
         "<p>A <em>model</em> that is composed of layers consisting of simple connected <em>units</em> or <em>neurons</em>.</p>",
         "<em>model</em>",
         "<em>units</em>",
         "<em>neurons</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Normalization",
      "definition_text":"Normalization is the process of converting an actual range of values into a standard range of values, typically in the interval [\u22121,+1][\u22121,+1] or [0,1][0,1].",
      "definition_html":[
         "<a name=\"Normalization\"></a>",
         "<h2>Normalization</h2>",
         "<p><em>Normalization</em> is the process of converting an actual range of values into a standard range of values, typically in the interval \\([-1,+1]\\) or \\([0,1]\\). </p>",
         "<em>Normalization</em>",
         "<p>For example, suppose the natural range of a certain <em>feature</em> is \\(350\\) to \\(1,450\\). By subtracting \\(350\\) from every value of the feature, and dividing the result by \\(1,100\\), one can normalize those values into the range \\([0,1]\\).</p>",
         "<em>feature</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"One Hot Encoding",
      "definition_text":"One-hot encoding refers to a way of transforming a categorical feature into a vector of several binary features where all components are 00, except for one component with a value of 11. For example, if our example has a categorical feature \"weather\" and this feature has three possible values: \"sun\", \"rain\", \"clouds\", then to transform this feature into something a machine learning algorithm that can only work with numerical values, one can transform this feature into a vector of three numerical values:",
      "definition_html":[
         "<a name=\"One-Hot-Encoding\"></a>",
         "<h2>One-Hot Encoding</h2>",
         "<p><em>One-hot encoding</em> refers to a way of transforming a <em>categorical feature</em> into a vector of several binary features where all components are \\(0\\), except for one component with a value of \\(1\\). For example, if our <em>example</em> has a categorical feature \"weather\" and this feature has three possible values: \"sun\", \"rain\", \"clouds\", then to transform this feature into something a <em>machine learning algorithm</em> that can only work with numerical values, one can transform this feature into a vector of three numerical values:</p>",
         "<em>One-hot encoding</em>",
         "<em>categorical feature</em>",
         "<em>example</em>",
         "<em>machine learning algorithm</em>",
         "<p>$$sun = [1,0,0]$$\n$$rain = [0,1,0]$$\n$$clouds = [0,0,1]$$</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"One Shot Learning",
      "definition_text":"One-shot learning is the problem of training a model with only a single example per class.",
      "definition_html":[
         "<a name=\"One-Shot-Learning\"></a>",
         "<h2>One-Shot Learning</h2>",
         "<p><em>One-shot learning</em> is the problem of training a <em>model</em> with only a single <em>example</em> per <em>class</em>.</p>",
         "<em>One-shot learning</em>",
         "<em>model</em>",
         "<em>example</em>",
         "<em>class</em>",
         "<p>One way to build a system capable of one-shot learning is to use <em>representation learning</em>, to learn representations or <em>features</em> of data that can be used to accurately classify a single example.</p>",
         "<em>representation learning</em>",
         "<em>features</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Outlier",
      "definition_text":"The output layer in neural network is a layer whose neurons produce the output (for the classification or regression task).",
      "definition_html":[
         "<a name=\"Outlier\"></a>",
         "<h2>Outlier</h2>",
         "<p>An <em>outlier</em> is an <em>example</em> that appears far away and diverges from an overall pattern in the <em>dataset</em>:</p>",
         "<em>outlier</em>",
         "<em>example</em>",
         "<em>dataset</em>",
         "<p align=\"center\">\n<img alt=\"An outlier.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/outlier-example.jpg\" width=\"500\"/><br/>\nAn outlier.\n</p>",
         "<img alt=\"An outlier.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/outlier-example.jpg\" width=\"500\"/>",
         "<br/>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Output Layer",
      "definition_text":"Overfitting occurs when the machine learning algorithm learns a model that fits the training data too well by incorporating details and noise specific to the training data. Overfitting is characterized by the nearly perfect prediction by the model of the labels of the training examples and poor prediction of the labels of examples from the validation set.",
      "definition_html":[
         "<a name=\"Output-Layer\"></a>",
         "<h2>Output Layer</h2>",
         "<p>The <em>output layer</em> in <em>neural network</em> is a layer whose <em>neurons</em> produce the output (for the <em>classification</em> or <em>regression</em> task).</p>",
         "<em>output layer</em>",
         "<em>neural network</em>",
         "<em>neurons</em>",
         "<em>classification</em>",
         "<em>regression</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Overfitting",
      "definition_text":"A parameter of a model is the quantity a machine learning algorithm modifies in order to minimize the loss function. For example, in neural networks, parameters are weights applied to inputs of neurons.",
      "definition_html":[
         "<a name=\"Overfitting\"></a>",
         "<h2>Overfitting</h2>",
         "<p><em>Overfitting</em> occurs when the machine learning algorithm learns a model that fits the training data too well by incorporating details and noise specific to the training data. Overfitting is characterized by the nearly perfect prediction by the model of the labels of the <em>training examples</em> and poor prediction of the labels of examples from the validation set.</p>",
         "<em>Overfitting</em>",
         "<em>training examples</em>",
         "<p>The problem of overfitting is usually solved by <em>regularization</em> or <em>early stopping</em>,</p>",
         "<em>regularization</em>",
         "<em>early stopping</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Parameter",
      "definition_text":"A partitioning clustering algorithm is used to put unlabeled examples, within a dataset, into multiple groups based on their similarity. The similarity is given by a similarity metric, chosen by the analyst. The algorithms also require the analyst to specify the number of clusters to be generated.",
      "definition_html":[
         "<a name=\"Parameter\"></a>",
         "<h2>Parameter</h2>",
         "<p>A <em>parameter</em> of a <em>model</em> is the quantity a machine learning algorithm modifies in order to minimize the <em>loss function</em>. For example, in <em>neural networks</em>, parameters are weights applied to inputs of <em>neurons</em>.</p>",
         "<em>parameter</em>",
         "<em>model</em>",
         "<em>loss function</em>",
         "<em>neural networks</em>",
         "<em>neurons</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Partitioning Clustering Algorithm",
      "definition_text":"Pooling means reducing a matrix created by an earlier convolution to a smaller matrix. Pooling usually involves taking either the maximum or average value across the pooled area.",
      "definition_html":[
         "<a name=\"Partitioning-Clustering-Algorithm\"></a>",
         "<h2>Partitioning Clustering Algorithm</h2>",
         "<p>A <em>partitioning clustering algorithm</em> is used to put <em>unlabeled examples</em>, within a dataset, into multiple groups based on their similarity. The similarity is given by a <em>similarity metric</em>, chosen by the analyst. The algorithms also require the analyst to specify the number of clusters to be generated.</p>",
         "<em>partitioning clustering algorithm</em>",
         "<em>unlabeled examples</em>",
         "<em>similarity metric</em>",
         "<p>Examples of a partition clustering algorithm include <em>k-means</em>, <strong>k-medoids</strong>, <strong>Fuzzy c-means</strong>.</p>",
         "<em>k-means</em>",
         "<strong>k-medoids</strong>",
         "<strong>Fuzzy c-means</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Pooling",
      "definition_text":"Population is the complete set of examples, from which the dataset was obtained. Usually, the dataset size is assumed to be much smaller than the size of the population. In many cases, population size is infinite.",
      "definition_html":[
         "<a name=\"Pooling\"></a>",
         "<h2>Pooling</h2>",
         "<p><em>Pooling</em> means reducing a matrix created by an earlier convolution to a smaller matrix. Pooling usually involves taking either the maximum or average value across the pooled area.</p>",
         "<em>Pooling</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Population",
      "definition_text":"Precision can be measured as of the total positive predictions made by the model, how many those positive predictions were correct. It can be computed as follows:",
      "definition_html":[
         "<a name=\"Population\"></a>",
         "<h2>Population</h2>",
         "<p><em>Population</em> is the complete set of examples, from which the <em>dataset</em> was obtained. Usually, the dataset size is assumed to be much smaller than the size of the population. In many cases, population size is infinite.</p>",
         "<em>Population</em>",
         "<em>dataset</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Precision",
      "definition_text":"See model.",
      "definition_html":[
         "<a name=\"Precision\"></a>",
         "<h2>Precision</h2>",
         "<p><em>Precision</em> can be measured as of the total positive predictions made by the <em>model</em>, how many those positive predictions were correct. It can be computed as follows:</p>",
         "<em>Precision</em>",
         "<em>model</em>",
         "<p>$$precision = \\frac{TP}{(TP + FP)},$$\nwhere \\(TP\\) is the number of <em>true positives</em>, \\(FP\\) is the number of <em>false positives</em>.</p>",
         "<em>true positives</em>",
         "<em>false positives</em>",
         "<p>See also: <em>recall</em> and <em>confusion matrix</em>.</p>",
         "<em>recall</em>",
         "<em>confusion matrix</em>",
         "<h2>Predictive Model</h2>",
         "<p>See <em>model</em>.</p>",
         "<em>model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Principal Component Analysis",
      "definition_text":"Principal component analysis, or PCA, is a linear transformation which projects nn examples, each consisting of mm features on a hyperplane in such a way that the projection error is minimal.",
      "definition_html":[
         "<a name=\"Principal-Component-Analysis\"></a>",
         "<h2>Principal Component Analysis (PCA)</h2>",
         "<p><em>Principal component analysis</em>, or PCA, is a linear transformation which projects \\(n\\) examples, each consisting of \\(m\\) features on a hyperplane in such a way that the projection error is minimal.</p>",
         "<em>Principal component analysis</em>",
         "<p>The principal components are random variables of maximal variance constructed from linear combinations of the input features. Equivalently, they are the projections onto the principal component axes, which are lines that minimize the average squared distance to each example in the data set. To ensure uniqueness, all of the principal component axes must be orthogonal.</p>",
         "<p>Below, for a two-dimensional dataset, its two principal components are shown as arrows:</p>",
         "<p align=\"center\">\n<img alt=\"Principal components.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/pca.png\" width=\"500\"/><br/>\nPrincipal components. Source: Wikipedia.\n</p>",
         "<img alt=\"Principal components.\" src=\"/blog/assets/Glossary-of-Machine-Learning-Terms/pca.png\" width=\"500\"/>",
         "<br/>",
         "<p>Basically, any dataset can be represented by its principal component vectors and the projections of examples on those vectors. By keeping only several biggest principal components and the projections of the examples on them, and by discarding the rest of information, one can reconstruct the dataset from a much smaller amount of information (with some small loss in accuracy of reconstruction because of the discarded information).</p>",
         "<p>PCA is often used for not just for dimensionality reduction, but also for visualization (by reducing the dataset to two or three dimensions/principal components) and clustering (by doing it in the reduced space).</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Random Search",
      "definition_text":"Random search is a hyperparameter tuning technique in which the combinations of different hyperparameter values are first generated and then they are sampled randomly and used to train a model.",
      "definition_html":[
         "<a name=\"Random-Search\"></a>",
         "<h2>Random Search</h2>",
         "<p><em>Random search</em> is a <em>hyperparameter tuning</em> technique in which the combinations of different hyperparameter values are first generated and then they are sampled randomly and used to train a model.</p>",
         "<em>Random search</em>",
         "<em>hyperparameter tuning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Recall",
      "definition_text":"Recall is described as the measure of how many of the positively labeled examples were correctly classified by the model:",
      "definition_html":[
         "<a name=\"Recall\"></a>",
         "<h2>Recall</h2>",
         "<p><em>Recall</em> is described as the measure of how many of the positively <em>labeled examples</em> were correctly classified by the <em>model</em>:</p>",
         "<em>Recall</em>",
         "<em>labeled examples</em>",
         "<em>model</em>",
         "<p>$$recall = \\frac{TP}{(TP + FN)},$$</p>",
         "<p>where \\(TP\\) is the number of <em>true positives</em> and \\(FN\\) is the number of <em>false negatives</em>.</p>",
         "<em>true positives</em>",
         "<em>false negatives</em>",
         "<p>See also: <em>precision</em> and <em>confusion matrix</em>.</p>",
         "<em>precision</em>",
         "<em>confusion matrix</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Recurrent Neural Network",
      "definition_text":"A recurrent neural network (or, RNN) is a neural network that contains an internal memory. An RNN has an internal loop that allows information to persist in the network. Neurons receive information not just from the previous layer, but also from themselves from the previous pass. This means that the order of inputs to the RNN matter as RNNs have a state.",
      "definition_html":[
         "<a name=\"Recurrent-Neural-Network\"></a>",
         "<h2>Recurrent Neural Network (RNN)</h2>",
         "<p>A <em>recurrent neural network</em> (or, RNN) is a <em>neural network</em> that contains an internal memory. An RNN has an internal loop that allows information to persist in the network. <em>Neurons</em> receive information not just from the previous layer, but also from themselves from the previous pass. This means that the order of inputs to the RNN matter as RNNs have a state.</p>",
         "<em>recurrent neural network</em>",
         "<em>neural network</em>",
         "<em>Neurons</em>",
         "<p>RNNs are particularly sensitive to the <em>vanishing</em> and <em>exploding gradient problems</em>, where depending on the <em>activation functions</em> used, the information can get lost over time. <em>Long short-term memory units</em> (LSTM) addresses this problem. RNNs are commonly used with sequential data, like in natural language processing. </p>",
         "<em>vanishing</em>",
         "<em>exploding gradient problems</em>",
         "<em>activation functions</em>",
         "<em>Long short-term memory units</em>",
         "<p>Common examples of sequential data includes texts, audio and video.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Regression",
      "definition_text":"Regression is a problem of predicting a real numbered label (called target) given an unlabeled example.",
      "definition_html":[
         "<a name=\"Regression\"></a>",
         "<h2>Regression</h2>",
         "<p><em>Regression</em> is a problem of predicting a real numbered label (called <em>target</em>) given an <strong>unlabeled example</strong>.</p>",
         "<em>Regression</em>",
         "<em>target</em>",
         "<strong>unlabeled example</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Regression Algorithm",
      "definition_text":"A regression algorithm is a machine learning algorithm that produces a regression model.",
      "definition_html":[
         "<a name=\"Regression-Algorithm\"></a>",
         "<h2>Regression Algorithm</h2>",
         "<p>A <em>regression algorithm</em> is a machine learning algorithm that produces a <em>regression model</em>.</p>",
         "<em>regression algorithm</em>",
         "<em>regression model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Regression Model",
      "definition_text":"A regression model is a type of model that outputs continuous (typically, floating-point) values.",
      "definition_html":[
         "<a name=\"Regression-Model\"></a>",
         "<h2>Regression Model</h2>",
         "<p>A <em>regression model</em> is a type of <em>model</em> that outputs continuous (typically, floating-point) values.</p>",
         "<em>regression model</em>",
         "<em>model</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Reinforcement Learning",
      "definition_text":"Reinforcement learning is a subfield of machine learning where the machine perceives its environment's state as a vector of features. The machine can execute actions in every state and different actions bring different rewards and also moves the machine to another state. The goal of the reinforcement learning is to learn a policy, that is the prescription of the optimal action to execute in each state. The action is optimal if it maximizes the average reward.",
      "definition_html":[
         "<a name=\"Reinforcement-Learning\"></a>",
         "<h2>Reinforcement Learning</h2>",
         "<p><em>Reinforcement learning</em> is a subfield of machine learning where the machine perceives its environment's <strong>state</strong> as a vector of features. The machine can execute <strong>actions</strong> in every state and different actions bring different <strong>rewards</strong> and also moves the machine to another state. The goal of the reinforcement learning is to learn a <strong>policy</strong>, that is the prescription of the optimal action to execute in each state. The action is optimal if it maximizes the average reward.</p>",
         "<em>Reinforcement learning</em>",
         "<strong>state</strong>",
         "<strong>actions</strong>",
         "<strong>rewards</strong>",
         "<strong>policy</strong>",
         "<p>The biggest difference with <em>classification</em> is that the optimal action in each state depends on the probability of getting into other states and the optimal actions to take in those states. In classification, the optimal prediction for an <em>example</em> is independent of the future examples and predictions.</p>",
         "<em>classification</em>",
         "<em>example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Representation Learning",
      "definition_text":"Representation learning, or feature learning, is a set of techniques that allows a system to automatically discover the representations needed for feature detection or classification from raw data. This replaces manual feature engineering and allows a machine to both learn the features and use them to perform a specific task.",
      "definition_html":[
         "<a name=\"Representation-Learning\"></a>",
         "<h2>Representation Learning</h2>",
         "<p><em>Representation learning</em>, or <em>feature learning</em>, is a set of techniques that allows a system to automatically discover the representations needed for feature detection or classification from raw data. This replaces manual feature engineering and allows a machine to both learn the features and use them to perform a specific task.</p>",
         "<em>Representation learning</em>",
         "<em>feature learning</em>",
         "<p>Popular representation learning techniques include <em>k-means</em> clustering (additional features are added to <em>feature vectors</em> indicating which cluster the example belongs to), <em>principal component analysis</em> and <em>autoencoders</em>.</p>",
         "<em>k-means</em>",
         "<em>feature vectors</em>",
         "<em>principal component analysis</em>",
         "<em>autoencoders</em>",
         "<h2>Regression Model</h2>",
         "<p>See <em>Model, Regression</em>.</p>",
         "<em>Model, Regression</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Regularization",
      "definition_text":"Regularization is a technique to make the fitted function smoother. This helps to prevent overfitting. The most widely used regularization techniques are L1, L2, dropout, and weight decay.",
      "definition_html":[
         "<a name=\"Regularization\"></a>",
         "<h2>Regularization</h2>",
         "<p><em>Regularization</em> is a technique to make the fitted function smoother. This helps to prevent overfitting. The most widely used regularization techniques are <strong>L1</strong>, <strong>L2</strong>, <strong>dropout</strong>, and <strong>weight decay</strong>.</p>",
         "<em>Regularization</em>",
         "<strong>L1</strong>",
         "<strong>L2</strong>",
         "<strong>dropout</strong>",
         "<strong>weight decay</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Risk",
      "definition_text":"The risk is the expected value of the loss function. Because the probability distribution of the data is usually unknown, empirical risk (the average value of the loss obtained by applying the loss function to all training examples) is often used instead. Many machine learning algorithms learn such values of the parameters that minimize the empirical risk.",
      "definition_html":[
         "<a name=\"Risk\"></a>",
         "<h2>Risk</h2>",
         "<p>The <em>risk</em> is the expected value of the <em>loss function</em>. Because the probability distribution of the data is usually unknown, <strong>empirical risk</strong> (the average value of the loss obtained by applying the loss function to all training examples) is often used instead. Many machine learning algorithms learn such values of the parameters that minimize the empirical risk.</p>",
         "<em>risk</em>",
         "<em>loss function</em>",
         "<strong>empirical risk</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Semi Supervised Learning",
      "definition_text":"Semi-supervised learning is a problem of learning a model by using both labeled and unlabeled examples.",
      "definition_html":[
         "<a name=\"Semi-Supervised-Learning\"></a>",
         "<h2>Semi-Supervised Learning</h2>",
         "<p><em>Semi-supervised learning</em> is a problem of learning a <em>model</em> by using both <em>labeled</em> and <em>unlabeled examples</em>. </p>",
         "<em>Semi-supervised learning</em>",
         "<em>model</em>",
         "<em>labeled</em>",
         "<em>unlabeled examples</em>",
         "<p>Semi-supervised learning techniques take advantage of a small amount of labeled data and a large amount of unlabeled data to produce a better model than a purely supervised learning or a purely unsupervised learning technique.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Similarity Metric",
      "definition_text":"A similarity metric is a function that takes two feature vectors as input and returns a real number that indicates how these two feature vectors are \"similar\". Usually, the more two vectors are similar the higher is the real number. Most often similarity metrics are used in clustering. The most widely used similarity metric is cosine similarity which returns the cosine of the angle between two feature vectors. The similarity metric can be handcrafted for a problem in hand or can be learned (see metric learning).",
      "definition_html":[
         "<a name=\"Similarity-Metric\"></a>",
         "<h2>Similarity Metric</h2>",
         "<p>A <em>similarity metric</em> is a function that takes two <em>feature vectors</em> as input and returns a real number that indicates how these two feature vectors are \"similar\". Usually, the more two vectors are similar the higher is the real number. Most often similarity metrics are used in clustering. The most widely used similarity metric is <em>cosine similarity</em> which returns the cosine of the angle between two feature vectors. The similarity metric can be handcrafted for a problem in hand or can be learned (see <em>metric learning</em>).</p>",
         "<em>similarity metric</em>",
         "<em>feature vectors</em>",
         "<em>cosine similarity</em>",
         "<em>metric learning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Standardization",
      "definition_text":"Standardization (or z-score normalization) is the process where the features are rescaled so that they'll have the properties of a standard normal distribution with \u03bc=0\u03bc=0 and \u03c3=1\u03c3=1, where \u03bc\u03bc is the mean (the average value of the feature, averaged over all examples in the dataset) and \u03c3\u03c3 is the standard deviation from the mean.",
      "definition_html":[
         "<a name=\"Standardization\"></a>",
         "<h2>Standardization</h2>",
         "<p><em>Standardization</em> (or <strong>z-score normalization</strong>) is the process where the <em>features</em> are rescaled so that they'll have the properties of a standard normal distribution with \\(\\mu=0\\) and \\(\\sigma=1\\), where \\(\\mu\\) is the mean (the average value of the feature, averaged over all <em>examples</em> in the dataset) and \\(\\sigma\\) is the standard deviation from the mean.</p>",
         "<em>Standardization</em>",
         "<strong>z-score normalization</strong>",
         "<em>features</em>",
         "<em>examples</em>",
         "<p>Standard scores (or z-scores) of features are calculated as follows:</p>",
         "<p>$$f' = \\frac{f - \\mu}{\\sigma}$$</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Stochastic Gradient Descent",
      "definition_text":"Stochastic Gradient Descent, or SGD, is a type of gradient descent algorithm where the gradient of the function to be optimized is computed by taking a sample of data. The update to the coefficients is performed for each training instance, rather than at the end of the batch of instances.",
      "definition_html":[
         "<a name=\"Stochastic-Gradient-Descent\"></a>",
         "<h2>Stochastic Gradient Descent (SGD)</h2>",
         "<p><em>Stochastic Gradient Descent</em>, or SGD, is a type of <em>gradient descent</em> algorithm where the gradient of the function to be optimized is computed by taking a sample of data. The update to the coefficients is performed for each training instance, rather than at the end of the batch of instances.</p>",
         "<em>Stochastic Gradient Descent</em>",
         "<em>gradient descent</em>",
         "<p>The learning can be much faster with stochastic gradient descent for very large training datasets and often one only need a small number of passes through the dataset (one pass through the dataset is called <em>epoch</em>) to reach a good or good enough set of coefficients.</p>",
         "<em>epoch</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Strong Classifier",
      "definition_text":"A strong classifier is a classifier produced by an ensemble learning algorithm by combining multiple weak classifiers to reach a much higher classification accuracy than that of each individual weak classifier.",
      "definition_html":[
         "<a name=\"Strong-Classifier\"></a>",
         "<h2>Strong Classifier</h2>",
         "<p>A <em>strong classifier</em> is a <em>classifier</em> produced by an <em>ensemble learning algorithm</em> by combining multiple <em>weak classifiers</em> to reach a much higher classification <em>accuracy</em> than that of each individual weak classifier.</p>",
         "<em>strong classifier</em>",
         "<em>classifier</em>",
         "<em>ensemble learning algorithm</em>",
         "<em>weak classifiers</em>",
         "<em>accuracy</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Supervised Learning",
      "definition_text":"Supervised learning is a problem of learning a model (either regression or classification) by using labeled examples.",
      "definition_html":[
         "<a name=\"Supervised-Learning\"></a>",
         "<h2>Supervised Learning</h2>",
         "<p><em>Supervised learning</em> is a problem of learning a <em>model</em> (either regression or classification) by using <em>labeled examples</em>.</p>",
         "<em>Supervised learning</em>",
         "<em>model</em>",
         "<em>labeled examples</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Support Vector Machine",
      "definition_text":"Support vector machine, or SVM, is a classification algorithm that seeks to maximize the margin between positive and negative classes. SVM is often used together with kernels, functions that map input examples (given as multidimensional vectors) to a higher dimensional space. For example, consider a classification problem in which example consists of a hundred features. In order to maximize the margin between positive and negative classes, SVM, using a kernel function, could internally map those features into a million-dimension space. SVM uses a loss function called hinge loss*.",
      "definition_html":[
         "<a name=\"Support-Vector-Machine\"></a>",
         "<h2>Support Vector Machine (SVM)</h2>",
         "<p><em>Support vector machine, or SVM, is a </em>classification algorithm<em> that seeks to maximize the margin between positive and negative classes. SVM is often used together with </em>kernels<em>, functions that map input examples (given as multidimensional vectors) to a higher dimensional space. For example, consider a classification problem in which example consists of a hundred features. In order to maximize the margin between positive and negative classes, SVM, using a kernel function, could internally map those features into a million-dimension space. SVM uses a loss function called </em>hinge loss*.</p>",
         "<em>Support vector machine, or SVM, is a </em>",
         "<em> that seeks to maximize the margin between positive and negative classes. SVM is often used together with </em>",
         "<em>, functions that map input examples (given as multidimensional vectors) to a higher dimensional space. For example, consider a classification problem in which example consists of a hundred features. In order to maximize the margin between positive and negative classes, SVM, using a kernel function, could internally map those features into a million-dimension space. SVM uses a loss function called </em>",
         "<p>For two-dimensional <em>feature vectors</em>, the problem and the solution can be visualized as a plot below (taken from <a href=\"https://en.wikipedia.org/wiki/Support_vector_machine\">Wikipedia</a>):</p>",
         "<em>feature vectors</em>",
         "<a href=\"https://en.wikipedia.org/wiki/Support_vector_machine\">Wikipedia</a>",
         "<p align=\"center\">\n<img alt=\"Support Vector Machine\" src=\"/blog/assets/How-Do-Machines-Learn/svm.png\" width=\"500\"/></p>",
         "<img alt=\"Support Vector Machine\" src=\"/blog/assets/How-Do-Machines-Learn/svm.png\" width=\"500\"/>",
         "<p>On the above illustration, the dark circles are positive examples, the white circles are negative examples, and the line given by \\(wx - b = 0\\) is the <em>decision boundary</em>.</p>",
         "<em>decision boundary</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Test Set",
      "definition_text":"The test set is a holdout set used for final model assessment.",
      "definition_html":[
         "<a name=\"Test-Set\"></a>",
         "<h2>Test Set</h2>",
         "<p>The <em>test set</em> is a <em>holdout set</em> used for final model assessment.</p>",
         "<em>test set</em>",
         "<em>holdout set</em>",
         "<p>See also <em>training set</em> and <em>validation set</em>.</p>",
         "<em>training set</em>",
         "<em>validation set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Tokenization",
      "definition_text":"In Natural Language Processing, tokenization is the process of splitting a text string into units called tokens. A token may be a word or a group of words.",
      "definition_html":[
         "<a name=\"Tokenization\"></a>",
         "<h2>Tokenization</h2>",
         "<p>In Natural Language Processing, <em>tokenization</em> is the process of splitting a text string into units called tokens. A token may be a word or a group of words.</p>",
         "<em>tokenization</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Topic Modeling",
      "definition_text":"Topic modeling is the problem of finding topics in a collection of documents. Usually, the analyst decides how many topics a collection of documents is likely to contain and the algorithm groups together words characterizing each topic. The algorithms frequently used for topic modeling are Latent Dirichlet Allocation (LDA) and Latent Semantic Indexing (LSI).",
      "definition_html":[
         "<a name=\"Topic-Modeling\"></a>",
         "<h2>Topic Modeling</h2>",
         "<p><em>Topic modeling</em> is the problem of finding topics in a collection of documents. Usually, the analyst decides how many topics a collection of documents is likely to contain and the algorithm groups together words characterizing each topic. The algorithms frequently used for topic modeling are <strong>Latent Dirichlet Allocation</strong> (LDA) and <strong>Latent Semantic Indexing</strong> (LSI).</p>",
         "<em>Topic modeling</em>",
         "<strong>Latent Dirichlet Allocation</strong>",
         "<strong>Latent Semantic Indexing</strong>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Training",
      "definition_text":"Training is the process of building a model by applying a machine learning algorithm to the training data.",
      "definition_html":[
         "<a name=\"Training\"></a>",
         "<h2>Training</h2>",
         "<p><em>Training</em> is the process of building a <em>model</em> by applying a <em>machine learning algorithm</em> to the <em>training data</em>.</p>",
         "<em>Training</em>",
         "<em>model</em>",
         "<em>machine learning algorithm</em>",
         "<em>training data</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Training Example",
      "definition_text":"A training example is a member of the training set.",
      "definition_html":[
         "<a name=\"Training-Example\"></a>",
         "<h2>Training Example</h2>",
         "<p>A <em>training example</em> is a member of the <em>training set</em>.</p>",
         "<em>training example</em>",
         "<em>training set</em>",
         "<h2>Training Loss</h2>",
         "<p>See <em>risk</em>.</p>",
         "<em>risk</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Training Set",
      "definition_text":"The training set is a collection of examples, a subset of the dataset, used by the learning algorithm to create a model.",
      "definition_html":[
         "<a name=\"Training-Set\"></a>",
         "<h2>Training Set</h2>",
         "<p>The <em>training set</em> is a collection of <em>examples</em>, a subset of the <em>dataset</em>, used by the <em>learning algorithm</em> to create a <em>model</em>.</p>",
         "<em>training set</em>",
         "<em>examples</em>",
         "<em>dataset</em>",
         "<em>learning algorithm</em>",
         "<em>model</em>",
         "<p>See also <em>test set</em> and <em>validation set</em>.</p>",
         "<em>test set</em>",
         "<em>validation set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Transfer Learning",
      "definition_text":"Transfer learning is using a model trained to solve one problem to help to solve another problem. For example, a neural network trained to distinguish between different kinds of jungle animals can be reused to train another neural network that would distinguish between different kinds of domestic animals.",
      "definition_html":[
         "<a name=\"Transfer-Learning\"></a>",
         "<h2>Transfer Learning</h2>",
         "<p><em>Transfer learning</em> is using a model trained to solve one problem to help to solve another problem. For example, a <em>neural network</em> trained to distinguish between different kinds of jungle animals can be reused to train another neural network that would distinguish between different kinds of domestic animals.</p>",
         "<em>Transfer learning</em>",
         "<em>neural network</em>",
         "<p>Transfer learning might involve transferring knowledge from the solution of a simpler task to a more complex one or involve transferring knowledge from a task where there is more data to one where there is fewer data.</p>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"True Positive",
      "definition_text":"In binary classification, a true positive is a positive labeled example whose label was predicted by the model correctly.",
      "definition_html":[
         "<a name=\"True-Positive\"></a>",
         "<h2>True Positive (TP)</h2>",
         "<p>In <em>binary classification</em>, a <em>true positive</em> is a positive <em>labeled example</em> whose label was predicted by the model correctly.</p>",
         "<em>binary classification</em>",
         "<em>true positive</em>",
         "<em>labeled example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"True Negative",
      "definition_text":"In binary classification, a true negative is a negative labeled example whose label was predicted by the model correctly.",
      "definition_html":[
         "<a name=\"True-Negative\"></a>",
         "<h2>True Negative (TN)</h2>",
         "<p>In <em>binary classification</em>, a <em>true negative</em> is a negative <em>labeled example</em> whose label was predicted by the model correctly.</p>",
         "<em>binary classification</em>",
         "<em>true negative</em>",
         "<em>labeled example</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Underfitting",
      "definition_text":"Underfitting is a situation in which the model trained on the training data doesn't predict well training examples.",
      "definition_html":[
         "<a name=\"Underfitting\"></a>",
         "<h2>Underfitting</h2>",
         "<p><em>Underfitting</em> is a situation in which the <em>model</em> trained on the <em>training data</em> doesn't predict well <em>training examples</em>.</p>",
         "<em>Underfitting</em>",
         "<em>model</em>",
         "<em>training data</em>",
         "<em>training examples</em>",
         "<h2>Unlabeled Example</h2>",
         "<p>See <em>Example, Unlabeled</em>.</p>",
         "<em>Example, Unlabeled</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Unsupervised Learning",
      "definition_text":"Unsupervised learning is a problem, given an unlabeled dataset, automatically find hidden (or latent) structure in this dataset.",
      "definition_html":[
         "<a name=\"Unsupervised-Learning\"></a>",
         "<h2>Unsupervised Learning</h2>",
         "<p><em>Unsupervised learning</em> is a problem, given an <em>unlabeled dataset</em>, automatically find hidden (or latent) structure in this dataset.</p>",
         "<em>Unsupervised learning</em>",
         "<em>unlabeled dataset</em>",
         "<p>Examples of an unsupervised learning problem include <em>clustering</em>, <em>topic modeling</em>, and <em>dimensionality reduction</em>.</p>",
         "<em>clustering</em>",
         "<em>topic modeling</em>",
         "<em>dimensionality reduction</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Unsupervised Learning Algorithm",
      "definition_text":"An unsupervised learning algorithm is an algorithm that solves an unsupervised learning problem.",
      "definition_html":[
         "<a name=\"Unsupervised-Learning-Algorithm\"></a>",
         "<h2>Unsupervised Learning Algorithm</h2>",
         "<p>An <em>unsupervised learning algorithm</em> is an algorithm that solves an <em>unsupervised learning</em> problem.</p>",
         "<em>unsupervised learning algorithm</em>",
         "<em>unsupervised learning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Validation Loss",
      "definition_text":"Validation loss is the average loss computed by applying the loss function the outputs of the model applied to the examples from the validation set.",
      "definition_html":[
         "<a name=\"Validation-Loss\"></a>",
         "<h2>Validation Loss</h2>",
         "<p><em>Validation loss</em> is the average loss computed by applying the <em>loss function</em> the outputs of the model applied to the examples from the validation set.</p>",
         "<em>Validation loss</em>",
         "<em>loss function</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Validation Example",
      "definition_text":"A validation example is a member of the validation set.",
      "definition_html":[
         "<a name=\"Validation-Example\"></a>",
         "<h2>Validation Example</h2>",
         "<p>A <em>validation example</em> is a member of the <em>validation set</em>.</p>",
         "<em>validation example</em>",
         "<em>validation set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Validation Set",
      "definition_text":"The validation set is a holdout set used for hyperparameter tuning.",
      "definition_html":[
         "<a name=\"Validation-Set\"></a>",
         "<h2>Validation Set</h2>",
         "<p>The <em>validation set</em> is a <em>holdout set</em> used for <em>hyperparameter tuning</em>.</p>",
         "<em>validation set</em>",
         "<em>holdout set</em>",
         "<em>hyperparameter tuning</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Vanishing Gradient Problem",
      "definition_text":"The vanishing gradient problem happens in very deep neural networks, typically recurrent neural networks, that use activation functions whose gradients tend to be small. Because these small gradients are multiplied during backpropagation, they tend to \"vanish\" throughout the layers, preventing the network from learning long-term dependencies. Common ways to counter this problem is to use activation functions like ReLU or LSTM that do not suffer from small gradients. The opposite of this problem is called the exploding gradient problem.",
      "definition_html":[
         "<a name=\"Vanishing-Gradient-Problem\"></a>",
         "<h2>Vanishing Gradient Problem</h2>",
         "<p>The <em>vanishing gradient problem</em> happens in very deep neural networks, typically recurrent neural networks, that use activation functions whose gradients tend to be small. Because these small gradients are multiplied during backpropagation, they tend to \"vanish\" throughout the layers, preventing the network from learning long-term dependencies. Common ways to counter this problem is to use activation functions like <em>ReLU</em> or <em>LSTM</em> that do not suffer from small gradients. The opposite of this problem is called the <em>exploding gradient problem</em>.</p>",
         "<em>vanishing gradient problem</em>",
         "<em>ReLU</em>",
         "<em>LSTM</em>",
         "<em>exploding gradient problem</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Variance",
      "definition_text":"The variance is an error from sensitivity to small fluctuations in the training set. High variance can cause an algorithm to model the random noise in the training data, rather than the intended outputs (overfitting).",
      "definition_html":[
         "<a name=\"Variance\"></a>",
         "<h2>Variance</h2>",
         "<p>The <em>variance</em> is an error from sensitivity to small fluctuations in the <em>training set</em>. High variance can cause an algorithm to model the random noise in the training data, rather than the intended outputs (overfitting).</p>",
         "<em>variance</em>",
         "<em>training set</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Weak Classifier",
      "definition_text":"In ensemble learning, a weak classifier is usually one of a collection of low-accuracy classifiers, which, when combined by an ensemble learning algorithm, can produce a strong classifier.",
      "definition_html":[
         "<a name=\"Weak-Classifier\"></a>",
         "<h2>Weak Classifier</h2>",
         "<p>In <em>ensemble learning</em>, a <em>weak classifier</em> is usually one of a collection of low-accuracy classifiers, which, when combined by an <em>ensemble learning algorithm</em>, can produce a <em>strong classifier</em>.</p>",
         "<em>ensemble learning</em>",
         "<em>weak classifier</em>",
         "<em>ensemble learning algorithm</em>",
         "<em>strong classifier</em>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Zero Shot Learning",
      "definition_text":"Zero shot learning is the problem of learning a model capable of classifying examples whose labels weren't present in the training data. Usually, a solution involves embedding both feature vectors and class labels. For example, if the problem is to classify animals by their pictures, the training set can not contain an image of a dog. However, the classifier will predict the class embedding which can be used to find the corresponding label by looking in the embedding-label lookup table. The most frequently used embeddings for class labels are word2vec. However, one can train its own embedding for class labels in the case when the label can be multi-word.",
      "definition_html":[
         "<a name=\"Zero-Shot-Learning\"></a>",
         "<h2>Zero Shot Learning</h2>",
         "<p>Zero shot learning is the problem of learning a model capable of classifying examples whose labels weren't present in the training data. Usually, a solution involves embedding both <em>feature vectors</em> and class labels. For example, if the problem is to classify animals by their pictures, the training set can not contain an image of a dog. However, the classifier will predict the class embedding which can be used to find the corresponding label by looking in the embedding-label lookup table. The most frequently used embeddings for class labels are word2vec. However, one can train its own embedding for class labels in the case when the label can be multi-word.</p>",
         "<em>feature vectors</em>",
         "<hr/>"
      ],
      "link":"https://semanti.ca/blog/?glossary-of-machine-learning-terms",
      "source":"Semanti Machine Learning Glossary"
   },
   {
      "terms":"Artificial Intelligence",
      "definition_text":"Artificial intelligence (AI) is the mimicking of human thought and cognitive processes to solve complex problems automatically. AI uses techniques for writing computer code to represent and manipulate knowledge. Different techniques mimic the different ways that people think and reason (see Case-based Reasoning and Model-based Reasoning for example). AI applications can be either stand-alone software, such as decision support software, or embedded within larger software or hardware systems.AI has been around for about 50 years and while early optimism about matching human reasoning capabilities quickly has not been realized yet,\u00a0 there is a significant and growing set of valuable applications. AI hasn\u2019t yet mimicked much of the common-sense reasoning of a five-year old child. Nevertheless, it can successfully mimic many expert tasks performed by trained adults, and there is probably more artificial intelligence being used in practice in one form or another than most people realize.Really intelligent applications will only be achievable with artificial intelligence and it is the mark of a successful designer of AI software to deliver functionality that can\u2019t be delivered without using AI.\u00a0 See quotations",
      "definition_html":"<p><a name=\"artificial intelligence\"></a><b>Artificial Intelligence</b><br/>\nArtificial intelligence (AI) is the mimicking of human thought and cognitive processes to solve complex problems automatically. AI uses techniques for writing computer code to represent and manipulate knowledge. Different techniques mimic the different ways that people think and reason (see <a href=\"https://www.stottlerhenke.com/features/glossary/#C\" rel=\"noopener\" target=\"_blank\">Case-based Reasoning</a> and <a href=\"https://www.stottlerhenke.com/features/glossary/#M\" rel=\"noopener\" target=\"_blank\">Model-based Reasoning</a> for example). AI applications can be either stand-alone software, such as decision support software, or embedded within larger software or hardware systems.</p><p>AI has been around for about 50 years and while early optimism about matching human reasoning capabilities quickly has not been realized yet,\u00a0 there is a significant and growing set of valuable applications. AI hasn\u2019t yet mimicked much of the common-sense reasoning of a five-year old child. Nevertheless, it can successfully mimic many expert tasks performed by trained adults, and there is probably more artificial intelligence being used in practice in one form or another than most people realize.</p><p>Really intelligent applications will only be achievable with artificial intelligence and it is the mark of a successful designer of AI software to deliver functionality that can\u2019t be delivered without using AI.\u00a0 See <a href=\"https://www.stottlerhenke.com/features/quotations/\" rel=\"noopener\" target=\"_blank\">quotations</a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Action-based Planning",
      "definition_text":"The goal of action-based planning is to determine how to decompose a high level action into a network of subactions that perform the requisite task. Therefore the major task within such a planning system is to manage the constraints that apply to the interrelationships (e.g., ordering constraints) between actions.\u00a0 In fact, action-based planning is best viewed as a constraint satisfaction problem.The search for a plan cycles through the following steps: choose a constraint and apply the constraint check; if the constraint is not satisfied, choose a bug from the set of constraint bugs; choose and apply a fix, yielding a new plan and possibly a new set of constraints to check.In contrast, state-based planners generally conduct their search for a plan by reasoning about how the actions within a plan affect the state of the world and how the state of the world affects the applicability of actions.",
      "definition_html":"<p><a name=\"action based planning\"></a><b>Action-based Planning</b><br/>\nThe goal of action-based planning is to determine how to decompose a high level action into a network of subactions that perform the requisite task. Therefore the major task within such a planning system is to manage the constraints that apply to the interrelationships (e.g., ordering constraints) between actions.\u00a0 In fact, action-based planning is best viewed as a <a href=\"https://www.stottlerhenke.com/features/glossary/#C\" rel=\"noopener\" target=\"_blank\">constraint satisfaction</a> problem.</p><p>The search for a plan cycles through the following steps: choose a constraint and apply the constraint check; if the constraint is not satisfied, choose a bug from the set of constraint bugs; choose and apply a fix, yielding a new plan and possibly a new set of constraints to check.</p><p>In contrast, state-based planners generally conduct their search for a plan by reasoning about how the actions within a plan affect the state of the world and how the state of the world affects the applicability of actions.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Adaptive Interface",
      "definition_text":"A computer interface that automatically and dynamically adapts to the needs and competence of each individual user of the software.",
      "definition_html":"<p><a name=\"Adaptive interface\"></a><b>Adaptive Interface</b><br/>\nA computer interface that automatically and dynamically adapts to the needs and competence of each individual user of the software.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Agents",
      "definition_text":"Agents are software programs that are capable of autonomous, flexible, purposeful and reasoning action in pursuit of one or more goals. They are designed to take timely action in response to external stimuli from their environment on behalf of a human. When multiple agents are being used together in a system, individual agents are expected to interact together as appropriate to achieve the goals of the overall system.\u00a0 Also called autonomous agents, assistants, brokers, bots, droids, intelligent agents, software agents.",
      "definition_html":"<p><a name=\"agent\"></a><b>Agents</b><br/>\nAgents are software programs that are capable of autonomous, flexible, purposeful and reasoning action in pursuit of one or more goals. They are designed to take timely action in response to external stimuli from their environment on behalf of a human. When multiple agents are being used together in a system, individual agents are expected to interact together as appropriate to achieve the goals of the overall system.\u00a0 Also called autonomous agents, assistants, brokers, bots, droids, intelligent agents, software agents.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Agent Architecture",
      "definition_text":"There are two levels of agent architecture, when a number of agents are to work together for a common goal. There is the architecture of the system of agents, that will determine how they work together, and which does not need to be concerned with how individual agents fulfil their sub-missions; and the architecture of each individual agent, which does determine its inner workings.The architecture of one software agent will permit interactions among most of the following components (depending on the agent\u2019s goals): perceptors, effectors, communication channels, a state model, a model-based reasoner, a planner/scheduler, a reactive execution monitor, its reflexes (which enable the agent to react immediately to changes in its environment that it can\u2019t wait on the planner to deal with), and its goals. The perceptors, effectors, and communication channels will also enable interaction with the agent\u2019s outside world.",
      "definition_html":"<p><b>Agent Architecture</b><br/>\nThere are two levels of agent architecture, when a number of agents are to work together for a common goal. There is the architecture of the system of agents, that will determine how they work together, and which does not need to be concerned with how individual agents fulfil their sub-missions; and the architecture of each individual agent, which does determine its inner workings.</p><p>The architecture of one software agent will permit interactions among most of the following components (depending on the agent\u2019s goals): perceptors, effectors, communication channels, a state model, a model-based reasoner, a planner/scheduler, a reactive execution monitor, its reflexes (which enable the agent to react immediately to changes in its environment that it can\u2019t wait on the planner to deal with), and its goals. The perceptors, effectors, and communication channels will also enable interaction with the agent\u2019s outside world.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"AI Effect",
      "definition_text":"The great practical benefits of AI applications and even the existence of AI in many software products go largely unnoticed by many despite the already widespread use of AI techniques in software. This is the AI effect. Many marketing people don\u2019t use the term \u201cartificial intelligence\u201d even when their company\u2019s products rely on some AI techniques. Why not? It may be because AI was oversold in the first giddy days of practical rule-based expert systems in the 1980s, with the peak perhaps marked by the Business Week cover of July 9, 1984 announcing, Artificial Intelligence, IT\u2019S HERE.James Hogan in his book, Mind Matters, has his own explanation of\u00a0 the AI Effect:\u201cAI researchers talk about a peculiar phenomenon known as the \u201cAI effect.\u201d At the outset of a project, the goal is to entice a performance from machines in some designated area that everyone agrees would require \u201cintelligence\u201d if done by a human. If the project fails, it becomes a target of derision to be pointed at by the skeptics as an example of the absurdity of the idea that AI could be possible. If it succeeds, with the process demystified and its inner workings laid bare as lines of prosaic computer code, the subject is dismissed as \u201cnot really all that intelligent after all.\u201d Perhaps \u2026 the real threat that we resist is the further demystification of ourselves\u2026It seems to happen repeatedly that a line of AI work \u2026 finds itself being diverted in such a direction that \u2026 the measures that were supposed to mark its attainment are demonstrated brilliantly. Then, the resulting new knowledge typically stimulates demands for application of it and a burgeoning industry, market, and additional facet to our way of life comes into being, which within a decade we take for granted; but by then, of course, it isn\u2019t AI.\u201d",
      "definition_html":"<p><b>AI Effect</b><br/>\nThe great practical benefits of AI applications and even the existence of AI in many software products go largely unnoticed by many despite the already widespread use of AI techniques in software. This is the AI effect. Many marketing people don\u2019t use the term \u201cartificial intelligence\u201d even when their company\u2019s products rely on some AI techniques. Why not? It may be because AI was oversold in the first giddy days of practical rule-based expert systems in the 1980s, with the peak perhaps marked by the Business Week cover of July 9, 1984 announcing, Artificial Intelligence, IT\u2019S HERE.</p><p>James Hogan in his book, Mind Matters, has his own explanation of\u00a0 the AI Effect:</p><p>\u201cAI researchers talk about a peculiar phenomenon known as the \u201cAI effect.\u201d At the outset of a project, the goal is to entice a performance from machines in some designated area that everyone agrees would require \u201cintelligence\u201d if done by a human. If the project fails, it becomes a target of derision to be pointed at by the skeptics as an example of the absurdity of the idea that AI could be possible. If it succeeds, with the process demystified and its inner workings laid bare as lines of prosaic computer code, the subject is dismissed as \u201cnot really all that intelligent after all.\u201d Perhaps \u2026 the real threat that we resist is the further demystification of ourselves\u2026It seems to happen repeatedly that a line of AI work \u2026 finds itself being diverted in such a direction that \u2026 the measures that were supposed to mark its attainment are demonstrated brilliantly. Then, the resulting new knowledge typically stimulates demands for application of it and a burgeoning industry, market, and additional facet to our way of life comes into being, which within a decade we take for granted; but by then, of course, it isn\u2019t AI.\u201d</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"AI Languages and Tools",
      "definition_text":"AI software has different requirements from other, conventional software. Therefore, specific languages for AI software have been developed. These include LISP, Prolog, and Smalltalk. While these languages often reduce the time to develop an artificial intelligence application, they can lengthen the time to execute the application. Therefore, much AI software is now written in languages such as C++ and Java, which typically increases development time, but shortens execution time. Also, to reduce the cost of AI software, a range of commercial software development tools have also been developed. Stottler Henke has developed its own proprietary tools for some of the specialized applications it is experienced in creating.",
      "definition_html":"<p><b>AI Languages and Tools</b><br/>\nAI software has different requirements from other, conventional software. Therefore, specific languages for AI software have been developed. These include LISP, Prolog, and Smalltalk. While these languages often reduce the time to develop an artificial intelligence application, they can lengthen the time to execute the application. Therefore, much AI software is now written in languages such as C++ and Java, which typically increases development time, but shortens execution time. Also, to reduce the cost of AI software, a range of commercial software development tools have also been developed. Stottler Henke has developed its own proprietary tools for some of the specialized applications it is experienced in creating.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Algorithm",
      "definition_text":"An algorithm is a set of instructions that explain how to solve a problem. It is usually first stated in English and arithmetic, and from this, a programmer can translate it into executable code (that is, code to be run on a computer).",
      "definition_html":"<p><b>Algorithm</b><br/>\nAn algorithm is a set of instructions that explain how to solve a problem. It is usually first stated in English and arithmetic, and from this, a programmer can translate it into executable code (that is, code to be run on a computer).</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Applications of Artificial Intelligence",
      "definition_text":"The actual and potential applications are virtually endless. Reviewing Stottler Henke\u2019s work will give you some idea of the range. In general, AI applications are used to increase the productivity of knowledge workers by intelligently automating their tasks; or to make technical products of all kinds easier to use for both workers and consumers by intelligent automation of different aspects of the functionality of complex products.Artificial neural network (ANN) A learning model created to act like a human brain that solves tasks that are too difficult for traditional computer systems to solve.",
      "definition_html":"<p><b>Applications of Artificial Intelligence</b><br/>\nThe actual and potential applications are virtually endless. Reviewing Stottler Henke\u2019s work will give you some idea of the range. In general, AI applications are used to increase the productivity of knowledge workers by intelligently automating their tasks; or to make technical products of all kinds easier to use for both workers and consumers by intelligent automation of different aspects of the functionality of complex products.</p><p><strong>Artificial neural network (ANN)</strong><br/>\nA learning model created to act like a human brain that solves tasks that are too difficult for traditional computer systems to solve.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Associative Memories",
      "definition_text":"Associative memories work by recalling information in response to an information cue. Associative memories can be autoassociative or heteroassociative. Autoassociative memories recall the same information that is used as a cue, which can be useful to complete a partial pattern. Heteroassociative memories are useful as a memory.\u00a0 Human long-term memory is thought to be associative because of the way in which one thought retrieved from it leads to another. When we want to store a new item of information in our long term memory it typically takes us 8 seconds to store an item that can\u2019t be associated with a pre-stored item, but only one or two seconds, if there is an existed information structure with which to associate the new item.",
      "definition_html":"<p><b>Associative Memories</b><br/>\nAssociative memories work by recalling information in response to an information cue. Associative memories can be autoassociative or heteroassociative. Autoassociative memories recall the same information that is used as a cue, which can be useful to complete a partial pattern. Heteroassociative memories are useful as a memory.\u00a0 Human long-term memory is thought to be associative because of the way in which one thought retrieved from it leads to another. When we want to store a new item of information in our long term memory it typically takes us 8 seconds to store an item that can\u2019t be associated with a pre-stored item, but only one or two seconds, if there is an existed information structure with which to associate the new item.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Automated Diagnosis Systems",
      "definition_text":"Most diagnosis work is done by expert humans such as mechanics, engineers, doctors, firemen, customer service agents, and analysts of various kinds. All of us usually do at least a little diagnosis even if it isn\u2019t a major part of our working lives. We use a range of techniques for our diagnoses. Primarily, we compare a current situation with past ones, and reapply, perhaps with small modifications, the best past solutions. If this doesn\u2019t work, we may run small mental simulations of possible solutions through our minds, based on first principles. We may do more complex simulations using first principles on paper or computers looking for solutions. Some problems are also amenable to quantitative solutions. We may hand off the problem to greater experts than ourselves, who use the same methods. The problem with humans doing diagnosis is that it often takes a long time and a lot of mistakes to learn to become an expert. Many situations just don\u2019t reoccur frequently, and we may have to encounter each situation several time to become familiar with it. Automatic diagnosis systems can help avoid these problems, while helping humans to become experts faster. They work best in combination with a few human experts, as there are some diagnosis problems that humans are better at solving, and also because humans are more creative and adaptive than computers in coming up with new solutions to new problems.",
      "definition_html":"<p><a name=\"auto diagnosis systems\"></a><b>Automated Diagnosis Systems</b><br/>\nMost diagnosis work is done by expert humans such as mechanics, engineers, doctors, firemen, customer service agents, and analysts of various kinds. All of us usually do at least a little diagnosis even if it isn\u2019t a major part of our working lives. We use a range of techniques for our diagnoses. Primarily, we compare a current situation with past ones, and reapply, perhaps with small modifications, the best past solutions. If this doesn\u2019t work, we may run small mental simulations of possible solutions through our minds, based on first principles. We may do more complex simulations using first principles on paper or computers looking for solutions. Some problems are also amenable to quantitative solutions. We may hand off the problem to greater experts than ourselves, who use the same methods. The problem with humans doing diagnosis is that it often takes a long time and a lot of mistakes to learn to become an expert. Many situations just don\u2019t reoccur frequently, and we may have to encounter each situation several time to become familiar with it. Automatic diagnosis systems can help avoid these problems, while helping humans to become experts faster. They work best in combination with a few human experts, as there are some diagnosis problems that humans are better at solving, and also because humans are more creative and adaptive than computers in coming up with new solutions to new problems.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Automatic target recognition (ATR)",
      "definition_text":"The ability for an algorithm or device to recognize targets or other objects based on data obtained from sensors.",
      "definition_html":"<p><b>Automatic target recognition (ATR)</b><br/>\nThe ability for an algorithm or device to recognize targets or other objects based on data obtained from sensors.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Autonomous Agents",
      "definition_text":"A piece of AI software that automatically performs a task on a human\u2019s behalf, or even on the behalf of another piece of AI software, so together they accomplish a useful task for a person somewhere. They are capable of independent action in dynamic, unpredictable environments.\u00a0 \u201cAutonomous agent\u201d is a trendy term that is sometimes reserved for AI software used in conjunction with the Internet (for example, AI software that acts as your assistance in intelligently managing your e-mail).Autonomous agents present the best hope from gaining additional utility from computing facilities. Over the past few years the term \u201cagent\u201d has been used very loosely. Our definition of a software agent is: \u201can intelligent software application with the authorization and capability to sense its environment and work in a goal directed manner.\u201d Generally, the term \u201cagent\u201d implies \u201cintelligence\u201d, meaning the level of complexity of the tasks involved approaches that which would previously have required human intervention.",
      "definition_html":"<p><b>Autonomous Agents</b><br/>\nA piece of AI software that automatically performs a task on a human\u2019s behalf, or even on the behalf of another piece of AI software, so together they accomplish a useful task for a person somewhere. They are capable of independent action in dynamic, unpredictable environments.\u00a0 \u201cAutonomous agent\u201d is a trendy term that is sometimes reserved for AI software used in conjunction with the Internet (for example, AI software that acts as your assistance in intelligently managing your e-mail).</p><p>Autonomous agents present the best hope from gaining additional utility from computing facilities. Over the past few years the term \u201cagent\u201d has been used very loosely. Our definition of a software agent is: \u201can intelligent software application with the authorization and capability to sense its environment and work in a goal directed manner.\u201d Generally, the term \u201cagent\u201d implies \u201cintelligence\u201d, meaning the level of complexity of the tasks involved approaches that which would previously have required human intervention.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Bayesian Networks",
      "definition_text":"A modeling technique that provides a mathematically sound formalism for representing and reasoning about uncertainty, imprecision, or unpredictability in our knowledge. For example, seeing that the front lawn is wet, one might wish to determine whether it rained during the previous night. Inference algorithms can use the structure of the Bayesian network to calculate conditional probabilities based on whatever data has been observed (e.g., the street does not appear wet, so it is 90% likely that the wetness is due to the sprinklers). Bayesian networks offer or enable a set of benefits not provided by any other system for dealing with uncertainty \u2013 an easy to understand graphical representation, a strong mathematical foundation, and effective automated tuning mechanisms.\u00a0 These techniques have proved useful in a wide variety of tasks including medical diagnosis, natural language understanding, plan recognition, and intrusion detection. Also called belief networks, Bayes networks, or causal probabalistic networks.Big Data Extremely large data sets that may be analyzed computationally to reveal patterns, trends, and associations, especially relating to human behavior and interactions. ",
      "definition_html":"<p><b>Bayesian Networks</b><br/>\nA modeling technique that provides a mathematically sound formalism for representing and reasoning about uncertainty, imprecision, or unpredictability in our knowledge. For example, seeing that the front lawn is wet, one might wish to determine whether it rained during the previous night. Inference algorithms can use the structure of the Bayesian network to calculate conditional probabilities based on whatever data has been observed (e.g., the street does not appear wet, so it is 90% likely that the wetness is due to the sprinklers). Bayesian networks offer or enable a set of benefits not provided by any other system for dealing with uncertainty \u2013 an easy to understand graphical representation, a strong mathematical foundation, and effective automated tuning mechanisms.\u00a0 These techniques have proved useful in a wide variety of tasks including medical diagnosis, natural language understanding, plan recognition, and intrusion detection. Also called belief networks, Bayes networks, or causal probabalistic networks.</p><p><strong>Big Data</strong><br/>\nExtremely large data sets that may be analyzed computationally to reveal patterns, trends, and associations, especially relating to human behavior and interactions.<br/>\n<a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Case-based Reasoning",
      "definition_text":"Case-based reasoning (CBR) solves a current problem by retrieving the solution to previous similar problems and altering those solutions to meet the current needs. It is based upon previous experiences and patterns of previous experiences. Humans with years of experience in a particular job and activity (e.g., a skilled paramedic arriving on an accident scene can often automatically know the best procedure to deal with a patient) use this technique to solve many of their problems. One advantage of CBR is that inexperienced people can draw on the knowledge of experienced colleagues, including ones who aren\u2019t in the organization, to solve their problems. Synonym: Reasoning by analogy.Chatbots A chat robot (chatbot for short) that is designed to simulate a conversation with human users by communicating through text chats, voice commands, or both. They are a commonly used interface for computer programs that include AI capabilities.",
      "definition_html":"<p><a name=\"Case-based Reasoning\"></a><b>Case-based Reasoning</b><br/>\nCase-based reasoning (CBR) solves a current problem by retrieving the solution to previous similar problems and altering those solutions to meet the current needs. It is based upon previous experiences and patterns of previous experiences. Humans with years of experience in a particular job and activity (e.g., a skilled paramedic arriving on an accident scene can often automatically know the best procedure to deal with a patient) use this technique to solve many of their problems. One advantage of CBR is that inexperienced people can draw on the knowledge of experienced colleagues, including ones who aren\u2019t in the organization, to solve their problems. Synonym: Reasoning by analogy.</p><p><strong>Chatbots</strong><br/>\nA chat robot (chatbot for short) that is designed to simulate a conversation with human users by communicating through text chats, voice commands, or both. They are a commonly used interface for computer programs that include AI capabilities.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Classification",
      "definition_text":"Automated classification tools such as decision trees have been shown to be very effective for distinguishing and characterizing very large volumes of data.\u00a0 They assign items to one of a set of predefined classes of objects based on a set of observed features.\u00a0 For example, one might determine whether a particular mushroom is \u201cpoisonous\u201d or \u201cedible\u201d based on its color, size, and gill size.\u00a0 Classifiers can be learned automatically from a set of examples through supervised learning. Classification rules are rules that discriminate between different partitions of a database based on various attributes within the database. The partitions of the database are based on an attribute called the classification label (e.g., \u201cfaulty\u201d and \u201cgood\u201d).",
      "definition_html":"<p><a name=\"Classification\"></a><b>Classification</b><br/>\nAutomated classification tools such as <a href=\"https://www.stottlerhenke.com/features/glossary/#D\" rel=\"noopener\" target=\"_blank\">decision trees</a> have been shown to be very effective for distinguishing and characterizing very large volumes of data.\u00a0 They assign items to one of a set of predefined classes of objects based on a set of observed features.\u00a0 For example, one might determine whether a particular mushroom is \u201cpoisonous\u201d or \u201cedible\u201d based on its color, size, and gill size.\u00a0 Classifiers can be learned automatically from a set of examples through <a href=\"https://www.stottlerhenke.com/features/glossary/#S\" rel=\"noopener\" target=\"_blank\">supervised learning</a>. Classification rules are rules that discriminate between different partitions of a database based on various attributes within the database. The partitions of the database are based on an attribute called the classification label (e.g., \u201cfaulty\u201d and \u201cgood\u201d).</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Clustering",
      "definition_text":"Clustering is an approach to learning that seeks to place objects into meaningful groups automatically based on their similarity.\u00a0 Clustering, unlike classification, does not require the groups to be predefined with the hope that the algorithm will determine useful but hidden groupings of data points.\u00a0 The hope in applying clustering algorithms is that they will discover useful but unknown classes of items.\u00a0 A well-publicized success of a clustering system was NASA\u2019s discovery of a new class of stellar spectra.\u00a0 See IQE, GIIF, WebMediator, Rome Graphics, and data mining for examples of applications that use clustering.",
      "definition_html":"<p><a name=\"Clustering\"></a><b>Clustering</b><br/>\nClustering is an approach to learning that seeks to place objects into meaningful groups automatically based on their similarity.\u00a0 Clustering, unlike <a href=\"https://www.stottlerhenke.com/features/glossary/#C\" rel=\"noopener\" target=\"_blank\">classification</a>, does not require the groups to be predefined with the hope that the algorithm will determine useful but hidden groupings of data points.\u00a0 The hope in applying clustering algorithms is that they will discover useful but unknown classes of items.\u00a0 A well-publicized success of a clustering system was NASA\u2019s discovery of a new class of stellar spectra.\u00a0 See IQE, GIIF, WebMediator, Rome Graphics, and data mining for examples of applications that use clustering.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Cognitive Science",
      "definition_text":"Artificial intelligence can be defined as the mimicking of human thought to perform useful tasks, such as solving complex problems. This creation of new paradigms, algorithms, and techniques requires continued involvement in the human mind, the inspiration of AI. To that end, AI software designers team with cognitive psychologists and use cognitive science concepts, especially in knowledge elicitation and system design.",
      "definition_html":"<p><a name=\"cognitive sci\"></a><b>Cognitive Science</b><br/>\nArtificial intelligence can be defined as the mimicking of human thought to perform useful tasks, such as solving complex problems. This creation of new paradigms, algorithms, and techniques requires continued involvement in the human mind, the inspiration of AI. To that end, AI software designers team with cognitive psychologists and use cognitive science concepts, especially in knowledge elicitation and system design.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Cognitive Task Analysis",
      "definition_text":"Cognitive task analysis (CTA) is a systematic process by which the cognitive elements of task performance are identified. This includes both domain knowledge and cognitive processing. Thus, CTA focuses on mental activities that cannot be observed and is in contrast to behavioral task analysis that breaks the task down into observable, procedural steps. CTA is most useful for highly complex tasks with few observable behaviors. Examples of cognitive processing elements include: to decide, judge, notice, assess, recognize, interpret, prioritize, and anticipate. Examples of domain knowledge elements include concepts, principles, and interrelationships; goals and goal structures; rules, strategies and plans; implicit knowledge; and mental models.The results from CTA have various applications such as identifying content to be included within training programs for complex cognitive tasks, research on expert-novice differences in terms of domain knowledge and cognitive processing during task performance, modeling of expert performance to support expert system design, and the design of human-machine interfaces.",
      "definition_html":"<p><a name=\"Cognitive Task Analysis\"></a><b>Cognitive Task Analysis</b><br/>\nCognitive task analysis (CTA) is a systematic process by which the cognitive elements of task performance are identified. This includes both domain knowledge and cognitive processing. Thus, CTA focuses on mental activities that cannot be observed and is in contrast to behavioral task analysis that breaks the task down into observable, procedural steps. CTA is most useful for highly complex tasks with few observable behaviors. Examples of cognitive processing elements include: to decide, judge, notice, assess, recognize, interpret, prioritize, and anticipate. Examples of domain knowledge elements include concepts, principles, and interrelationships; goals and goal structures; rules, strategies and plans; implicit knowledge; and mental models.</p><p>The results from CTA have various applications such as identifying content to be included within training programs for complex cognitive tasks, research on expert-novice differences in terms of domain knowledge and cognitive processing during task performance, modeling of expert performance to support expert system design, and the design of human-machine interfaces.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Collaborative Filtering",
      "definition_text":"A technique for leveraging historical data about preferences of a body of users to help make recommendations or filter information for a particular user.\u00a0 Intuitively, the goal of these techniques is to develop an understanding of what may be interesting to a user by uncovering what is interesting to people who are similar to that user. See GIIF and IQE for examples of applications that use collaborative filtering techniques.",
      "definition_html":"<p><a name=\"collaborative filtering\"></a><b>Collaborative Filtering</b><br/>\nA technique for leveraging historical data about preferences of a body of users to help make recommendations or filter information for a particular user.\u00a0 Intuitively, the goal of these techniques is to develop an understanding of what may be interesting to a user by uncovering what is interesting to people who are similar to that user. See GIIF and IQE for examples of applications that use collaborative filtering techniques.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Commonsense Reasoning",
      "definition_text":"Ordinary people manage to accomplish an extraordinary number of complex tasks just using simple, informal thought processes based on a large amount of common knowledge. They can quickly plan and undertake a shopping expedition to six or seven different shops, as well as pick up the kids from soccer and drop a book back at the library, quite efficiently without logically considering the hundreds of thousands of alternative ways to plan such an outing. They can manage their personal finances, or find their way across a crowded room dancing without hitting anyone, just using commonsense reasoning. Artificial intelligence is far behind humans in using such reasoning except for limited jobs, and tasks that rely heavily on commonsense reasoning are usually poor candidates for AI applications.",
      "definition_html":"<p><a name=\"commonsense reasoning\"></a><b>Commonsense Reasoning</b><br/>\nOrdinary people manage to accomplish an extraordinary number of complex tasks just using simple, informal thought processes based on a large amount of common knowledge. They can quickly plan and undertake a shopping expedition to six or seven different shops, as well as pick up the kids from soccer and drop a book back at the library, quite efficiently without logically considering the hundreds of thousands of alternative ways to plan such an outing. They can manage their personal finances, or find their way across a crowded room dancing without hitting anyone, just using commonsense reasoning. Artificial intelligence is far behind humans in using such reasoning except for limited jobs, and tasks that rely heavily on commonsense reasoning are usually poor candidates for AI applications.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Computer Vision",
      "definition_text":"Making sense of what we see is usually easy for humans, but very hard for computers. Practical vision systems to date are limited to working in tightly controlled environments. Synonym: machine vision",
      "definition_html":"<p><b>Computer Vision</b><br/>\nMaking sense of what we see is usually easy for humans, but very hard for computers. Practical vision systems to date are limited to working in tightly controlled environments. Synonym: machine vision</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Constraint Satisfaction",
      "definition_text":"Constraints are events, conditions or rules that limit our alternatives for completing a task. For example, the foundation of a building has to be laid before the framing is done; a car has to be refueled once every four hundred miles, a neurosurgeon is needed to perform brain surgery, or a Walkman can only operate on a 9-volt battery.Satisfying constraints is particularly important in scheduling complex activities. By first considering applicable constraints, the number of possible schedules to be considered in a search for an acceptable schedule can be reduced enormously, making the search process much more efficient.\u00a0 Constraint satisfaction techniques can be used to solve scheduling problems directly. Constraint satisfaction algorithms include heuristic constraint- based search and annealing.\u00a0",
      "definition_html":"<p><a name=\"constraint satisfaction\"></a><b>Constraint Satisfaction</b><br/>\nConstraints are events, conditions or rules that limit our alternatives for completing a task. For example, the foundation of a building has to be laid before the framing is done; a car has to be refueled once every four hundred miles, a neurosurgeon is needed to perform brain surgery, or a Walkman can only operate on a 9-volt battery.</p><p>Satisfying constraints is particularly important in scheduling complex activities. By first considering applicable constraints, the number of possible schedules to be considered in a search for an acceptable schedule can be reduced enormously, making the search process much more efficient.\u00a0 Constraint satisfaction techniques can be used to solve scheduling problems directly. Constraint satisfaction algorithms include heuristic constraint- based search and annealing.</p><p>\u00a0</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Data Fusion\u00a0",
      "definition_text":"Information processing that deals with the association, correlation, and combination of data and information from single and multiple sources to achieve a more complete and more accurate assessment of a situation. The process is characterized by continuous refinement of its estimates and assessments, and by evaluation of the need for additional sources, or modification of the process itself, to achieve improved results.",
      "definition_html":"<p><a name=\"data fusion\"></a><b>Data Fusion\u00a0</b><br/>\nInformation processing that deals with the association, correlation, and combination of data and information from single and multiple sources to achieve a more complete and more accurate assessment of a situation. The process is characterized by continuous refinement of its estimates and assessments, and by evaluation of the need for additional sources, or modification of the process itself, to achieve improved results.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Data Mining",
      "definition_text":"The non-trivial process of uncovering interesting and useful relationships and patterns in very large databases to guide better business and technical decisions.\u00a0 Data mining is becoming increasingly important due to the fact that all types of commercial and government institutions are now logging huge volumes of data and now require the means to optimize the use of these vast resources.\u00a0 The size of the databases to which data mining techniques are applied is what distinguishes them from more traditional statistical and machine learning approaches, which can be computationally costly. Data mining forms part of the overall process of \u2018Knowledge Discovery in Databases.\u2019 Data mining is preceded by the preliminary stages of preparing and cleaning up the data, and followed by the subsequent incorporation of other relevant knowledge, and the final interpretation.\u00a0 See all the data mining projects for examples of use of data mining techniques.Data science An interdisciplinary field that combines scientific methods, systems, and processes from statistics, information science, and computer science to provide insight into phenomenon via either structured or unstructured data.",
      "definition_html":"<p><a name=\"data mining\"></a><b>Data Mining</b><br/>\nThe non-trivial process of uncovering interesting and useful relationships and patterns in very large databases to guide better business and technical decisions.\u00a0 Data mining is becoming increasingly important due to the fact that all types of commercial and government institutions are now logging huge volumes of data and now require the means to optimize the use of these vast resources.\u00a0 The size of the databases to which data mining techniques are applied is what distinguishes them from more traditional statistical and machine learning approaches, which can be computationally costly. Data mining forms part of the overall process of \u2018Knowledge Discovery in Databases.\u2019 Data mining is preceded by the preliminary stages of preparing and cleaning up the data, and followed by the subsequent incorporation of other relevant knowledge, and the final interpretation.\u00a0 See all the data mining projects for examples of use of data mining techniques.</p><p><strong>Data science</strong><br/>\nAn interdisciplinary field that combines scientific methods, systems, and processes from statistics, information science, and computer science to provide insight into phenomenon via either structured or unstructured data.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Decision Aids",
      "definition_text":"Software that helps humans make decisions, particularly about complex matters when a high degree of expertise is needed to make a good decision.",
      "definition_html":"<p><a name=\"decision aids\"></a><b>Decision Aids</b><br/>\nSoftware that helps humans make decisions, particularly about complex matters when a high degree of expertise is needed to make a good decision.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Decision-centered Design",
      "definition_text":"Decision-centered design emphasizes the use of cognitive task analysis methods to uncover expertise and decision requirements. It advocates for designs that focus on difficult decisions and unexpected situations rather than routine operations. While it focuses on identifying key decisions rather than exhaustively documenting all possible cognitive requirements, decision-centered design also recognizes that individual differences in expertise play an important role in decision making. Two methods of determining design requirements are critical decision method (CDM) interviewing and concept mapping. For example, they can be used in the design of a crew position aboard a surveillance aircraft and the redesign of anti-air warfare positions in the combat information center of naval vessels.",
      "definition_html":"<p><a name=\"decision-centered design\"></a><b>Decision-centered Design</b><br/>\nDecision-centered design emphasizes the use of cognitive task analysis methods to uncover expertise and decision requirements. It advocates for designs that focus on difficult decisions and unexpected situations rather than routine operations. While it focuses on identifying key decisions rather than exhaustively documenting all possible cognitive requirements, decision-centered design also recognizes that individual differences in expertise play an important role in decision making. Two methods of determining design requirements are critical decision method (CDM) interviewing and concept mapping. For example, they can be used in the design of a crew position aboard a surveillance aircraft and the redesign of anti-air warfare positions in the combat information center of naval vessels.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Decision Support",
      "definition_text":"Decision support is a broad class of applications for artificial intelligence software. There are many situations when humans would prefer machines, particularly computers, to either automatically assist them in making decisions, or actually make and act on a decision. There are a wide range of non-AI decision support systems such as most of the process control systems successfully running chemical plants and power plants and the like under steady state conditions. However, whenever situations become more complex\u2014for example, in chemical plants that don\u2019t run under steady state, or in businesses when both humans and equipment are interacting\u2014intelligent decision support is required. That can only be provided by automatic decision support software using artificial intelligence techniques. Stottler Henke has created a wide range of decision support applications that provide examples of such situations.\u00a0 Synonym:\u00a0 intelligent decision support.",
      "definition_html":"<p><a name=\"decision support\"></a><b>Decision Support</b><br/>\nDecision support is a broad class of applications for artificial intelligence software. There are many situations when humans would prefer machines, particularly computers, to either automatically assist them in making decisions, or actually make and act on a decision. There are a wide range of non-AI decision support systems such as most of the process control systems successfully running chemical plants and power plants and the like under steady state conditions. However, whenever situations become more complex\u2014for example, in chemical plants that don\u2019t run under steady state, or in businesses when both humans and equipment are interacting\u2014intelligent decision support is required. That can only be provided by automatic decision support software using artificial intelligence techniques. Stottler Henke has created a wide range of decision support applications that provide examples of such situations.\u00a0 Synonym:\u00a0 intelligent decision support.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Decision Theory",
      "definition_text":"Decision theory provides a basis for making choices in the face of uncertainty, based on the assignment of probabilities and payoffs to all possible outcomes of each decision. The space of possible actions and states of the world is represented by a decision tree.",
      "definition_html":"<p><b>Decision Theory</b><br/>\nDecision theory provides a basis for making choices in the face of uncertainty, based on the assignment of probabilities and payoffs to all possible outcomes of each decision. The space of possible actions and states of the world is represented by a decision tree.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Decision Trees",
      "definition_text":"A decision tree is a graphical representation of a hierarchical set of rules that describe how one might evaluate or classify an object of interest based on the answers to a series of questions.\u00a0 For instance, a decision tree can codify the sequence of tests a doctor might take in diagnosing a patient.\u00a0 Such a decision tree will order the tests based on their importance to the diagnostic task.\u00a0 The result of each successive test dictates the path you take through the tree and therefore the tests (and their order) that will be suggested.\u00a0 When you finally reach a node in which there is no further tests are suggested, the patient has been fully diagnosed. Decision trees have the advantage of being easy to understand because of their hierarchical rule structure, and explanations for their diagnoses can be readily and automatically generated.Decision trees can be automatically developed from a set of examples and are capable of discovering powerful predictive rules even when very large numbers of variables are involved.\u00a0 These algorithms operate by selecting the test that best discriminates amongst classes/diagnoses and then repeating this test selection process on each of the subsets matching the different test outcomes (e.g., \u201cpatients with temperatures greater than 101\u00baF\u201d and \u201cpatients with temperatures less than or equal to 101\u00baF\u201d).\u00a0 This process continues until all the examples in a particular set have the same class/diagnosis.Deep learning The ability for machines to autonomously mimic human thought patterns through artificial neural networks composed of cascading layers of information.",
      "definition_html":"<p><a name=\"Decision trees\"></a><b>Decision Trees</b><br/>\nA decision tree is a graphical representation of a hierarchical set of rules that describe how one might evaluate or classify an object of interest based on the answers to a series of questions.\u00a0 For instance, a decision tree can codify the sequence of tests a doctor might take in diagnosing a patient.\u00a0 Such a decision tree will order the tests based on their importance to the diagnostic task.\u00a0 The result of each successive test dictates the path you take through the tree and therefore the tests (and their order) that will be suggested.\u00a0 When you finally reach a node in which there is no further tests are suggested, the patient has been fully diagnosed. Decision trees have the advantage of being easy to understand because of their hierarchical rule structure, and explanations for their diagnoses can be readily and automatically generated.</p><p>Decision trees can be automatically developed from a set of examples and are capable of discovering powerful predictive rules even when very large numbers of variables are involved.\u00a0 These algorithms operate by selecting the test that best discriminates amongst classes/diagnoses and then repeating this test selection process on each of the subsets matching the different test outcomes (e.g., \u201cpatients with temperatures greater than 101\u00baF\u201d and \u201cpatients with temperatures less than or equal to 101\u00baF\u201d).\u00a0 This process continues until all the examples in a particular set have the same class/diagnosis.</p><p><strong>Deep learning</strong><br/>\nThe ability for machines to autonomously mimic human thought patterns through artificial neural networks composed of cascading layers of information.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Dependency Maintenance",
      "definition_text":"Dependency maintenance is the technique of recording why certain beliefs are held, decisions were made, or actions were taken, in order to facilitate revising those decisions, actions, or beliefs in the face of changing circumstances.\u00a0 Several families of truth maintenance systems have been developed to facilitate dependency maintenance in particular kinds of situations (e.g. need to consider many alternate scenarios versus a single scenario, frequency with which assumptions change, etc).",
      "definition_html":"<p><a name=\"dependency maintenance\"></a><b>Dependency Maintenance</b><br/>\nDependency maintenance is the technique of recording why certain beliefs are held, decisions were made, or actions were taken, in order to facilitate revising those decisions, actions, or beliefs in the face of changing circumstances.\u00a0 Several families of <a href=\"https://www.stottlerhenke.com/features/glossary/#T\" rel=\"noopener\" target=\"_blank\">truth maintenance systems</a> have been developed to facilitate dependency maintenance in particular kinds of situations (e.g. need to consider many alternate scenarios versus a single scenario, frequency with which assumptions change, etc).</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Document Clustering",
      "definition_text":"With document clustering techniques, documents can be automatically grouped into meaningful classes so that users of a database of full-text documents can easily search through related documents.Finding individual documents from amongst large on-line, full-text collections has been a growing problem in recent years due to the falling price of computer storage capacity and the networking of document databases to large numbers of people. Traditional library indexing has not provided adequate information retrieval from these large sources. The techniques for document clustering generally involve some natural language processing along with a collection of statistical measures.",
      "definition_html":"<p><a name=\"document clustering\"></a><b>Document Clustering</b><br/>\nWith document clustering techniques, documents can be automatically grouped into meaningful classes so that users of a database of full-text documents can easily search through related documents.Finding individual documents from amongst large on-line, full-text collections has been a growing problem in recent years due to the falling price of computer storage capacity and the networking of document databases to large numbers of people. Traditional library indexing has not provided adequate information retrieval from these large sources. The techniques for document clustering generally involve some natural language processing along with a collection of statistical measures.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Domain",
      "definition_text":"An overworked word for AI people. \u201cDomain\u201d can mean a variety of things including a subject area, field of knowledge, an industry, a specific job, an area of activity, a sphere of influence, or a range of interest, e.g., chemistry, medical diagnosis, putting out fires, operating a nuclear power plant, planning a wedding, diagnosing faults in a car. Generally, a domain is a system in which a particular set of rules, facts, or assumptions operates. Humans can usually easily figure out what\u2019s meant from the context in which \u201cdomain\u201d is used; computers could probably not figure out what a human means when he or she says \u201cdomain.\u201d",
      "definition_html":"<p><b>Domain</b><br/>\nAn overworked word for AI people. \u201cDomain\u201d can mean a variety of things including a subject area, field of knowledge, an industry, a specific job, an area of activity, a sphere of influence, or a range of interest, e.g., chemistry, medical diagnosis, putting out fires, operating a nuclear power plant, planning a wedding, diagnosing faults in a car. Generally, a domain is a system in which a particular set of rules, facts, or assumptions operates. Humans can usually easily figure out what\u2019s meant from the context in which \u201cdomain\u201d is used; computers could probably not figure out what a human means when he or she says \u201cdomain.\u201d</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Domain Expert",
      "definition_text":"The person who knows how to perform an activity within the domain, and whose knowledge is to be the subject of an expert system. This person\u2019s or persons\u2019 knowledge and method of work are observed, recorded, and entered into a knowledge base for use by an expert system. The domain expert\u2019s knowledge may be supplemented by written knowledge contained in operating manuals, standards, specifications, computer programs, etc., that are used by the experts. Synonym: subject-matter expert (SME).",
      "definition_html":"<p><b>Domain Expert</b><br/>\nThe person who knows how to perform an activity within the domain, and whose knowledge is to be the subject of an expert system. This person\u2019s or persons\u2019 knowledge and method of work are observed, recorded, and entered into a knowledge base for use by an expert system. The domain expert\u2019s knowledge may be supplemented by written knowledge contained in operating manuals, standards, specifications, computer programs, etc., that are used by the experts. Synonym: subject-matter expert (SME).</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Emergence",
      "definition_text":"Emergence is the phenomenon of complex patterns of behavior arising out of the myriad interactions of simple agents, which may each operate according to a few simple rules. To put it another way, an emergent system is much more than simply the sum of its parts. It can happen without any grand master outside the system telling the individual agents how to behave. For example, all the people in a modern city acting in their individual capacities as growers, processors, distributors, sellers, buyers, and consumers of food collectively create a food market matching supply and demand of thousands of different items, without an overall plan. An ant colony provides another example of simple agents, each operating according to a few simple rules, producing a larger system that finds food, provides shelter and protection for its members. Artificial intelligence software running on powerful computers can demonstrate useful emergent behavior as well, such as that demonstrated in automatic scheduling software that creates near-optimal schedules for complex activities subject to many constraints.",
      "definition_html":"<p><a name=\"emergence\"></a><b>Emergence</b><br/>\nEmergence is the phenomenon of complex patterns of behavior arising out of the myriad interactions of simple agents, which may each operate according to a few simple rules. To put it another way, an emergent system is much more than simply the sum of its parts. It can happen without any grand master outside the system telling the individual agents how to behave. For example, all the people in a modern city acting in their individual capacities as growers, processors, distributors, sellers, buyers, and consumers of food collectively create a food market matching supply and demand of thousands of different items, without an overall plan. An ant colony provides another example of simple agents, each operating according to a few simple rules, producing a larger system that finds food, provides shelter and protection for its members. Artificial intelligence software running on powerful computers can demonstrate useful emergent behavior as well, such as that demonstrated in automatic scheduling software that creates near-optimal schedules for complex activities subject to many constraints.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Expert System",
      "definition_text":"An expert system encapsulates the specialist knowledge gained from a human expert (such as a bond trader or a loan underwriter) and applies that knowledge automatically to make decisions. For example, the knowledge of doctors about how to diagnose a disease can be encapsulated in software. The process of acquiring the knowledge from the experts and their documentation and successfully incorporating it in the software is called knowledge engineering, and requires considerable skill to perform successfully. Applications include customer service and helpdesk support, computer or network troubleshooting, regulatory tracking, autocorrect\u00a0 features in word processors, document generation such as tax forms, and scheduling. ",
      "definition_html":"<p><a name=\"expert system\"></a><b>Expert System</b><br/>\nAn expert system encapsulates the specialist knowledge gained from a human expert (such as a bond trader or a loan underwriter) and applies that knowledge automatically to make decisions. For example, the knowledge of doctors about how to diagnose a disease can be encapsulated in software. The process of acquiring the knowledge from the experts and their documentation and successfully incorporating it in the software is called knowledge engineering, and requires considerable skill to perform successfully. Applications include customer service and helpdesk support, computer or network troubleshooting, regulatory tracking, autocorrect\u00a0 features in word processors, document generation such as tax forms, and scheduling.<br/>\n<a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Fuzzy Logic",
      "definition_text":"Traditional Western logic systems assume that things are either in one category or another. Yet in everyday life, we know this is often not precisely so. People aren\u2019t just short or tall, they can be fairly short or fairly tall, and besides we differ in our opinions of what height actually corresponds to tall, anyway.. The ingredients of a cake aren\u2019t just not mixed or mixed, they can be moderately well mixed. Fuzzy logic provides a way of taking our commonsense knowledge that most things are a matter of degree into account when a computer is automatically making a decision. For example, one rice cooker uses fuzzy logic to cook rice perfectly even if the cook put in too little water or too much water.",
      "definition_html":"<p><a name=\"fuzzy logic\"></a><b>Fuzzy Logic</b><br/>\nTraditional Western logic systems assume that things are either in one category or another. Yet in everyday life, we know this is often not precisely so. People aren\u2019t just short or tall, they can be fairly short or fairly tall, and besides we differ in our opinions of what height actually corresponds to tall, anyway.. The ingredients of a cake aren\u2019t just not mixed or mixed, they can be moderately well mixed. Fuzzy logic provides a way of taking our commonsense knowledge that most things are a matter of degree into account when a computer is automatically making a decision. For example, one rice cooker uses fuzzy logic to cook rice perfectly even if the cook put in too little water or too much water.",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Fuzzy Sets\n",
      "definition_text":"In mathematics, Fuzzy sets are sets whose elements have degrees of membership. Fuzzy sets were introduced by Lotfi A. Zadeh and Dieter Klaua in 1965 as an extension of the classical notion of set. At the same time, Salii (1965) defined a more general kind of structures called L-relations, which were studied by him in an abstract algebraic context. Fuzzy relations, which are used now in different areas, such as linguistics (De Cock, et al, 2000), decision-making (Kuzmin, 1982) and clustering (Bezdek, 1978), are special cases of L-relations when L is the unit interval [0, 1].In classical set theory, the membership of elements in a set is assessed in binary terms according to a bivalent condition \u2014 an element either belongs or does not belong to the set. By contrast, fuzzy set theory permits the gradual assessment of the membership of elements in a set; this is described with the aid of a membership function valued in the real unit interval [0,\u00a01]. Fuzzy sets generalize classical sets, since the indicator functions of classical sets are special cases of the membership functions of fuzzy sets, if the latter only take values 0 or 1. In fuzzy set theory, classical bivalent sets are usually called crisp sets. The fuzzy set theory can be used in a wide range of domains in which information is incomplete or imprecise, such as bioinformatics.",
      "definition_html":"</p><p><b>Fuzzy Sets<br/>\n</b>In mathematics, Fuzzy sets are sets whose elements have degrees of membership. Fuzzy sets were introduced by Lotfi A. Zadeh<sup id=\"cite_ref-1\"></sup> and Dieter Klaua<sup id=\"cite_ref-2\"></sup> in 1965 as an extension of the classical notion of set. At the same time, Salii (1965) defined a more general kind of structures called L-relations, which were studied by him in an abstract algebraic context. Fuzzy relations, which are used now in different areas, such as linguistics (De Cock, et al, 2000), decision-making (Kuzmin, 1982) and clustering (Bezdek, 1978), are special cases of L-relations when L is the unit interval [0, 1].</p><p>In classical set theory, the membership of elements in a set is assessed in binary terms according to a bivalent condition \u2014 an element either belongs or does not belong to the set. By contrast, fuzzy set theory permits the gradual assessment of the membership of elements in a set; this is described with the aid of a membership function valued in the real unit interval [0,\u00a01]. Fuzzy sets generalize classical sets, since the indicator functions of classical sets are special cases of the membership functions of fuzzy sets, if the latter only take values 0 or 1.<sup id=\"cite_ref-3\"></sup> In fuzzy set theory, classical bivalent sets are usually called crisp sets. The fuzzy set theory can be used in a wide range of domains in which information is incomplete or imprecise, such as bioinformatics.<sup id=\"cite_ref-4\"></sup></p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Game Theory",
      "definition_text":"Game theory is a branch of mathematics that seeks to model decision making in conflict situations.",
      "definition_html":"<p><a name=\"game theory\"></a><b>Game Theory</b><br/>\nGame theory is a branch of mathematics that seeks to model decision making in conflict situations.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Genetic Algorithms",
      "definition_text":"Search algorithms used in machine learning which involve iteratively generating new candidate solutions by combining two high scoring earlier (or parent) solutions in a search for a better solution. So named because of its reliance on ideas drawn from biological evolution.",
      "definition_html":"<p><a name=\"genetic algorithms\"></a><b>Genetic Algorithms</b><br/>\nSearch algorithms used in machine learning which involve iteratively generating new candidate solutions by combining two high scoring earlier (or parent) solutions in a search for a better solution. So named because of its reliance on ideas drawn from biological evolution.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Granularity",
      "definition_text":"Refers to the basic size of units that can be manipulated. Often refers to the level of detail or abstraction at which a particular problem is analyzed. One characteristic of human intelligence, Jerry R. Hobbs has pointed out, is the ability to conceptualize a world at different levels of granularity (complexity) and to move among them in considering problems and situations. The simpler the problem, the coarser the grain can be and still provide effective solutions to the problem.",
      "definition_html":"<p><b>Granularity</b><br/>\nRefers to the basic size of units that can be manipulated. Often refers to the level of detail or abstraction at which a particular problem is analyzed. One characteristic of human intelligence, Jerry R. Hobbs has pointed out, is the ability to conceptualize a world at different levels of granularity (complexity) and to move among them in considering problems and situations. The simpler the problem, the coarser the grain can be and still provide effective solutions to the problem.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Heterogeneous Databases",
      "definition_text":"Databases that contain different kinds of data, e.g, text and numerical data.",
      "definition_html":"<p><a name=\"heterogeneous databases\"></a><b>Heterogeneous Databases</b><br/>\nDatabases that contain different kinds of data, e.g, text and numerical data.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Heuristic",
      "definition_text":"An heuristic is commonly called a rule of thumb. That is, an heuristic is a method for solving a problem that doesn\u2019t guarantee a good solution all the time, but usually does. The term is attributed to the mathematician, George Polya. An example of an heuristic would be to search for a lost object by starting in the last place you can remember using it.",
      "definition_html":"<p><b>Heuristic</b><br/>\nAn heuristic is commonly called a rule of thumb. That is, an heuristic is a method for solving a problem that doesn\u2019t guarantee a good solution all the time, but usually does. The term is attributed to the mathematician, George Polya. An example of an heuristic would be to search for a lost object by starting in the last place you can remember using it.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Human-Centered Computing",
      "definition_text":"Computers and other machines should be designed to effectively serve people\u2019s needs and requirements. All too often they\u2019re not. Commonly cited examples of this are the difficulty people have in setting up their VCR to record a TV show; and the difficulties people have in setting up a home computer facility, or hooking up to the Internet. Artificial intelligence software can be used to deliver more human-centered computing, improving system usability, extending the powerfulness of human reasoning and enabling greater collaboration amongst humans and machines, and promoting human learning. A goal of human-centered computing is for cooperating humans and machines to compensate for each other\u2019s respective weaknesses (e.g., machines to compensate for limited human short-term memory and the slowness with which humans can search through many alternative possible solutions to a problems; and for humans to compensate machines for their more limited pattern-recognition capability, language processing, and creativity) in support of human goals.Synonym: mixed initiative planning.",
      "definition_html":"<p><a name=\"human centered\"></a><b>Human-Centered Computing</b><br/>\nComputers and other machines should be designed to effectively serve people\u2019s needs and requirements. All too often they\u2019re not. Commonly cited examples of this are the difficulty people have in setting up their VCR to record a TV show; and the difficulties people have in setting up a home computer facility, or hooking up to the Internet. Artificial intelligence software can be used to deliver more human-centered computing, improving system usability, extending the powerfulness of human reasoning and enabling greater collaboration amongst humans and machines, and promoting human learning. A goal of human-centered computing is for cooperating humans and machines to compensate for each other\u2019s respective weaknesses (e.g., machines to compensate for limited human short-term memory and the slowness with which humans can search through many alternative possible solutions to a problems; and for humans to compensate machines for their more limited pattern-recognition capability, language processing, and creativity) in support of human goals.</p><p>Synonym: mixed initiative planning.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Hybrid Systems",
      "definition_text":"Many of Stottler Henke\u2019s artificial intelligence software applications use multiple AI techniques in combination. For example, case-based reasoning may be used in combination with model-based reasoning in an automatic diagnostic system. Case-based reasoning, which tends to be less expensive to develop and faster to run, may draw on an historical databases of past equipment failures, the diagnosis of those, and the repairs effected and the outcomes achieved. So CBR may be used to make most failure diagnoses. Model-based reasoning may be used to diagnose less common but expensive failures, and also to make fine adjustments to the repair procedures retrieved from similar cases in the case base by CBR.",
      "definition_html":"<p><b>Hybrid Systems</b><br/>\nMany of Stottler Henke\u2019s artificial intelligence software applications use multiple AI techniques in combination. For example, case-based reasoning may be used in combination with model-based reasoning in an automatic diagnostic system. Case-based reasoning, which tends to be less expensive to develop and faster to run, may draw on an historical databases of past equipment failures, the diagnosis of those, and the repairs effected and the outcomes achieved. So CBR may be used to make most failure diagnoses. Model-based reasoning may be used to diagnose less common but expensive failures, and also to make fine adjustments to the repair procedures retrieved from similar cases in the case base by CBR.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Inference Engine",
      "definition_text":"The part of an expert system responsible for drawing new conclusions from\u00a0 the current data and rules. The inference engine is a portion of the reusable part of an expert system (along with the user interface, a knowledge base editor, and an explanation system), that will work with different sets of case-specific data and knowledge bases.",
      "definition_html":"<p><b>Inference Engine</b><br/>\nThe part of an expert system responsible for drawing new conclusions from\u00a0 the current data and rules. The inference engine is a portion of the reusable part of an expert system (along with the user interface, a knowledge base editor, and an explanation system), that will work with different sets of case-specific data and knowledge bases.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Information Filtering",
      "definition_text":"An information filtering system sorts through large volumes of dynamically generated information to present to the user those nuggets of information which are likely to satisfy his or her immediate needs. Information filtering overlaps the older field of information retrieval, which also deals with the selection of information. Many of the features of information retrieval system design (e.g. representation, similarity measures or boolean selection, document space visualization) are present in information filtering systems as well. Information filtering is roughly information retrieval from a rapidly changing information space.",
      "definition_html":"<p><b>Information Filtering</b><br/>\nAn information filtering system sorts through large volumes of dynamically generated information to present to the user those nuggets of information which are likely to satisfy his or her immediate needs. Information filtering overlaps the older field of information retrieval, which also deals with the selection of information. Many of the features of information retrieval system design (e.g. representation, similarity measures or boolean selection, document space visualization) are present in information filtering systems as well. Information filtering is roughly information retrieval from a rapidly changing information space.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Intelligent Entities",
      "definition_text":"It is an entity that exhibits a significant degree of intelligence. It has an ability to reason, make plans, carry out plans, acquire knowledge, learn from its environment, manipulate its environment, and interact with other entities within its environment to some extent.",
      "definition_html":"<p><b>Intelligent Entities</b><br/>\nIt is an entity that exhibits a significant degree of intelligence. It has an ability to reason, make plans, carry out plans, acquire knowledge, learn from its environment, manipulate its environment, and interact with other entities within its environment to some extent.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Intelligent Tutoring Systems",
      "definition_text":"encode and apply the subject matter and teaching expertise of experienced instructors, using artificial intelligence (AI) software technologies and cognitive psychology models, to provide the benefits of one-on-one instruction \u2014 automatically and cost-effectively. These systems provide coaching and hinting, evaluate each student\u2019s performance, assess the student\u2019s knowledge and skills, provide instructional feedback, and select appropriate next exercises for the student. See Stottler Henke case studies.",
      "definition_html":"<p><a name=\"ITS\"></a><b>Intelligent Tutoring Systems</b><br/>\nencode and apply the subject matter and teaching expertise of experienced instructors, using artificial intelligence (AI) software technologies and cognitive psychology models, to provide the benefits of one-on-one instruction \u2014 automatically and cost-effectively. These systems provide coaching and hinting, evaluate each student\u2019s performance, assess the student\u2019s knowledge and skills, provide instructional feedback, and select appropriate next exercises for the student. See Stottler Henke <a href=\"https://www.stottlerhenke.com/solutions/education-and-training/\" rel=\"noopener\" target=\"_blank\">case studies.</a></p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"KAPPA",
      "definition_text":"Rule-based object-oriented expert system tool and application developer (IntelliCorp Inc.). KAPPA is written in C, and is available for PCs. See AI Languages and Tools.",
      "definition_html":"<p><a name=\"KAPPA\"></a><b>KAPPA</b><br/>\nRule-based object-oriented expert system tool and application developer (IntelliCorp Inc.). KAPPA is written in C, and is available for PCs. See AI Languages and Tools.",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge-based Planning\n",
      "definition_text":"Knowledge-based Planning Knowledge-based planning represents the planner\u2019s incomplete knowledge state and the domain actions.\u00a0 Actions are being modeled in terms of how they modify the knowledge state of the planner rather than in terms of how they modify the physical world. This approach scales better and supports features that make it applicable to much richer domains and problems.Knowledge rich approaches, such as hierarchical task network planning, have advantages of scalability, expressiveness, continuous plan modification during execution, and the ability to interact with humans. However, these planners also have limitations, such as requiring complete domain models and failing to model uncertainty, that often make them inadequate for real-world problems.",
      "definition_html":"</p><p><a name=\"knowledge based planning\"></a><b>Knowledge-based Planning<br/>\n</b>Knowledge-based planning represents the planner\u2019s incomplete knowledge state and the domain actions.\u00a0 Actions are being modeled in terms of how they modify the knowledge state of the planner rather than in terms of how they modify the physical world. This approach scales better and supports features that make it applicable to much richer domains and problems.</p><p>Knowledge rich approaches, such as hierarchical task network planning, have advantages of scalability, expressiveness, continuous plan modification during execution, and the ability to interact with humans. However, these planners also have limitations, such as requiring complete domain models and failing to model uncertainty, that often make them inadequate for real-world problems.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge-based Representations",
      "definition_text":"The form or structure of databases and knowledge bases for expert and other intelligent systems, so that the information and solutions provided by a system are both accurate and complete. Usually involves a logically-based language capable of both syntactic and semantic representation of time, events, actions, processes, and entities. Knowledge representation languages include Lisp, Prolog, Smalltalk, OPS-5, and KL-ONE. Structures include rules, scripts, frames, endorsements, and semantic networks.",
      "definition_html":"<p><a name=\"knowledge based rep\"></a><b>Knowledge-based Representations</b><br/>\nThe form or structure of databases and knowledge bases for expert and other intelligent systems, so that the information and solutions provided by a system are both accurate and complete. Usually involves a logically-based language capable of both syntactic and semantic representation of time, events, actions, processes, and entities. Knowledge representation languages include Lisp, Prolog, Smalltalk, OPS-5, and KL-ONE. Structures include rules, scripts, frames, endorsements, and semantic networks.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge-based Systems",
      "definition_text":"Usually a synonym for expert system, though some think of expert systems as knowledge-based systems that are designed to work on practical, real-world problems.",
      "definition_html":"<p><b>Knowledge-based Systems</b><br/>\nUsually a synonym for expert system, though some think of expert systems as knowledge-based systems that are designed to work on practical, real-world problems.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge Elicitation",
      "definition_text":"Synonym: knowledge acquisition.",
      "definition_html":"<p><a name=\"knowledge elicitation\"></a><b>Knowledge Elicitation</b><br/>\nSynonym: knowledge acquisition.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge Engineering",
      "definition_text":"Knowledge engineering is the process of collecting knowledge from human experts in a form suitable for designing and implementing an expert system. The person conducting knowledge engineering is called a knowledge engineer.",
      "definition_html":"<p><a name=\"knowledge engineering\"></a><b>Knowledge Engineering</b><br/>\nKnowledge engineering is the process of collecting knowledge from human experts in a form suitable for designing and implementing an expert system. The person conducting knowledge engineering is called a knowledge engineer.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge Fusion",
      "definition_text":"See Data Fusion.",
      "definition_html":"<p><b>Knowledge Fusion</b><br/>\nSee <a href=\"https://www.stottlerhenke.com/features/glossary/#D\" rel=\"noopener\" target=\"_blank\">Data Fusion</a>.",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge Management",
      "definition_text":"Knowledge Management Knowledge management (KM) is the process of capturing, developing, sharing, and effectively using organisational knowledge. It refers to a multi-disciplined approach to achieving organizational objectives by making the best use of knowledge. It includes courses taught in the fields of business administration, information systems, management, and library and information sciences. More recently, other fields have started contributing to KM research; these include information and media, computer science, public health, and public policy.Knowledge management efforts typically focus on organizational objectives such as improved performance, competitive advantage, innovation, the sharing of lessons learned, integration and continuous improvement of the organization. KM efforts overlap with organizational learning and may be distinguished from that by a greater focus on the management of knowledge as a strategic asset and a focus on encouraging the sharing of knowledge. It is seen as an enabler of organizational learning and a more concrete mechanism than the previous abstract research.",
      "definition_html":"</p><p><b>Knowledge Management<br/>\n</b>Knowledge management (KM) is the process of capturing, developing, sharing, and effectively using organisational knowledge.<sup id=\"cite_ref-Davenport_1-0\"></sup> It refers to a multi-disciplined approach to achieving organizational objectives by making the best use of knowledge. It includes courses taught in the fields of business administration, information systems, management, and library and information sciences.<sup id=\"cite_ref-39Nonaka_4-0\"></sup> More recently, other fields have started contributing to KM research; these include information and media, computer science, public health, and public policy.<sup id=\"cite_ref-17Mental_5-0\"></sup><sup id=\"cite_ref-KM.40Kent_7-0\"></sup></p><p>Knowledge management efforts typically focus on organizational objectives such as improved performance, competitive advantage, innovation, the sharing of lessons learned, integration and continuous improvement of the organization.<sup id=\"cite_ref-16Gupta_9-0\"></sup> KM efforts overlap with organizational learning and may be distinguished from that by a greater focus on the management of knowledge as a strategic asset and a focus on encouraging the sharing of knowledge.<sup id=\"cite_ref-Maier_10-0\"></sup> It is seen as an enabler of organizational learning and a more concrete mechanism than the previous abstract research.<sup id=\"cite_ref-15BF_13-0\"></sup></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Knowledge Representation",
      "definition_text":"Knowledge representation is one of the two basic techniques of artificial intelligence, the other is the capability to search for end points from a starting point. The way in which knowledge is represented\u00a0 has a powerful effect on the prospects for a computer or person to draw conclusions or make inferences from that knowledge. Consider the representation of numbers that we wish to add. Which is easier, adding 10 + 50 in Arabic numerals, or adding X plus L in Roman numerals? Consider also the use of algebraic symbols in solving problems for unknown numerical quantities, compared with trying to do the same problems just with words and numbers.",
      "definition_html":"<p><a name=\"knowledge representation\"></a><b>Knowledge Representation</b><br/>\nKnowledge representation is one of the two basic techniques of artificial intelligence, the other is the capability to search for end points from a starting point. The way in which knowledge is represented\u00a0 has a powerful effect on the prospects for a computer or person to draw conclusions or make inferences from that knowledge. Consider the representation of numbers that we wish to add. Which is easier, adding 10 + 50 in Arabic numerals, or adding X plus L in Roman numerals? Consider also the use of algebraic symbols in solving problems for unknown numerical quantities, compared with trying to do the same problems just with words and numbers.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"LISP",
      "definition_text":"LISP (short for list processing language), a computer language,\u00a0 was invented by John McCarthy, one of the pioneers of artificial intelligence. The language is ideal for representing knowledge (e.g., If a fire alarm is ringing, then there is a fire) from which inferences are to be drawn.",
      "definition_html":"<p><b>LISP</b><br/>\nLISP (short for list processing language), a computer language,\u00a0 was invented by John McCarthy, one of the pioneers of artificial intelligence. The language is ideal for representing knowledge (e.g., If a fire alarm is ringing, then there is a fire) from which inferences are to be drawn.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Machine Learning",
      "definition_text":"Machine learning refers to the ability of computers to automatically acquire new knowledge, learning from, for example, past cases or experience, from the computer\u2019s own experiences, or from exploration. Machine learning has many uses such as finding rules to direct marketing campaigns based on lessons learned from analysis of data from supermarket loyalty campaigns; or learning to recognize characters from people\u2019s handwriting. Machine learning enables computer software to adapt to changing circumstances, enabling it to make better decisions than non-AI software. Synonyms: learning, automatic learning.Machine perception The ability for a system to receive and interpret data from the outside world similarly to how humans use our senses. This is typically done with attached hardware, though software is also usable.",
      "definition_html":"<p><a name=\"machine learning\"></a><br/>\n<b>Machine Learning</b><br/>\nMachine learning refers to the ability of computers to automatically acquire new knowledge, learning from, for example, past cases or experience, from the computer\u2019s own experiences, or from exploration. Machine learning has many uses such as finding rules to direct marketing campaigns based on lessons learned from analysis of data from supermarket loyalty campaigns; or learning to recognize characters from people\u2019s handwriting. Machine learning enables computer software to adapt to changing circumstances, enabling it to make better decisions than non-AI software. Synonyms: learning, automatic learning.</p><p><strong>Machine perception</strong><br/>\nThe ability for a system to receive and interpret data from the outside world similarly to how humans use our senses. This is typically done with attached hardware, though software is also usable.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Model-based Reasoning",
      "definition_text":"Model-based reasoning (MBR) concentrates on reasoning about a system\u2019s behavior from an explicit model of the mechanisms underlying that behavior. Model-based techniques can very succinctly represent knowledge more completely and at a greater level of detail than techniques that encode experience, because they employ models that are compact axiomatic systems from which large amounts of information can be deduced.",
      "definition_html":"<p><a name=\"Model-based Reasoning\"></a><b>Model-based Reasoning</b><br/>\nModel-based reasoning (MBR) concentrates on reasoning about a system\u2019s behavior from an explicit model of the mechanisms underlying that behavior. Model-based techniques can very succinctly represent knowledge more completely and at a greater level of detail than techniques that encode experience, because they employ models that are compact axiomatic systems from which large amounts of information can be deduced.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Modeling",
      "definition_text":"Synonym for simulation.",
      "definition_html":"<p><b>Modeling</b><br/>\nSynonym for simulation.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Natural Language Processing",
      "definition_text":"English is an example of a natural language, a computer language isn\u2019t. For a computer to process a natural language, it would have to mimic what a human does. That is, the computer would have to recognize the sequence of words spoken by a person or another computer, understand the syntax or grammar of the words (i.e., do a syntactical analysis), and then extract the meaning of the words. A limited amount of meaning can be derived from a sequence of words taken out of context (i.e., by semantic analysis); but much more of the meaning depends on the context in which the words are spoken (e.g., who spoke them, under what circumstances, with what tone, and what else was said, particularly before the words), which would require a pragmatic analysis to extract. To date, natural language processing is poorly developed and computers are not yet able to even approach the ability of humans to extract meaning from natural languages; yet there are already valuable practical applications of the technology.",
      "definition_html":"<p><a name=\"nat language processing\"></a><b>Natural Language Processing</b><br/>\nEnglish is an example of a natural language, a computer language isn\u2019t. For a computer to process a natural language, it would have to mimic what a human does. That is, the computer would have to recognize the sequence of words spoken by a person or another computer, understand the syntax or grammar of the words (i.e., do a syntactical analysis), and then extract the meaning of the words. A limited amount of meaning can be derived from a sequence of words taken out of context (i.e., by semantic analysis); but much more of the meaning depends on the context in which the words are spoken (e.g., who spoke them, under what circumstances, with what tone, and what else was said, particularly before the words), which would require a pragmatic analysis to extract. To date, natural language processing is poorly developed and computers are not yet able to even approach the ability of humans to extract meaning from natural languages; yet there are already valuable practical applications of the technology.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Neural Networks",
      "definition_text":"Neural networks are an approach to machine learning which developed out of attempts to model the processing that occurs within the neurons of the brain. By using simple processing units (neurons), organized in a layered and highly parallel architecture, it is possible to perform arbitrarily complex calculations. Learning is achieved through repeated minor modifications to selected neurons, which results in a very powerful classification system. A problem with neural networks is that it very difficult to understand their internal reasoning process, and therefore to obtain an explanation for any particular conclusion. They are best used, therefore, when the results of a model are more important than understanding how the model works. Neural network software is used to recognize handwriting, and also to control chemical processes to run at desired conditions.\u00a0 Other applications include stock market analysis, fingerprint identification, character recognition, speech recognition, credit analysis, scientific analysis of data, and in\u00a0neurophysiological research. Neural networks are also known as neural nets, connectionism, and parallel associative memory.",
      "definition_html":"<p><a name=\"neural networks\"></a><b>Neural Networks</b><br/>\nNeural networks are an approach to machine learning which developed out of attempts to model the processing that occurs within the neurons of the brain. By using simple processing units (neurons), organized in a layered and highly parallel architecture, it is possible to perform arbitrarily complex calculations. Learning is achieved through repeated minor modifications to selected neurons, which results in a very powerful classification system. A problem with neural networks is that it very difficult to understand their internal reasoning process, and therefore to obtain an explanation for any particular conclusion. They are best used, therefore, when the results of a model are more important than understanding how the model works. Neural network software is used to recognize handwriting, and also to control chemical processes to run at desired conditions.\u00a0 Other applications include stock market analysis, fingerprint identification, character recognition, speech recognition, credit analysis, scientific analysis of data, and in\u00a0neurophysiological research. Neural networks are also known as neural nets, connectionism, and parallel associative memory.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Object-oriented programming",
      "definition_text":"An object-oriented problem-solving approach is very similar to the way a human solves problems. It consists of identifying objects and the correct sequence in which to use these objects to solve the problem. In other words, object-oriented problem solving consists of designing objects whose individual behaviors, and interactions solve a specific problem. Interactions between objects take place through the exchange of messages, where a message to an object causes it to perform its operations and solve its part of the problem.\u00a0 The object-oriented problem solving approach thus has four steps: 1) identify the problem; 2) identify the objects needed for the solution; 3) identify messages to be sent to the objects; and 4) create a sequence of messages to the objects that solve the problem.In an object-oriented system, objects are data structures used to represent knowledge about physical things (e.g., pumps, computers, arteries, any equipment) or concepts (e.g., plans, designs, requirements). They are typically organized into hierarchical classes, and each class of object has information about its attributes stored in instance variables associated with each instance in the class. The only thing that an object knows about another object is that object\u2019s interface. Each object\u2019s data and logic is hidden from other objects. This allow the developer to separate an object\u2019s implementation from its behavior. This separation creates a \u201cblack-box\u201d effect where the user is isolated from implementation changes. As long as the interface remains the same, any changes to the internal implementation is transparent to the user. Objects provide considerable leverage in representing the world in a natural way and in reusing code that operates on common classes of objects.",
      "definition_html":"<p><a name=\"obj oriented program\"></a><b>Object-oriented programming</b><br/>\nAn object-oriented problem-solving approach is very similar to the way a human solves problems. It consists of identifying objects and the correct sequence in which to use these objects to solve the problem. In other words, object-oriented problem solving consists of designing objects whose individual behaviors, and interactions solve a specific problem. Interactions between objects take place through the exchange of messages, where a message to an object causes it to perform its operations and solve its part of the problem.\u00a0 The object-oriented problem solving approach thus has four steps: 1) identify the problem; 2) identify the objects needed for the solution; 3) identify messages to be sent to the objects; and 4) create a sequence of messages to the objects that solve the problem.</p><p>In an object-oriented system, objects are data structures used to represent knowledge about physical things (e.g., pumps, computers, arteries, any equipment) or concepts (e.g., plans, designs, requirements). They are typically organized into hierarchical classes, and each class of object has information about its attributes stored in instance variables associated with each instance in the class. The only thing that an object knows about another object is that object\u2019s interface. Each object\u2019s data and logic is hidden from other objects. This allow the developer to separate an object\u2019s implementation from its behavior. This separation creates a \u201cblack-box\u201d effect where the user is isolated from implementation changes. As long as the interface remains the same, any changes to the internal implementation is transparent to the user. Objects provide considerable leverage in representing the world in a natural way and in reusing code that operates on common classes of objects.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Ontology",
      "definition_text":"A formal ontology is a rigorous specification of a set of specialized vocabulary terms and their relationships sufficient to describe and reason about the range of situations of interest in some domain.In other words, it is a conceptual representation of the entities, events, and their relationships that compose a specific domain. Two primary relationships of interest are abstraction (\u201ca cat is specific instance of a more general entity called animal\u201d) and composition (\u201ca cat has whiskers and claws\u201d).\u00a0 Ontologies are generally used to model a domain of interest, permitting inferential and deductive reasoning by learning systems.",
      "definition_html":"<p><a name=\"Ontology\"></a><b>Ontology</b><br/>\nA formal ontology is a rigorous specification of a set of specialized vocabulary terms and their relationships sufficient to describe and reason about the range of situations of interest in some domain.</p><p>In other words, it is a conceptual representation of the entities, events, and their relationships that compose a specific domain. Two primary relationships of interest are abstraction (\u201ca cat is specific instance of a more general entity called animal\u201d) and composition (\u201ca cat has whiskers and claws\u201d).\u00a0 Ontologies are generally used to model a domain of interest, permitting inferential and deductive reasoning by learning systems.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Pattern Recognition",
      "definition_text":"The use of feature analysis to identify an image of an object. May involve techniques such as statistical pattern recognition, Bayesian analysis, classification, cluster analysis, and analysis of texture and edges. See machine vision.",
      "definition_html":"<p><a name=\"pattern recognition\"></a><b>Pattern Recognition</b><br/>\nThe use of feature analysis to identify an image of an object. May involve techniques such as statistical pattern recognition, Bayesian analysis, classification, cluster analysis, and analysis of texture and edges. See machine vision.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Plan Recognition",
      "definition_text":"The goal of plan recognition is to interpret an agent\u2019s intentions by ascribing goals and plans to it based on partial observation of its behavior up to the current time.\u00a0 Divining the agent\u2019s underlying plan can be useful for many purposes including: interpreting the agent\u2019s past behavior, predicting the agent\u2019s future behavior, or acting to collaborate with (or thwart) the agent.",
      "definition_html":"<p><a name=\"plan recognition\"></a><b>Plan Recognition</b><br/>\nThe goal of plan recognition is to interpret an agent\u2019s intentions by ascribing goals and plans to it based on partial observation of its behavior up to the current time.\u00a0 Divining the agent\u2019s underlying plan can be useful for many purposes including: interpreting the agent\u2019s past behavior, predicting the agent\u2019s future behavior, or acting to collaborate with (or thwart) the agent.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Planning and Scheduling",
      "definition_text":"Planning is the field of AI that deals with the synthesis of plans, which are partial orders of (possibly conditional) actions to meet specified goals under specified constraints. It is related to scheduling, which is the task of determining when and with what resources to carry out each member of a specific set of actions to satisfy constraints regarding ordering, effectiveness and resource allocation. In 1991, SHAI developed the concept of intelligent entities for planning and scheduling applications. Intelligent entities play the role of managers of various resources, groups of resources, tasks, and projects made up of tasks.",
      "definition_html":"<p><a name=\"planning&amp;scheduling\"></a><b>Planning and Scheduling</b></p>\n<p>Planning is the field of AI that deals with the synthesis of plans, which are partial orders of (possibly conditional) actions to meet specified goals under specified constraints. It is related to scheduling, which is the task of determining when and with what resources to carry out each member of a specific set of actions to satisfy constraints regarding ordering, effectiveness and resource allocation. In 1991, SHAI developed the concept of intelligent entities for planning and scheduling applications. Intelligent entities play the role of managers of various resources, groups of resources, tasks, and projects made up of tasks.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Planning and Scheduling Agents",
      "definition_text":"Multiagent planning is concerned with planning by (and for) multiple agents. It can involve agents planning for a common goal, an agent coordinating the plans (plan merging) or planning of others, or agents refining their own plans while negotiating over tasks or resources. The topic also involves how agents can do this in real time while executing plans (distributed continual planning). Multiagent scheduling differs from multiagent planning the same way planning and scheduling differ: in scheduling often the tasks that need to be performed are already decided, and in practice, scheduling tends to focus on algorithms for specific problem domains.Strategies or action sequences are typically executed by intelligent agents, autonomous robots and unmanned vehicles. Unlike classical control and classification problems, the solutions are complex and must be discovered and optimized in multidimensional space. Planning is also related to decision theory.",
      "definition_html":"<p><a name=\"planning &amp; scheduling agents\"></a><b>Planning and Scheduling Agents</b><br/>\nMultiagent planning is concerned with planning by (and for) multiple agents. It can involve agents planning for a common goal, an agent coordinating the plans (plan merging) or planning of others, or agents refining their own plans while negotiating over tasks or resources. The topic also involves how agents can do this in real time while executing plans (distributed continual planning). Multiagent scheduling differs from multiagent planning the same way planning and scheduling differ: in scheduling often the tasks that need to be performed are already decided, and in practice, scheduling tends to focus on algorithms for specific problem domains.</p><p>Strategies or action sequences are typically executed by intelligent agents, autonomous robots and unmanned vehicles. Unlike classical control and classification problems, the solutions are complex and must be discovered and optimized in multidimensional space. Planning is also related to decision theory.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Programming by Demonstration",
      "definition_text":"Programming by demonstration (PBD) is a term that describes a variety of end-user programming techniques that generate code from examples provided by the user. The motivation behind Programming by Demonstration is simple and compelling \u2013 if a user knows how to perform a task on the computer, that alone should be sufficient to create a program to perform the task. It should not be necessary to learn a programming language like C++ or BASIC.\u00a0 The most simple version of Programming by Demonstration is accomplished by Macro Recorders which provide users with a way to record their actions.\u00a0 The user issues the \u201cRecord\u201d command, performs a series of actions, and then issues the \u201cStop\u201d command.",
      "definition_html":"<p><b>Programming by Demonstration</b><br/>\nProgramming by demonstration (PBD) is a term that describes a variety of end-user programming techniques that generate code from examples provided by the user. The motivation behind Programming by Demonstration is simple and compelling \u2013 if a user knows how to perform a task on the computer, that alone should be sufficient to create a program to perform the task. It should not be necessary to learn a programming language like C++ or BASIC.\u00a0 The most simple version of Programming by Demonstration is accomplished by Macro Recorders which provide users with a way to record their actions.\u00a0 The user issues the \u201cRecord\u201d command, performs a series of actions, and then issues the \u201cStop\u201d command.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Prototyping",
      "definition_text":"Prototyping is an important step in the development of a practical artificial intelligence application. An AI software prototype is usually a working piece of software that performs a limited set of the functions that the software designer envisages will be required by the user. It is used to convey to the users a clear picture of what is being developed to ensure that the software will serve the intended picture. An AI prototype, contrary to the practice with many other sorts of prototypes, is grown into the finished product, subject to changes at the request of the user. Unlike much other software, AI software cannot be subject to hard verification tests as it mirrors non-mathematical human reasoning, so the prototyping step provides necessary confirmation that the software will be \u201cgood enough\u201d for its purpose at the expected cost.",
      "definition_html":"<p><b>Prototyping</b><br/>\nPrototyping is an important step in the development of a practical artificial intelligence application. An AI software prototype is usually a working piece of software that performs a limited set of the functions that the software designer envisages will be required by the user. It is used to convey to the users a clear picture of what is being developed to ensure that the software will serve the intended picture. An AI prototype, contrary to the practice with many other sorts of prototypes, is grown into the finished product, subject to changes at the request of the user. Unlike much other software, AI software cannot be subject to hard verification tests as it mirrors non-mathematical human reasoning, so the prototyping step provides necessary confirmation that the software will be \u201cgood enough\u201d for its purpose at the expected cost.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Python",
      "definition_text":"Python is a high-level programming language designed to be easy to read and simple to implement. It is open source, which means it is free to use, even for commercial applications. Python can run on Mac, Windows, and Unix systems and has also been ported to Java and .NET virtual machines. ",
      "definition_html":"<p><b>Python</b><br/>\nPython is a high-level programming language designed to be easy to read and simple to implement. It is open source, which means it is free to use, even for commercial applications. Python can run on Mac, Windows, and Unix systems and has also been ported to Java and .NET virtual machines. </p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Qualitative Reasoning",
      "definition_text":"Inexact reasoning, the opposite of quantitative reasoning . Also see Commonsense Reasoning.Recurrent neural network (RNN) A type of neural network that makes sense of sequential information and recognizes patterns, and creates outputs based on those calculations.",
      "definition_html":"<p><b>Qualitative Reasoning</b><br/>\nInexact reasoning, the opposite of quantitative reasoning . Also see <a href=\"https://www.stottlerhenke.com/features/glossary/#C\" rel=\"noopener\" target=\"_blank\">Commonsense Reasoning</a>.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p><p><strong>Recurrent neural network (RNN)<br/>\n</strong>A type of neural network that makes sense of sequential information and recognizes patterns, and creates outputs based on those calculations.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Relevance Feedback",
      "definition_text":"Relevance feedback methods are used in information retrieval systems to improve the results produced from a particular query by modifying the query based on the user\u2019s reaction to the initial retrieved documents.\u00a0 Specifically, the user\u2019s judgments of the relevance or non-relevance of some of the documents retrieved are used to add new terms to the query and to reweight query terms.\u00a0 For example, if all the documents that the user judges as relevant contain a particular term, then that term may be a good one to add to the original query.",
      "definition_html":"<p><a name=\"relevance feedback\"></a><b>Relevance Feedback</b><br/>\nRelevance feedback methods are used in information retrieval systems to improve the results produced from a particular query by modifying the query based on the user\u2019s reaction to the initial retrieved documents.\u00a0 Specifically, the user\u2019s judgments of the relevance or non-relevance of some of the documents retrieved are used to add new terms to the query and to reweight query terms.\u00a0 For example, if all the documents that the user judges as relevant contain a particular term, then that term may be a good one to add to the original query.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Rule-based System",
      "definition_text":"An expert system based on IF-THEN rules for representing knowledge.",
      "definition_html":"<p><a name=\"rule based system\"></a><b>Rule-based System</b><br/>\nAn <a href=\"https://www.stottlerhenke.com/features/glossary/#E\" rel=\"noopener\" target=\"_blank\">expert system</a> based on IF-THEN rules for representing knowledge.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Signal Filtering",
      "definition_text":"Signal filtering is a techniques for removing the noise or static from a signal so the clear or underlying signal remains. This is a conventional technique commonly used by electrical engineers and others.",
      "definition_html":"<p><a name=\"signal filtering\"></a><b>Signal Filtering</b><br/>\nSignal filtering is a techniques for removing the noise or static from a signal so the clear or underlying signal remains. This is a conventional technique commonly used by electrical engineers and others.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Simulated Annealing",
      "definition_text":"Simulated annealing is an optimization method based on an analogy with the physical process of toughening alloys, such as steel, called annealing. Annealing involves heating an alloy and cooling it slowly to increase its toughness. In simulated annealing, an artificial \u201ctemperature\u201d is used to control the optimization process, of finding the overall maximum or minimum of a function. As cooling a metal slowly allows the atoms time to move to the optimum positions for toughness, giving time to look for a solution in simulated annealing permits a successful search for the global optimum and avoids being trapped at a local suboptima. It is used, for example, to optimize routing of planes by airlines for most efficient use of the fleet. It was devised by S. Kirkpatrick.",
      "definition_html":"<p><a name=\"simulated annealing\"></a><b>Simulated Annealing</b><br/>\nSimulated annealing is an optimization method based on an analogy with the physical process of toughening alloys, such as steel, called annealing. Annealing involves heating an alloy and cooling it slowly to increase its toughness. In simulated annealing, an artificial \u201ctemperature\u201d is used to control the optimization process, of finding the overall maximum or minimum of a function. As cooling a metal slowly allows the atoms time to move to the optimum positions for toughness, giving time to look for a solution in simulated annealing permits a successful search for the global optimum and avoids being trapped at a local suboptima. It is used, for example, to optimize routing of planes by airlines for most efficient use of the fleet. It was devised by S. Kirkpatrick.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Simulation",
      "definition_text":"A simulation is a system that is constructed to work, in some ways, analogously to another system of interest. The constructed system is usually made simpler than the original system so that only the aspects of interest are mirrored. Simulations are commonly used to learn more about the behavior of the original system, when the original system is not available for manipulation. It may not be available because of cost or safety reasons, or it may not be built yet and the purpose of learning about it is to design it better. If the purpose of learning is to train novices, then cost, safety, or convenience are likely to be the reasons to work on a simulated system. The simulation may be a computer simulation (perhaps a realistic one of a nuclear power station\u2019s control room, or a mathematical one such as a spreadsheet for \u201cwhat-if\u201d analysis of a company\u2019s business); or it may be a small-scale physical model (such as a small-scale bridge, or a pilot chemical plant).",
      "definition_html":"<p><b>Simulation</b><br/>\nA simulation is a system that is constructed to work, in some ways, analogously to another system of interest. The constructed system is usually made simpler than the original system so that only the aspects of interest are mirrored. Simulations are commonly used to learn more about the behavior of the original system, when the original system is not available for manipulation. It may not be available because of cost or safety reasons, or it may not be built yet and the purpose of learning about it is to design it better. If the purpose of learning is to train novices, then cost, safety, or convenience are likely to be the reasons to work on a simulated system. The simulation may be a computer simulation (perhaps a realistic one of a nuclear power station\u2019s control room, or a mathematical one such as a spreadsheet for \u201cwhat-if\u201d analysis of a company\u2019s business); or it may be a small-scale physical model (such as a small-scale bridge, or a pilot chemical plant).</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Statistical Learning",
      "definition_text":"Statistical learning techniques attempt to construct statistical models of an entity based on surface features drawn from a large corpus of examples.\u00a0 These techniques generally operate independent of specific domain knowledge, training instead on a set of features that characterize an input example.\u00a0 In the domain of natural language, for example, statistics of language usage (e.g., word trigram frequencies) are compiled from large collections of input documents and are used to categorize or make predictions about new text.\u00a0 Systems trained through statistical learning have the advantage of not requiring human-engineered domain modeling.\u00a0 This strong dependence on the input corpus has the disadvantage of limiting their applicability to new domains, requiring access to large corpora of examples and a retraining step for each domain of interest.\u00a0 Statistical techniques thus tend to have high precision within a domain at the cost of generality across domains.",
      "definition_html":"<p><a name=\"statistical learning\"></a><b>Statistical Learning</b><br/>\nStatistical learning techniques attempt to construct statistical models of an entity based on surface features drawn from a large corpus of examples.\u00a0 These techniques generally operate independent of specific domain knowledge, training instead on a set of features that characterize an input example.\u00a0 In the domain of natural language, for example, statistics of language usage (e.g., word trigram frequencies) are compiled from large collections of input documents and are used to categorize or make predictions about new text.\u00a0 Systems trained through statistical learning have the advantage of not requiring human-engineered domain modeling.\u00a0 This strong dependence on the input corpus has the disadvantage of limiting their applicability to new domains, requiring access to large corpora of examples and a retraining step for each domain of interest.\u00a0 Statistical techniques thus tend to have high precision within a domain at the cost of generality across domains.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Structural Pattern Recognition",
      "definition_text":"It is a form of pattern recognition, in which each object can be represented by a variable-cardinality set of symbolic, nominal features. This allows for representing pattern structures, taking into account more complex interrelationships between attributes than is possible in the case of flat, numerical feature vectors of fixed dimensionality, that are used in statistical classification.One way to present such structure is by means of a strings of symbols from a formal language. In this case the differences in the structures of the classes are encoded as different grammars. A second way to represent relations are graphs, where nodes are connected if corresponding subpatterns are related. Structural methods provide description of items, which may useful on its own right. For example, syntactic pattern recognition can be used to find out what object are present in an image. Furthermore, structural methods are strong in finding a correspondence mapping between two images of an object. Under natural conditions, corresponding features will be in different positions and/or may be occluded in the two images, due to camera-attitude and perspective, as in face recognition. A graph-matching algorithm will yield the optimal correspondence.",
      "definition_html":"<p><b>Structural Pattern Recognition</b><br/>\nIt is a form of pattern recognition, in which each object can be represented by a variable-cardinality set of symbolic, nominal features. This allows for representing pattern structures, taking into account more complex interrelationships between attributes than is possible in the case of flat, numerical feature vectors of fixed dimensionality, that are used in statistical classification.</p><p>One way to present such structure is by means of a strings of symbols from a formal language. In this case the differences in the structures of the classes are encoded as different grammars. A second way to represent relations are graphs, where nodes are connected if corresponding subpatterns are related. Structural methods provide description of items, which may useful on its own right. For example, syntactic pattern recognition can be used to find out what object are present in an image. Furthermore, structural methods are strong in finding a correspondence mapping between two images of an object. Under natural conditions, corresponding features will be in different positions and/or may be occluded in the two images, due to camera-attitude and perspective, as in face recognition. A graph-matching algorithm will yield the optimal correspondence.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Supervised Learning",
      "definition_text":"Organization and training of a neural network by a combination of repeated presentation of patterns, such as alphanumeric characters, and required knowledge. An example of required knowledge is the ability to recognize the difference between two similar characters such as O and Q. Synonym: learning with a teacher. Contrast with self-organized system; unsupervised learning.",
      "definition_html":"<p><a name=\"Supervised learning\"></a><b>Supervised Learning</b><br/>\nOrganization and training of a neural network by a combination of repeated presentation of patterns, such as alphanumeric characters, and required knowledge. An example of required knowledge is the ability to recognize the difference between two similar characters such as O and Q. Synonym: learning with a teacher. Contrast with self-organized system; unsupervised learning.</p><p><a href=\"#top\"><img alt=\"divider top\" class=\"alignright size-full wp-image-84737\" height=\"10\" src=\"https://www.stottlerhenke.com/wp-content/uploads/2014/02/divider-top.png\" width=\"683\"/></a></p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Tactical Diagrams",
      "definition_text":"Tactical Diagrams Tactical diagrams increase, reduce, maintain specific levels related to the objectives. Tactics can be viewed as more concrete strategies of smaller scope and greater specificity",
      "definition_html":"<p><b>Tactical Diagrams<br/>\n</b>Tactical diagrams increase, reduce, maintain specific levels related to the objectives. Tactics can be viewed as more concrete strategies of smaller scope and greater specificity</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Task Transition Diagrams",
      "definition_text":"The state of an activity instance changes when a significant step in the execution of the activity instance occurs. The states and the state transitions depend on the type of activity so they are important in the life cycle of basic activities. In contrast to the state diagrams for process instances, activity end states are not explicitly exposed. The life cycle of an activity depends on the enclosing process and activities are always deleted with the process instance.",
      "definition_html":"<p><b>Task Transition Diagrams</b><br/>\nThe state of an activity instance changes when a significant step in the execution of the activity instance occurs. The states and the state transitions depend on the type of activity so they are important in the life cycle of basic activities. In contrast to the state diagrams for process instances, activity end states are not explicitly exposed. The life cycle of an activity depends on the enclosing process and activities are always deleted with the process instance.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Time Series Analysis",
      "definition_text":"A time series is a sequence of observations of a particular variable over time (e.g., the daily closing level of Dow Jones Industrial Average).\u00a0 There are a wide range of statistical and temporal data mining techniques for analyzing such data.\u00a0 Two common uses for this type of analysis are forecasting future events (i.e., time series prediction) and searching a database of previous patterns for sequences that are similar to a particular pattern of interest. This is a conventional statistical technique.",
      "definition_html":"<p><a name=\"time series analysis\"></a><b>Time Series Analysis</b><br/>\nA time series is a sequence of observations of a particular variable over time (e.g., the daily closing level of Dow Jones Industrial Average).\u00a0 There are a wide range of statistical and temporal data mining techniques for analyzing such data.\u00a0 Two common uses for this type of analysis are forecasting future events (i.e., time series prediction) and searching a database of previous patterns for sequences that are similar to a particular pattern of interest. This is a conventional statistical technique.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Toy System",
      "definition_text":"Small-scale implementation of a concept or model useful for testing a few main features, but unsuitable for complex or real-world problems. For example, a toy rule-based system may contain a few rules to construct an arch out of a number of pre-selected wooden blocks. It is a useful academic approach to unsolved problems. It is not employed in producing practical, real-world solutions.",
      "definition_html":"<p><b>Toy System</b><br/>\nSmall-scale implementation of a concept or model useful for testing a few main features, but unsuitable for complex or real-world problems. For example, a toy rule-based system may contain a few rules to construct an arch out of a number of pre-selected wooden blocks. It is a useful academic approach to unsolved problems. It is not employed in producing practical, real-world solutions.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Truth Maintenance Systems",
      "definition_text":"Many conventional reasoning systems assume that reasoning is the process of deriving new knowledge from old, i.e., the number of things a person or intelligent software believes increases without retracting any existing knowledge, since known truths never change under this form of logic. This is called monotonic logic. However, this view does not accurately capture the way in which humans think since our actions constantly change what we believe to be true. Humans reason nonmonotonically, which means they reason based on incomplete or uncertain information, common sense, default values, changing conditions, and other assertions subject to retraction or revision.  Truth maintenance systems seek to emulate the human reasoning process by recording reasons for our beliefs and reasons for retraction or revision of those beliefs, as well as the beliefs themselves. They are particularly useful in keeping track of goals, sub-goals, decisions, tasks, assignments, and design documents on complex projects (such as the design, construction, and testing of a major commercial aircraft) being undertaken by large numbers of people who may work for different organizations in different parts of the world. This is the sort of situation where a decision may be reversed, and all the people who may have to react to that change may not be properly informed. Project management software using TMS can help avoid design problems or wasted effort that can result from this sort of oversight.  Also known as Reason Maintenance Systems.",
      "definition_html":"<p><a name=\"Truth Maintenance\"></a><b>Truth Maintenance Systems</b><br />\nMany conventional reasoning systems assume that reasoning is the process of deriving new knowledge from old, i.e., the number of things a person or intelligent software believes increases without retracting any existing knowledge, since known truths never change under this form of logic. This is called monotonic logic. However, this view does not accurately capture the way in which humans think since our actions constantly change what we believe to be true. Humans reason nonmonotonically, which means they reason based on incomplete or uncertain information, common sense, default values, changing conditions, and other assertions subject to retraction or revision.  Truth maintenance systems seek to emulate the human reasoning process by recording reasons for our beliefs and reasons for retraction or revision of those beliefs, as well as the beliefs themselves. They are particularly useful in keeping track of goals, sub-goals, decisions, tasks, assignments, and design documents on complex projects (such as the design, construction, and testing of a major commercial aircraft) being undertaken by large numbers of people who may work for different organizations in different parts of the world. This is the sort of situation where a decision may be reversed, and all the people who may have to react to that change may not be properly informed. Project management software using TMS can help avoid design problems or wasted effort that can result from this sort of oversight.  Also known as Reason Maintenance Systems.</p>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Unsupervised learning",
      "definition_text":"A type of machine learning algorithm used to draw inferences from datasets consisting of input data without labeled responses. The most common unsupervised learning method is cluster analysis.",
      "definition_html":"<div><strong>Unsupervised learning</strong><br />\nA type of machine learning algorithm used to draw inferences from datasets consisting of input data without labeled responses. The most common unsupervised learning method is cluster analysis.</div>",
      "link":"https://www.stottlerhenke.com/artificial-intelligence/glossary/",
      "source":"Stottler Henke Artificial Intelligence Glossary"
   },
   {
      "terms":"Abductive logic programming",
      "definition_text":"Abductive logic programming \u2013 Abductive logic programming (ALP) is a high-level knowledge-representation framework that can be used to solve problems declaratively based on abductive reasoning. It extends normal logic programming by allowing some predicates to be incompletely defined, declared as abducible predicates.",
      "definition_html":[
         "<li><a href=\"/wiki/Abductive_logic_programming\" title=\"Abductive logic programming\">Abductive logic programming</a> \u2013 Abductive logic programming (ALP) is a high-level knowledge-representation framework that can be used to solve problems declaratively based on abductive reasoning. It extends normal logic programming by allowing some predicates to be incompletely defined, declared as abducible predicates.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Abductive reasoning",
      "definition_text":"Abductive reasoning \u2013 (also called abduction,[1] abductive inference,[1] or retroduction[2]) is a form of logical inference which starts with an observation or set of observations then seeks to find the simplest and most likely explanation. This process, unlike deductive reasoning, yields a plausible conclusion but does not positively verify it.",
      "definition_html":[
         "<li><a href=\"/wiki/Abductive_reasoning\" title=\"Abductive reasoning\">Abductive reasoning</a> \u2013 (also called abduction,<sup class=\"reference\" id=\"cite_ref-Josephson_1-0\"><a href=\"#cite_note-Josephson-1\">[1]</a></sup> abductive inference,<sup class=\"reference\" id=\"cite_ref-Josephson_1-1\"><a href=\"#cite_note-Josephson-1\">[1]</a></sup> or retroduction<sup class=\"reference\" id=\"cite_ref-2\"><a href=\"#cite_note-2\">[2]</a></sup>) is a form of <a class=\"mw-redirect\" href=\"/wiki/Logical_inference\" title=\"Logical inference\">logical inference</a> which starts with an observation or set of observations then seeks to find the simplest and most likely explanation. This process, unlike <a href=\"/wiki/Deductive_reasoning\" title=\"Deductive reasoning\">deductive reasoning</a>, yields a plausible conclusion but does not <a href=\"/wiki/Logical_positivism\" title=\"Logical positivism\">positively verify</a> it.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Abstract data type",
      "definition_text":"Abstract data type \u2013 is a mathematical model for data types, where a data type is defined by its behavior (semantics) from the point of view of a user of the data, specifically in terms of possible values, possible operations on data of this type, and the behavior of these operations.",
      "definition_html":[
         "<li><a href=\"/wiki/Abstract_data_type\" title=\"Abstract data type\">Abstract data type</a> \u2013 is a <a href=\"/wiki/Mathematical_model\" title=\"Mathematical model\">mathematical model</a> for <a href=\"/wiki/Data_type\" title=\"Data type\">data types</a>, where a data type is defined by its behavior (<a href=\"/wiki/Semantics_(computer_science)\" title=\"Semantics (computer science)\">semantics</a>) from the point of view of a <i>user</i> of the data, specifically in terms of possible values, possible operations on data of this type, and the behavior of these operations.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Abstraction",
      "definition_text":"Abstraction \u2013 is the process of removing physical, spatial, or temporal details[3] or attributes in the study of objects or systems in order to more closely attend to other details of interest[4]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Abstraction_(software_engineering)\" title=\"Abstraction (software engineering)\">Abstraction</a> \u2013 is the process of removing physical, spatial, or temporal details<sup class=\"reference\" id=\"cite_ref-3\"><a href=\"#cite_note-3\">[3]</a></sup> or <a href=\"/wiki/Attribute_(computing)\" title=\"Attribute (computing)\">attributes</a> in the study of objects or <a href=\"/wiki/System\" title=\"System\">systems</a> in order to more closely attend to other details of interest<sup class=\"reference\" id=\"cite_ref-4\"><a href=\"#cite_note-4\">[4]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Accelerating change",
      "definition_text":"Accelerating change \u2013 is a perceived increase in the rate of technological change throughout history, which may suggest faster and more profound change in the future and may or may not be accompanied by equally profound social and cultural change.",
      "definition_html":[
         "<li><a href=\"/wiki/Accelerating_change\" title=\"Accelerating change\">Accelerating change</a> \u2013 is a perceived increase in the rate of <a href=\"/wiki/Technological_change\" title=\"Technological change\">technological change</a> throughout history, which may suggest faster and more profound change in the future and may or may not be accompanied by equally profound social and cultural change.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Action language",
      "definition_text":"Action language \u2013 is a language for specifying state transition systems, and is commonly used to create formal models of the effects of actions on the world.[5] Action languages are commonly used in the artificial intelligence and robotics domains, where they describe how actions affect the states of systems over time, and may be used for automated planning.",
      "definition_html":[
         "<li><a href=\"/wiki/Action_language\" title=\"Action language\">Action language</a> \u2013 is a language for specifying <a class=\"mw-redirect\" href=\"/wiki/State_transition_system\" title=\"State transition system\">state transition systems</a>, and is commonly used to create <a class=\"mw-redirect\" href=\"/wiki/Formal_model\" title=\"Formal model\">formal models</a> of the effects of actions on the world.<sup class=\"reference\" id=\"cite_ref-5\"><a href=\"#cite_note-5\">[5]</a></sup> Action languages are commonly used in the <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> and <a href=\"/wiki/Robotics\" title=\"Robotics\">robotics</a> domains, where they describe how actions affect the states of systems over time, and may be used for <a class=\"mw-redirect\" href=\"/wiki/Automated_planning\" title=\"Automated planning\">automated planning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Action model learning",
      "definition_text":"Action model learning \u2013 is an area of machine learning concerned with creation and modification of software agent's knowledge about effects and preconditions of the actions that can be executed within its environment. This knowledge is usually represented in logic-based action description language and used as the input for automated planners.",
      "definition_html":[
         "<li><a href=\"/wiki/Action_model_learning\" title=\"Action model learning\">Action model learning</a> \u2013 is an area of machine learning concerned with creation and modification of software agent's knowledge about effects and preconditions of the actions that can be executed within its environment. This knowledge is usually represented in logic-based action description language and used as the input for automated planners.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Action selection",
      "definition_text":"Action selection \u2013 is a way of characterizing the most basic problem of intelligent systems: what to do next. In artificial intelligence and computational cognitive science, \"the action selection problem\" is typically associated with intelligent agents and animats\u2014artificial systems that exhibit complex behaviour in an agent environment.",
      "definition_html":[
         "<li><a href=\"/wiki/Action_selection\" title=\"Action selection\">Action selection</a> \u2013 is a way of characterizing the most basic problem of intelligent systems: what to do next. In artificial intelligence and computational cognitive science, \"the action selection problem\" is typically associated with intelligent agents and animats\u2014artificial systems that exhibit complex behaviour in an agent environment.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Activation function",
      "definition_text":"Activation function \u2013 In artificial neural networks, the activation function of a node defines the output of that node given an input or set of inputs.",
      "definition_html":[
         "<li><a href=\"/wiki/Activation_function\" title=\"Activation function\">Activation function</a> \u2013 In <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a>, the activation function of a node defines the output of that node given an input or set of inputs.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Adaptive algorithm",
      "definition_text":"Adaptive algorithm \u2013 an algorithm that changes its behavior at the time it is run, based on a priori defined reward mechanism or criterion.",
      "definition_html":[
         "<li><a href=\"/wiki/Adaptive_algorithm\" title=\"Adaptive algorithm\">Adaptive algorithm</a> \u2013 an algorithm that changes its behavior at the time it is run, based on <i>a priori</i> defined reward mechanism or criterion.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Adaptive neuro fuzzy inference system",
      "definition_text":"Adaptive neuro fuzzy inference system \u2013 or adaptive network-based fuzzy inference system (ANFIS) is a kind of artificial neural network that is based on Takagi\u2013Sugeno fuzzy inference system. The technique was developed in the early 1990s.[6][7] Since it integrates both neural networks and fuzzy logic principles, it has potential to capture the benefits of both in a single framework. Its inference system corresponds to a set of fuzzy IF\u2013THEN rules that have learning capability to approximate nonlinear functions.[8] Hence, ANFIS is considered to be a universal estimator.[9] For using the ANFIS in a more efficient and optimal way, one can use the best parameters obtained by genetic algorithm.[10][11]",
      "definition_html":[
         "<li><a href=\"/wiki/Adaptive_neuro_fuzzy_inference_system\" title=\"Adaptive neuro fuzzy inference system\">Adaptive neuro fuzzy inference system</a> \u2013 or adaptive network-based fuzzy inference system (ANFIS) is a kind of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> that is based on Takagi\u2013Sugeno fuzzy <a class=\"mw-redirect\" href=\"/wiki/Inference_system\" title=\"Inference system\">inference system</a>. The technique was developed in the early 1990s.<sup class=\"reference\" id=\"cite_ref-6\"><a href=\"#cite_note-6\">[6]</a></sup><sup class=\"reference\" id=\"cite_ref-7\"><a href=\"#cite_note-7\">[7]</a></sup> Since it integrates both neural networks and <a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">fuzzy logic</a> principles, it has potential to capture the benefits of both in a single <a class=\"extiw\" href=\"https://en.wiktionary.org/wiki/framework\" title=\"wikt:framework\">framework</a>. Its inference system corresponds to a set of fuzzy <a class=\"mw-redirect\" href=\"/wiki/Conditional_(programming)\" title=\"Conditional (programming)\">IF\u2013THEN rules</a> that have learning capability to approximate nonlinear functions.<sup class=\"reference\" id=\"cite_ref-8\"><a href=\"#cite_note-8\">[8]</a></sup> Hence, ANFIS is considered to be a universal estimator.<sup class=\"reference\" id=\"cite_ref-9\"><a href=\"#cite_note-9\">[9]</a></sup> For using the ANFIS in a more efficient and optimal way, one can use the best parameters obtained by genetic algorithm.<sup class=\"reference\" id=\"cite_ref-10\"><a href=\"#cite_note-10\">[10]</a></sup><sup class=\"reference\" id=\"cite_ref-11\"><a href=\"#cite_note-11\">[11]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Admissible heuristic",
      "definition_text":"Admissible heuristic \u2013 In computer science, specifically in algorithms related to pathfinding, a heuristic function is said to be admissible if it never overestimates the cost of reaching the goal, i.e. the cost it estimates to reach the goal is not higher than the lowest possible cost from the current point in the path.[12]",
      "definition_html":[
         "<li><a href=\"/wiki/Admissible_heuristic\" title=\"Admissible heuristic\">Admissible heuristic</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, specifically in <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> related to <a href=\"/wiki/Pathfinding\" title=\"Pathfinding\">pathfinding</a>, a <a class=\"mw-redirect\" href=\"/wiki/Heuristic_function\" title=\"Heuristic function\">heuristic function</a> is said to be admissible if it never overestimates the cost of reaching the goal, i.e. the cost it estimates to reach the goal is not higher than the lowest possible cost from the current point in the path.<sup class=\"reference\" id=\"cite_ref-12\"><a href=\"#cite_note-12\">[12]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Affective computing",
      "definition_text":"Affective computing \u2013  (sometimes called artificial emotional intelligence, or emotion AI)[13] is the study and development of systems and devices that can recognize, interpret, process, and simulate human affects. It is an interdisciplinary field spanning computer science, psychology, and cognitive science.[14]",
      "definition_html":[
         "<li><a href=\"/wiki/Affective_computing\" title=\"Affective computing\">Affective computing</a> \u2013  (sometimes called artificial emotional intelligence, or emotion AI)<sup class=\"reference\" id=\"cite_ref-13\"><a href=\"#cite_note-13\">[13]</a></sup> is the study and development of systems and devices that can recognize, interpret, process, and simulate human <a href=\"/wiki/Affect_(psychology)\" title=\"Affect (psychology)\">affects</a>. It is an interdisciplinary field spanning <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, <a href=\"/wiki/Psychology\" title=\"Psychology\">psychology</a>, and <a href=\"/wiki/Cognitive_science\" title=\"Cognitive science\">cognitive science</a>.<sup class=\"reference\" id=\"cite_ref-TaoTan_14-0\"><a href=\"#cite_note-TaoTan-14\">[14]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Agent architecture",
      "definition_text":"Agent architecture \u2013 in computer science is a blueprint for software agents and intelligent control systems, depicting the arrangement of components. The architectures implemented by intelligent agents are referred to as cognitive architectures.[15]",
      "definition_html":[
         "<li><a href=\"/wiki/Agent_architecture\" title=\"Agent architecture\">Agent architecture</a> \u2013 in <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> is a <a href=\"/wiki/Blueprint\" title=\"Blueprint\">blueprint</a> for <a href=\"/wiki/Software_agent\" title=\"Software agent\">software agents</a> and <a href=\"/wiki/Intelligent_control\" title=\"Intelligent control\">intelligent control</a> systems, depicting the arrangement of components. The architectures implemented by <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agents</a> are referred to as <a href=\"/wiki/Cognitive_architecture\" title=\"Cognitive architecture\">cognitive architectures</a>.<sup class=\"reference\" id=\"cite_ref-15\"><a href=\"#cite_note-15\">[15]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"AI accelerator",
      "definition_text":"AI accelerator \u2013 is a class of microprocessor[16] or computer system[17] designed as hardware acceleration for artificial intelligence applications, especially artificial neural networks, machine vision and machine learning.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/AI_accelerator_(computer_hardware)\" title=\"AI accelerator (computer hardware)\">AI accelerator</a> \u2013 is a class of <a href=\"/wiki/Microprocessor\" title=\"Microprocessor\">microprocessor</a><sup class=\"reference\" id=\"cite_ref-16\"><a href=\"#cite_note-16\">[16]</a></sup> or computer system<sup class=\"reference\" id=\"cite_ref-17\"><a href=\"#cite_note-17\">[17]</a></sup> designed as <a href=\"/wiki/Hardware_acceleration\" title=\"Hardware acceleration\">hardware acceleration</a> for <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> applications, especially <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a>, <a href=\"/wiki/Machine_vision\" title=\"Machine vision\">machine vision</a> and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"AI complete",
      "definition_text":"AI-complete \u2013 In the field of artificial intelligence, the most difficult problems are informally known as AI-complete or AI-hard, implying that the difficulty of these computational problems is equivalent to that of solving the central artificial intelligence problem\u2014making computers as intelligent as people, or strong AI.[18]  To call a problem AI-complete reflects an attitude that it would not be solved by a simple specific algorithm.",
      "definition_html":[
         "<li><a href=\"/wiki/AI-complete\" title=\"AI-complete\">AI-complete</a> \u2013 In the field of artificial intelligence, the most difficult problems are informally known as AI-complete or AI-hard, implying that the difficulty of these computational problems is equivalent to that of solving the central artificial intelligence problem\u2014making computers as intelligent as people, or <a href=\"/wiki/Artificial_general_intelligence\" title=\"Artificial general intelligence\">strong AI</a>.<sup class=\"reference\" id=\"cite_ref-Shapiro92_18-0\"><a href=\"#cite_note-Shapiro92-18\">[18]</a></sup>  To call a problem AI-complete reflects an attitude that it would not be solved by a simple specific algorithm.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Algorithm",
      "definition_text":"Algorithm \u2013 is an unambiguous specification of how to solve a class of problems.  Algorithms can perform calculation, data processing and automated reasoning tasks.",
      "definition_html":[
         "<li><a href=\"/wiki/Algorithm\" title=\"Algorithm\">Algorithm</a> \u2013 is an unambiguous specification of how to solve a class of problems.  Algorithms can perform calculation, data processing and automated reasoning tasks.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Algorithmic efficiency",
      "definition_text":"Algorithmic efficiency \u2013 is a property of an algorithm which relates to the number of computational resources used by the algorithm. An algorithm must be analyzed to determine its resource usage, and the efficiency of an algorithm can be measured based on usage of different resources. Algorithmic efficiency can be thought of as analogous to engineering productivity for a repeating or continuous process.",
      "definition_html":[
         "<li><a href=\"/wiki/Algorithmic_efficiency\" title=\"Algorithmic efficiency\">Algorithmic efficiency</a> \u2013 is a property of an <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a> which relates to the number of <a href=\"/wiki/Computational_resource\" title=\"Computational resource\">computational resources</a> used by the algorithm. An algorithm must be <a href=\"/wiki/Analysis_of_algorithms\" title=\"Analysis of algorithms\">analyzed</a> to determine its resource usage, and the efficiency of an algorithm can be measured based on usage of different resources. Algorithmic efficiency can be thought of as analogous to engineering <a href=\"/wiki/Productivity\" title=\"Productivity\">productivity</a> for a repeating or continuous process.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Algorithmic probability",
      "definition_text":"Algorithmic probability \u2013 In algorithmic information theory, algorithmic probability, also known as Solomonoff probability, is a mathematical method of assigning a prior probability to a given observation. It was invented by Ray Solomonoff in the 1960s.[19]",
      "definition_html":[
         "<li><a href=\"/wiki/Algorithmic_probability\" title=\"Algorithmic probability\">Algorithmic probability</a> \u2013 In <a href=\"/wiki/Algorithmic_information_theory\" title=\"Algorithmic information theory\">algorithmic information theory</a>, algorithmic probability, also known as Solomonoff probability, is a mathematical method of assigning a prior <a href=\"/wiki/Probability\" title=\"Probability\">probability</a> to a given observation. It was invented by <a href=\"/wiki/Ray_Solomonoff\" title=\"Ray Solomonoff\">Ray Solomonoff</a> in the 1960s.<sup class=\"reference\" id=\"cite_ref-19\"><a href=\"#cite_note-19\">[19]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"AlphaGo",
      "definition_text":"AlphaGo \u2013 is a computer program that plays the board game Go.[20] It was developed by Alphabet Inc.'s Google DeepMind in London. AlphaGo has several versions including AlphaGo Zero, AlphaGo Master, AlphaGo Lee, etc.[21] In October 2015, AlphaGo became the first computer Go program to beat a human professional Go player without handicaps on a full-sized 19\u00d719 board.[22][23]",
      "definition_html":[
         "<li><a href=\"/wiki/AlphaGo\" title=\"AlphaGo\">AlphaGo</a> \u2013 is a <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer program</a> that plays the <a href=\"/wiki/Board_game\" title=\"Board game\">board game</a> <a href=\"/wiki/Go_(game)\" title=\"Go (game)\">Go</a>.<sup class=\"reference\" id=\"cite_ref-20\"><a href=\"#cite_note-20\">[20]</a></sup> It was developed by <a href=\"/wiki/Alphabet_Inc.\" title=\"Alphabet Inc.\">Alphabet Inc.</a>'s <a class=\"mw-redirect\" href=\"/wiki/Google_DeepMind\" title=\"Google DeepMind\">Google DeepMind</a> in London. AlphaGo has several versions including <a href=\"/wiki/AlphaGo_Zero\" title=\"AlphaGo Zero\">AlphaGo Zero</a>, <a class=\"mw-redirect\" href=\"/wiki/AlphaGo_Master\" title=\"AlphaGo Master\">AlphaGo Master</a>, <a class=\"mw-redirect\" href=\"/wiki/AlphaGo_Lee\" title=\"AlphaGo Lee\">AlphaGo Lee</a>, etc.<sup class=\"reference\" id=\"cite_ref-21\"><a href=\"#cite_note-21\">[21]</a></sup> In October 2015, AlphaGo became the first <a href=\"/wiki/Computer_Go\" title=\"Computer Go\">computer Go</a> program to beat a human <a class=\"mw-redirect\" href=\"/wiki/Professional_Go_player\" title=\"Professional Go player\">professional Go player</a> without <a class=\"mw-redirect\" href=\"/wiki/Go_handicaps\" title=\"Go handicaps\">handicaps</a> on a full-sized 19\u00d719 board.<sup class=\"reference\" id=\"cite_ref-googlego_22-0\"><a href=\"#cite_note-googlego-22\">[22]</a></sup><sup class=\"reference\" id=\"cite_ref-bbcgo_23-0\"><a href=\"#cite_note-bbcgo-23\">[23]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Ambient intelligence",
      "definition_text":"Ambient intelligence \u2013  (AmI) refers to electronic environments that are sensitive and responsive to the presence of people.",
      "definition_html":[
         "<li><a href=\"/wiki/Ambient_intelligence\" title=\"Ambient intelligence\">Ambient intelligence</a> \u2013  (AmI) refers to electronic environments that are sensitive and responsive to the presence of people.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Analysis of algorithms",
      "definition_text":"Analysis of algorithms \u2013 is the determination of the computational complexity of algorithms, that is the amount of time, storage and/or other resources necessary to execute them. Usually, this involves determining a function that relates the length of an algorithm's input to the number of steps it takes (its time complexity) or the number of storage locations it uses (its space complexity).",
      "definition_html":[
         "<li><a href=\"/wiki/Analysis_of_algorithms\" title=\"Analysis of algorithms\">Analysis of algorithms</a> \u2013 is the determination of the <a href=\"/wiki/Computational_complexity\" title=\"Computational complexity\">computational complexity</a> of algorithms, that is the amount of time, storage and/or other resources necessary to <a href=\"/wiki/Computation\" title=\"Computation\">execute them</a>. Usually, this involves determining a <a href=\"/wiki/Function_(mathematics)\" title=\"Function (mathematics)\">function</a> that relates the length of an algorithm's input to the number of steps it takes (its <a href=\"/wiki/Time_complexity\" title=\"Time complexity\">time complexity</a>) or the number of storage locations it uses (its <a href=\"/wiki/Space_complexity\" title=\"Space complexity\">space complexity</a>).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Analytics",
      "definition_text":"Analytics \u2013 the discovery, interpretation, and communication of meaningful patterns in data.",
      "definition_html":[
         "<li><a href=\"/wiki/Analytics\" title=\"Analytics\">Analytics</a> \u2013 the discovery, interpretation, and communication of meaningful patterns in data.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Answer set programming",
      "definition_text":"Answer set programming \u2013 (ASP) is a form of declarative programming oriented towards difficult (primarily NP-hard) search problems.  It is based on the stable model (answer set) semantics of logic programming.  In ASP, search problems are reduced to computing stable models, and answer set solvers\u2014programs for generating stable models\u2014are used to perform search.",
      "definition_html":[
         "<li><a href=\"/wiki/Answer_set_programming\" title=\"Answer set programming\">Answer set programming</a> \u2013 (ASP) is a form of <a href=\"/wiki/Declarative_programming\" title=\"Declarative programming\">declarative programming</a> oriented towards difficult (primarily <a class=\"mw-redirect\" href=\"/wiki/NP-hard\" title=\"NP-hard\">NP-hard</a>) <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search problems</a>.  It is based on the <a href=\"/wiki/Stable_model_semantics\" title=\"Stable model semantics\">stable model</a> (answer set) semantics of <a href=\"/wiki/Logic_programming\" title=\"Logic programming\">logic programming</a>.  In ASP, search problems are reduced to computing stable models, and <i>answer set solvers</i>\u2014programs for generating stable models\u2014are used to perform search.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Anytime algorithm",
      "definition_text":"Anytime algorithm \u2013 an algorithm that can return a valid solution to a problem even if it is interrupted before it ends.",
      "definition_html":[
         "<li><a href=\"/wiki/Anytime_algorithm\" title=\"Anytime algorithm\">Anytime algorithm</a> \u2013 an algorithm that can return a valid solution to a problem even if it is interrupted before it ends.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Application programming interface",
      "definition_text":"Application programming interface \u2013 (API) is a set of subroutine definitions, communication protocols, and tools for building software. In general terms, it is a set of clearly defined methods of communication among various components. A good API makes it easier to develop a computer program by providing all the building blocks, which are then put together by the programmer. An API may be for a web-based system, operating system, database system, computer hardware, or software library.",
      "definition_html":[
         "<li><a href=\"/wiki/Application_programming_interface\" title=\"Application programming interface\">Application programming interface</a> \u2013 (API) is a set of subroutine definitions, <a class=\"mw-redirect\" href=\"/wiki/Communication_protocols\" title=\"Communication protocols\">communication protocols</a>, and tools for building software. In general terms, it is a set of clearly defined methods of communication among various components. A good API makes it easier to develop a <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer program</a> by providing all the building blocks, which are then put together by the <a href=\"/wiki/Programmer\" title=\"Programmer\">programmer</a>. An API may be for a web-based system, <a href=\"/wiki/Operating_system\" title=\"Operating system\">operating system</a>, <a class=\"mw-redirect\" href=\"/wiki/Database_system\" title=\"Database system\">database system</a>, computer hardware, or <a href=\"/wiki/Library_(computing)\" title=\"Library (computing)\">software library</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Approximate string matching",
      "definition_text":"Approximate string matching \u2013 (often colloquially referred to as fuzzy string searching) is the technique of finding strings that match a pattern approximately (rather than exactly). The problem of approximate string matching is typically divided into two sub-problems: finding approximate substring matches inside a given string and finding dictionary strings that match the pattern approximately.",
      "definition_html":[
         "<li><a href=\"/wiki/Approximate_string_matching\" title=\"Approximate string matching\">Approximate string matching</a> \u2013 (often colloquially referred to as fuzzy string searching) is the technique of finding <a class=\"mw-redirect\" href=\"/wiki/String_(computing)\" title=\"String (computing)\">strings</a> that match a <a href=\"/wiki/Pattern\" title=\"Pattern\">pattern</a> approximately (rather than exactly). The problem of approximate string matching is typically divided into two sub-problems: finding approximate <a href=\"/wiki/Substring\" title=\"Substring\">substring</a> matches inside a given string and finding dictionary strings that match the pattern approximately.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Approximation error",
      "definition_text":"Approximation error \u2013 The approximation error in some data is the discrepancy between an exact value and some approximation to it.",
      "definition_html":[
         "<li><a href=\"/wiki/Approximation_error\" title=\"Approximation error\">Approximation error</a> \u2013 The approximation error in some data is the discrepancy between an exact value and some approximation to it.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Argumentation framework",
      "definition_text":"Argumentation framework \u2013  or argumentation system, is a way to deal with contentious information and draw conclusions from it. In an abstract argumentation framework,[24] entry-level information is a set of abstract arguments that, for instance, represent data or a proposition. Conflicts between arguments are represented by a binary relation on the set of arguments. In concrete terms, you represent an argumentation framework with a directed graph such that the nodes are the arguments, and the arrows represent the attack relation.  There exist some extensions of the Dung's framework, like the logic-based argumentation frameworks[25] or the value-based argumentation frameworks.[26]",
      "definition_html":[
         "<li><a href=\"/wiki/Argumentation_framework\" title=\"Argumentation framework\">Argumentation framework</a> \u2013  or argumentation system, is a way to deal with contentious information and draw conclusions from it. In an abstract argumentation framework,<sup class=\"reference\" id=\"cite_ref-24\"><a href=\"#cite_note-24\">[24]</a></sup> entry-level information is a set of abstract arguments that, for instance, represent data or a proposition. Conflicts between arguments are represented by a <a href=\"/wiki/Binary_relation\" title=\"Binary relation\">binary relation</a> on the set of arguments. In concrete terms, you represent an argumentation framework with a <a href=\"/wiki/Directed_graph\" title=\"Directed graph\">directed graph</a> such that the nodes are the arguments, and the arrows represent the attack relation.  There exist some extensions of the Dung's framework, like the logic-based argumentation frameworks<sup class=\"reference\" id=\"cite_ref-25\"><a href=\"#cite_note-25\">[25]</a></sup> or the value-based argumentation frameworks.<sup class=\"reference\" id=\"cite_ref-26\"><a href=\"#cite_note-26\">[26]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Artificial immune system",
      "definition_text":"Artificial immune system \u2013 Artificial immune systems (AIS) are a class of computationally intelligent, rule-based machine learning systems inspired by the principles and processes of the vertebrate immune system. The algorithms are typically modeled after the immune system's characteristics of learning and memory for use in problem-solving.",
      "definition_html":[
         "<li><a href=\"/wiki/Artificial_immune_system\" title=\"Artificial immune system\">Artificial immune system</a> \u2013 Artificial immune systems (AIS) are a class of computationally intelligent, <a href=\"/wiki/Rule-based_machine_learning\" title=\"Rule-based machine learning\">rule-based machine learning</a> systems inspired by the principles and processes of the vertebrate <a href=\"/wiki/Immune_system\" title=\"Immune system\">immune system</a>. The algorithms are typically modeled after the immune system's characteristics of <a href=\"/wiki/Learning\" title=\"Learning\">learning</a> and <a href=\"/wiki/Memory\" title=\"Memory\">memory</a> for use in <a href=\"/wiki/Problem_solving\" title=\"Problem solving\">problem-solving</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Artificial intelligence",
      "definition_text":"Artificial intelligence \u2013 (AI), sometimes called machine intelligence, is intelligence demonstrated by machines, in contrast to the natural intelligence displayed by humans and other animals.  In computer science AI research is defined as the study of \"intelligent agents\": any device that perceives its environment and takes actions that maximize its chance of successfully achieving its goals.[27] Colloquially, the term \"artificial intelligence\" is applied when a machine mimics \"cognitive\" functions that humans associate with other human minds, such as \"learning\" and \"problem solving\".[28]",
      "definition_html":[
         "<li><a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">Artificial intelligence</a> \u2013 (AI), sometimes called machine intelligence, is <a href=\"/wiki/Intelligence\" title=\"Intelligence\">intelligence</a> demonstrated by <a href=\"/wiki/Machine\" title=\"Machine\">machines</a>, in contrast to the natural intelligence displayed by humans and other animals.  In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> AI research is defined as the study of \"<a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agents</a>\": any device that perceives its environment and takes actions that maximize its chance of successfully achieving its goals.<sup class=\"reference\" id=\"cite_ref-Definition_of_AI_27-0\"><a href=\"#cite_note-Definition_of_AI-27\">[27]</a></sup> Colloquially, the term \"artificial intelligence\" is applied when a machine mimics \"cognitive\" functions that humans associate with other <a class=\"mw-redirect\" href=\"/wiki/Human_mind\" title=\"Human mind\">human minds</a>, such as \"learning\" and \"problem solving\".<sup class=\"reference\" id=\"cite_ref-FOOTNOTERussellNorvig20092_28-0\"><a href=\"#cite_note-FOOTNOTERussellNorvig20092-28\">[28]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Artificial Intelligence Markup Language",
      "definition_text":"Artificial Intelligence Markup Language \u2013 is an XML dialect for creating natural language software agents.",
      "definition_html":[
         "<li><a href=\"/wiki/AIML\" title=\"AIML\">Artificial Intelligence Markup Language</a> \u2013 is an <a href=\"/wiki/XML\" title=\"XML\">XML</a> dialect for creating <a href=\"/wiki/Natural_language\" title=\"Natural language\">natural language</a> software agents.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Artificial neural network",
      "definition_text":"Artificial neural network \u2013 (ANN) or connectionist systems are computing systems vaguely inspired by the biological neural networks that constitute animal brains.",
      "definition_html":[
         "<li><a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">Artificial neural network</a> \u2013 (ANN) or <a href=\"/wiki/Connectionism\" title=\"Connectionism\">connectionist</a> systems are computing systems vaguely inspired by the <a class=\"mw-redirect\" href=\"/wiki/Biological_neural_network\" title=\"Biological neural network\">biological neural networks</a> that constitute animal <a href=\"/wiki/Brain\" title=\"Brain\">brains</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Association for the Advancement of Artificial Intelligence",
      "definition_text":"Association for the Advancement of Artificial Intelligence \u2013 (AAAI) is an international, nonprofit, scientific society devoted to promote research in, and responsible use of, artificial intelligence. AAAI also aims to increase public understanding of artificial intelligence (AI), improve the teaching and training of AI practitioners, and provide guidance for research planners and funders concerning the importance and potential of current AI developments and future directions.[29]",
      "definition_html":[
         "<li><a href=\"/wiki/Association_for_the_Advancement_of_Artificial_Intelligence\" title=\"Association for the Advancement of Artificial Intelligence\">Association for the Advancement of Artificial Intelligence</a> \u2013 (AAAI) is an international, nonprofit, scientific society devoted to promote research in, and responsible use of, <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>. AAAI also aims to increase public understanding of artificial intelligence (AI), improve the teaching and training of AI practitioners, and provide guidance for research planners and funders concerning the importance and potential of current AI developments and future directions.<sup class=\"reference\" id=\"cite_ref-29\"><a href=\"#cite_note-29\">[29]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Asymptotic computational complexity",
      "definition_text":"Asymptotic computational complexity \u2013 In computational complexity theory, asymptotic computational complexity is the usage of asymptotic analysis for the estimation of computational complexity of algorithms and computational problems, commonly associated with the usage of the big O notation.",
      "definition_html":[
         "<li><a href=\"/wiki/Asymptotic_computational_complexity\" title=\"Asymptotic computational complexity\">Asymptotic computational complexity</a> \u2013 In <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, asymptotic computational complexity is the usage of <a href=\"/wiki/Asymptotic_analysis\" title=\"Asymptotic analysis\">asymptotic analysis</a> for the estimation of computational complexity of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> and <a href=\"/wiki/Computational_problem\" title=\"Computational problem\">computational problems</a>, commonly associated with the usage of the <a href=\"/wiki/Big_O_notation\" title=\"Big O notation\">big O notation</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Attributional calculus",
      "definition_text":"Attributional calculus \u2013 is a logic and representation system defined by Ryszard S. Michalski. It combines elements of predicate logic, propositional calculus, and multi-valued logic. Attributional calculus provides a formal language for natural induction, an inductive learning process whose results are in forms natural to people.",
      "definition_html":[
         "<li><a href=\"/wiki/Attributional_calculus\" title=\"Attributional calculus\">Attributional calculus</a> \u2013 is a logic and representation system defined by <a href=\"/wiki/Ryszard_S._Michalski\" title=\"Ryszard S. Michalski\">Ryszard S. Michalski</a>. It combines elements of <a class=\"mw-redirect\" href=\"/wiki/Predicate_logic\" title=\"Predicate logic\">predicate logic</a>, <a href=\"/wiki/Propositional_calculus\" title=\"Propositional calculus\">propositional calculus</a>, and <a class=\"mw-redirect\" href=\"/wiki/Multi-valued_logic\" title=\"Multi-valued logic\">multi-valued logic</a>. Attributional calculus provides a formal language for <i>natural induction</i>, an inductive learning process whose results are in forms natural to people.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Augmented reality",
      "definition_text":"Augmented reality \u2013 (AR) is an interactive experience of a real-world environment where the objects that reside in the real-world are \"augmented\" by computer-generated perceptual information, sometimes across multiple sensory modalities, including visual, auditory, haptic, somatosensory, and olfactory.[30][31]",
      "definition_html":[
         "<li><a href=\"/wiki/Augmented_reality\" title=\"Augmented reality\">Augmented reality</a> \u2013 (AR) is an interactive experience of a real-world environment where the objects that reside in the real-world are \"augmented\" by computer-generated perceptual information, sometimes across multiple sensory modalities, including <a class=\"mw-redirect\" href=\"/wiki/Visual\" title=\"Visual\">visual</a>, <a href=\"/wiki/Hearing\" title=\"Hearing\">auditory</a>, <a href=\"/wiki/Haptic_perception\" title=\"Haptic perception\">haptic</a>, <a href=\"/wiki/Somatosensory_system\" title=\"Somatosensory system\">somatosensory</a>, and <a class=\"mw-redirect\" href=\"/wiki/Olfactory\" title=\"Olfactory\">olfactory</a>.<sup class=\"reference\" id=\"cite_ref-30\"><a href=\"#cite_note-30\">[30]</a></sup><sup class=\"reference\" id=\"cite_ref-31\"><a href=\"#cite_note-31\">[31]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Automata theory",
      "definition_text":"Automata theory \u2013 is the study of abstract machines and automata, as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).",
      "definition_html":[
         "<li><a href=\"/wiki/Automata_theory\" title=\"Automata theory\">Automata theory</a> \u2013 is the study of <a href=\"/wiki/Abstract_machine\" title=\"Abstract machine\">abstract machines</a> and <a href=\"/wiki/Automaton\" title=\"Automaton\">automata</a>, as well as the <a href=\"/wiki/Computational_problem\" title=\"Computational problem\">computational problems</a> that can be solved using them. It is a theory in <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a> and <a href=\"/wiki/Discrete_mathematics\" title=\"Discrete mathematics\">discrete mathematics</a> (a subject of study in both <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a> and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Automated planning and scheduling",
      "definition_text":"Automated planning and scheduling \u2013 sometimes denoted as simply AI Planning,[32] is a branch of artificial intelligence that concerns the realization of strategies or action sequences, typically for execution by intelligent agents, autonomous robots and unmanned vehicles. Unlike classical control and classification problems, the solutions are complex and must be discovered and optimized in multidimensional space. Planning is also related to decision theory.",
      "definition_html":[
         "<li><a href=\"/wiki/Automated_planning_and_scheduling\" title=\"Automated planning and scheduling\">Automated planning and scheduling</a> \u2013 sometimes denoted as simply AI Planning,<sup class=\"reference\" id=\"cite_ref-32\"><a href=\"#cite_note-32\">[32]</a></sup> is a branch of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> that concerns the realization of <a href=\"/wiki/Strategy\" title=\"Strategy\">strategies</a> or action sequences, typically for execution by <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agents</a>, <a href=\"/wiki/Autonomous_robot\" title=\"Autonomous robot\">autonomous robots</a> and <a href=\"/wiki/Unmanned_vehicle\" title=\"Unmanned vehicle\">unmanned vehicles</a>. Unlike classical <a href=\"/wiki/Control_system\" title=\"Control system\">control</a> and <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classification</a> problems, the solutions are complex and must be discovered and optimized in multidimensional space. Planning is also related to <a href=\"/wiki/Decision_theory\" title=\"Decision theory\">decision theory</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Automated reasoning",
      "definition_text":"Automated reasoning \u2013 is an area of computer science and mathematical logic dedicated to understanding different aspects of reasoning. The study of automated reasoning helps produce computer programs that allow computers to reason completely, or nearly completely, automatically. Although automated reasoning is considered a sub-field of artificial intelligence, it also has connections with theoretical computer science, and even philosophy.",
      "definition_html":[
         "<li><a href=\"/wiki/Automated_reasoning\" title=\"Automated reasoning\">Automated reasoning</a> \u2013 is an area of <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> and <a href=\"/wiki/Mathematical_logic\" title=\"Mathematical logic\">mathematical logic</a> dedicated to understanding different aspects of <a class=\"mw-redirect\" href=\"/wiki/Reasoning\" title=\"Reasoning\">reasoning</a>. The study of automated reasoning helps produce <a class=\"mw-redirect\" href=\"/wiki/Computer_programs\" title=\"Computer programs\">computer programs</a> that allow computers to reason completely, or nearly completely, automatically. Although automated reasoning is considered a sub-field of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>, it also has connections with <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a>, and even <a href=\"/wiki/Philosophy\" title=\"Philosophy\">philosophy</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Autonomic computing",
      "definition_text":"Autonomic computing \u2013 (also known as AC) refers to the self-managing characteristics of distributed computing resources, adapting to unpredictable changes while hiding intrinsic complexity to operators and users. Initiated by IBM in 2001, this initiative ultimately aimed to develop computer systems capable of self-management, to overcome the rapidly growing complexity of computing systems management, and to reduce the barrier that complexity poses to further growth.[33]",
      "definition_html":[
         "<li><a href=\"/wiki/Autonomic_computing\" title=\"Autonomic computing\">Autonomic computing</a> \u2013 (also known as AC) refers to the <a href=\"/wiki/Self-management_(computer_science)\" title=\"Self-management (computer science)\">self-managing</a> characteristics of <a href=\"/wiki/Distributed_computing\" title=\"Distributed computing\">distributed computing</a> resources, adapting to unpredictable changes while hiding intrinsic complexity to operators and users. Initiated by <a href=\"/wiki/IBM\" title=\"IBM\">IBM</a> in 2001, this initiative ultimately aimed to develop computer systems capable of self-management, to overcome the rapidly growing complexity of computing <a href=\"/wiki/Systems_management\" title=\"Systems management\">systems management</a>, and to reduce the barrier that complexity poses to further growth.<sup class=\"reference\" id=\"cite_ref-Kephart_33-0\"><a href=\"#cite_note-Kephart-33\">[33]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Autonomous car",
      "definition_text":"Autonomous car \u2013 A self-driving car, also known as a robot car, autonomous car, auto, or driverless car,[34][35] is a vehicle that is capable of sensing its environment and moving with little or no human input.[36]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Autonomous_car\" title=\"Autonomous car\">Autonomous car</a> \u2013 A self-driving car, also known as a robot car, autonomous car, auto, or driverless car,<sup class=\"reference\" id=\"cite_ref-34\"><a href=\"#cite_note-34\">[34]</a></sup><sup class=\"reference\" id=\"cite_ref-thrun2010toward_35-0\"><a href=\"#cite_note-thrun2010toward-35\">[35]</a></sup> is a <a href=\"/wiki/Vehicular_automation\" title=\"Vehicular automation\">vehicle</a> that is capable of sensing its environment and moving with little or no <a href=\"/wiki/User_interface\" title=\"User interface\">human input</a>.<sup class=\"reference\" id=\"cite_ref-36\"><a href=\"#cite_note-36\">[36]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Autonomous robot",
      "definition_text":"Autonomous robot \u2013 is a robot that performs behaviors or tasks with a high degree of autonomy. Autonomous robotics is usually considered to be a subfield of artificial intelligence, robotics, and information engineering.[37]",
      "definition_html":[
         "<li><a href=\"/wiki/Autonomous_robot\" title=\"Autonomous robot\">Autonomous robot</a> \u2013 is a <a href=\"/wiki/Robot\" title=\"Robot\">robot</a> that performs <a href=\"/wiki/Behavior-based_robotics\" title=\"Behavior-based robotics\">behaviors</a> or tasks with a high degree of <a href=\"/wiki/Autonomy\" title=\"Autonomy\">autonomy</a>. Autonomous robotics is usually considered to be a subfield of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>, <a href=\"/wiki/Robotics\" title=\"Robotics\">robotics</a>, and <a href=\"/wiki/Information_engineering_(field)\" title=\"Information engineering (field)\">information engineering</a>.<sup class=\"reference\" id=\"cite_ref-37\"><a href=\"#cite_note-37\">[37]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Backpropagation",
      "definition_text":"Backpropagation \u2013 is a method used in artificial neural networks to calculate a gradient that is needed in the calculation of the weights to be used in the network.[38] Backpropagation is shorthand for \"the backward propagation of errors,\" since an error is computed at the output and distributed backwards throughout the network's layers. It is commonly used to train deep neural networks,[39] a term referring to neural networks with more than one hidden layer.[40]",
      "definition_html":[
         "<li><a href=\"/wiki/Backpropagation\" title=\"Backpropagation\">Backpropagation</a> \u2013 is a method used in <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a> to calculate a <a href=\"/wiki/Gradient\" title=\"Gradient\">gradient</a> that is needed in the calculation of the <a href=\"/wiki/Artificial_neural_network#Components_of_an_artificial_neural_network\" title=\"Artificial neural network\">weights</a> to be used in the network.<sup class=\"reference\" id=\"cite_ref-38\"><a href=\"#cite_note-38\">[38]</a></sup> Backpropagation is shorthand for \"the backward propagation of errors,\" since an error is computed at the output and distributed backwards throughout the network's layers. It is commonly used to train <a class=\"mw-redirect\" href=\"/wiki/Deep_neural_network\" title=\"Deep neural network\">deep neural networks</a>,<sup class=\"reference\" id=\"cite_ref-39\"><a href=\"#cite_note-39\">[39]</a></sup> a term referring to neural networks with more than one hidden layer.<sup class=\"reference\" id=\"cite_ref-40\"><a href=\"#cite_note-40\">[40]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Backpropagation through time",
      "definition_text":"Backpropagation through time \u2013  (BPTT) is a gradient-based technique for training certain types of recurrent neural networks. It can be used to train Elman networks. The algorithm was independently derived by numerous researchers[41][42][43]",
      "definition_html":[
         "<li><a href=\"/wiki/Backpropagation_through_time\" title=\"Backpropagation through time\">Backpropagation through time</a> \u2013  (BPTT) is a <a href=\"/wiki/Gradient\" title=\"Gradient\">gradient</a>-based technique for training certain types of <a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">recurrent neural networks</a>. It can be used to train <a href=\"/wiki/Recurrent_neural_network#Elman_networks_and_Jordan_networks\" title=\"Recurrent neural network\">Elman networks</a>. The algorithm was independently derived by numerous researchers<sup class=\"reference\" id=\"cite_ref-41\"><a href=\"#cite_note-41\">[41]</a></sup><sup class=\"reference\" id=\"cite_ref-42\"><a href=\"#cite_note-42\">[42]</a></sup><sup class=\"reference\" id=\"cite_ref-43\"><a href=\"#cite_note-43\">[43]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Backward chaining",
      "definition_text":"Backward chaining \u2013  (or backward reasoning) is an inference method described colloquially as working backward from the goal. It is used in automated theorem provers, inference engines, proof assistants, and other artificial intelligence applications.[44]",
      "definition_html":[
         "<li><a href=\"/wiki/Backward_chaining\" title=\"Backward chaining\">Backward chaining</a> \u2013  (or backward reasoning) is an <a href=\"/wiki/Inference\" title=\"Inference\">inference</a> method described colloquially as working backward from the goal. It is used in <a class=\"mw-redirect\" href=\"/wiki/Automated_theorem_prover\" title=\"Automated theorem prover\">automated theorem provers</a>, <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engines</a>, <a href=\"/wiki/Proof_assistant\" title=\"Proof assistant\">proof assistants</a>, and other <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> applications.<sup class=\"reference\" id=\"cite_ref-44\"><a href=\"#cite_note-44\">[44]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Bag of words model",
      "definition_text":"Bag-of-words model \u2013 is a simplifying representation used in natural language processing and information retrieval (IR). In this model, a text (such as a sentence or a document) is represented as the bag (multiset) of its words, disregarding grammar and even word order but keeping multiplicity. The bag-of-words model has also been used for computer vision.[45] The bag-of-words model is commonly used in methods of document classification where the (frequency of) occurrence of each word is used as a feature for training a classifier.[46]",
      "definition_html":[
         "<li><a href=\"/wiki/Bag-of-words_model\" title=\"Bag-of-words model\">Bag-of-words model</a> \u2013 is a simplifying representation used in <a href=\"/wiki/Natural_language_processing\" title=\"Natural language processing\">natural language processing</a> and <a href=\"/wiki/Information_retrieval\" title=\"Information retrieval\">information retrieval</a> (IR). In this model, a text (such as a sentence or a document) is represented as the <a href=\"/wiki/Multiset\" title=\"Multiset\">bag (multiset)</a> of its words, disregarding grammar and even word order but keeping <a href=\"/wiki/Multiplicity_(mathematics)\" title=\"Multiplicity (mathematics)\">multiplicity</a>. The bag-of-words model has also been <a href=\"/wiki/Bag-of-words_model_in_computer_vision\" title=\"Bag-of-words model in computer vision\">used for computer vision</a>.<sup class=\"reference\" id=\"cite_ref-sivic_45-0\"><a href=\"#cite_note-sivic-45\">[45]</a></sup> The bag-of-words model is commonly used in methods of <a href=\"/wiki/Document_classification\" title=\"Document classification\">document classification</a> where the (frequency of) occurrence of each word is used as a <a href=\"/wiki/Feature_(machine_learning)\" title=\"Feature (machine learning)\">feature</a> for training a <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classifier</a>.<sup class=\"reference\" id=\"cite_ref-46\"><a href=\"#cite_note-46\">[46]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Bag of words model in computer vision",
      "definition_text":"Bag-of-words model in computer vision \u2013 In computer vision, the bag-of-words model (BoW model) can be applied to image classification, by treating image features as words.  In document classification, a bag of words is a sparse vector of occurrence counts of words; that is, a sparse histogram over the vocabulary.  In computer vision, a bag of visual words is a vector of occurrence counts of a vocabulary of local image features.",
      "definition_html":[
         "<li><a href=\"/wiki/Bag-of-words_model_in_computer_vision\" title=\"Bag-of-words model in computer vision\">Bag-of-words model in computer vision</a> \u2013 In computer vision, the bag-of-words model (BoW model) can be applied to <a class=\"mw-redirect\" href=\"/wiki/Image_classification\" title=\"Image classification\">image classification</a>, by treating <a class=\"mw-redirect\" href=\"/wiki/Image_feature\" title=\"Image feature\">image features</a> as words.  In document classification, a <a class=\"mw-redirect\" href=\"/wiki/Bag_of_words\" title=\"Bag of words\">bag of words</a> is a <a class=\"mw-redirect\" href=\"/wiki/Sparse_vector\" title=\"Sparse vector\">sparse vector</a> of occurrence counts of words; that is, a sparse <a href=\"/wiki/Histogram\" title=\"Histogram\">histogram</a> over the vocabulary.  In <a href=\"/wiki/Computer_vision\" title=\"Computer vision\">computer vision</a>, a <i>bag of visual words</i> is a vector of occurrence counts of a vocabulary of local image features.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Batch normalization",
      "definition_text":"Batch normalization \u2013 is a technique for improving the performance and stability of artificial neural networks. It is a technique to provide any layer in a neural network with inputs that are zero mean/unit variance.[47] Batch normalization was introduced in a 2015 paper.[48][49] It is used to normalize the input layer by adjusting and scaling the activations.[50]",
      "definition_html":[
         "<li><a href=\"/wiki/Batch_normalization\" title=\"Batch normalization\">Batch normalization</a> \u2013 is a technique for improving the performance and stability of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a>. It is a technique to provide any layer in a neural network with inputs that are zero mean/unit variance.<sup class=\"reference\" id=\"cite_ref-47\"><a href=\"#cite_note-47\">[47]</a></sup> Batch normalization was introduced in a 2015 paper.<sup class=\"reference\" id=\"cite_ref-48\"><a href=\"#cite_note-48\">[48]</a></sup><sup class=\"reference\" id=\"cite_ref-49\"><a href=\"#cite_note-49\">[49]</a></sup> It is used to normalize the input layer by adjusting and scaling the activations.<sup class=\"reference\" id=\"cite_ref-50\"><a href=\"#cite_note-50\">[50]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Bayesian programming",
      "definition_text":"Bayesian programming \u2013 is a formalism and a methodology for having a technique to specify probabilistic models and solve problems when less than the necessary information is available.",
      "definition_html":[
         "<li><a href=\"/wiki/Bayesian_programming\" title=\"Bayesian programming\">Bayesian programming</a> \u2013 is a formalism and a methodology for having a technique to specify <a href=\"/wiki/Probability_distribution\" title=\"Probability distribution\">probabilistic models</a> and solve problems when less than the necessary information is available.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Bees algorithm",
      "definition_text":"Bees algorithm \u2013 is a population-based search algorithm which was developed by Pham, Ghanbarzadeh and et al. in 2005.[51] It mimics the food foraging behaviour of honey bee colonies. In its basic version the algorithm performs a kind of neighbourhood search combined with global search, and can be used for both combinatorial optimization and continuous optimization. The only condition for the application of the bees algorithm is that some measure of distance between the solutions is defined. The effectiveness and specific abilities of the bees algorithm have been proven in a number of studies.[52][53][54][55]",
      "definition_html":[
         "<li><a href=\"/wiki/Bees_algorithm\" title=\"Bees algorithm\">Bees algorithm</a> \u2013 is a population-based <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search algorithm</a> which was developed by Pham, Ghanbarzadeh and et al. in 2005.<sup class=\"reference\" id=\"cite_ref-Pham_&amp;_al,_2005_51-0\"><a href=\"#cite_note-Pham_&amp;_al,_2005-51\">[51]</a></sup> It mimics the food foraging behaviour of honey bee colonies. In its basic version the algorithm performs a kind of neighbourhood search combined with global search, and can be used for both <a href=\"/wiki/Combinatorial_optimization\" title=\"Combinatorial optimization\">combinatorial optimization</a> and <a href=\"/wiki/Continuous_optimization\" title=\"Continuous optimization\">continuous optimization</a>. The only condition for the application of the bees algorithm is that some measure of distance between the solutions is defined. The effectiveness and specific abilities of the bees algorithm have been proven in a number of studies.<sup class=\"reference\" id=\"cite_ref-Pham_&amp;_Castellani,_2009_52-0\"><a href=\"#cite_note-Pham_&amp;_Castellani,_2009-52\">[52]</a></sup><sup class=\"reference\" id=\"cite_ref-53\"><a href=\"#cite_note-53\">[53]</a></sup><sup class=\"reference\" id=\"cite_ref-54\"><a href=\"#cite_note-54\">[54]</a></sup><sup class=\"reference\" id=\"cite_ref-Nasrinpour_&amp;_Massah_&amp;_Teshnehlab_2017_55-0\"><a href=\"#cite_note-Nasrinpour_&amp;_Massah_&amp;_Teshnehlab_2017-55\">[55]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Behavior informatics",
      "definition_text":"Behavior informatics \u2013 (BI) is the informatics of behaviors so as to obtain behavior intelligence and behavior insights.[56]",
      "definition_html":[
         "<li><a href=\"/wiki/Behavior_informatics\" title=\"Behavior informatics\">Behavior informatics</a> \u2013 (BI) is the informatics of behaviors so as to obtain behavior intelligence and behavior insights.<sup class=\"reference\" id=\"cite_ref-56\"><a href=\"#cite_note-56\">[56]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Behavior tree",
      "definition_text":"Behavior tree \u2013   A Behavior Tree (BT) is a mathematical model of plan execution used in computer science, robotics, control systems and video games. They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. BTs present some similarities to hierarchical state machines with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make BTs less error-prone and very popular in the game developer community. BTs have shown to generalize several other control architectures.[57][58]",
      "definition_html":[
         "<li><a href=\"/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control)\" title=\"Behavior tree (artificial intelligence, robotics and control)\">Behavior tree</a> \u2013   A Behavior Tree (BT) is a <a href=\"/wiki/Mathematical_model\" title=\"Mathematical model\">mathematical model</a> of <a href=\"/wiki/Automated_planning_and_scheduling\" title=\"Automated planning and scheduling\">plan</a> execution used in <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, <a href=\"/wiki/Robotics\" title=\"Robotics\">robotics</a>, <a class=\"mw-redirect\" href=\"/wiki/Control_systems\" title=\"Control systems\">control systems</a> and <a class=\"mw-redirect\" href=\"/wiki/Artificial_intelligence_(video_games)\" title=\"Artificial intelligence (video games)\">video games</a>. They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. BTs present some similarities to <a class=\"mw-redirect\" href=\"/wiki/State_machine\" title=\"State machine\">hierarchical state machines</a> with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make BTs less error-prone and very popular in the game developer community. BTs have shown to generalize several other control architectures.<sup class=\"reference\" id=\"cite_ref-Colledanchise_TRO16_57-0\"><a href=\"#cite_note-Colledanchise_TRO16-57\">[57]</a></sup><sup class=\"reference\" id=\"cite_ref-Colledanchise_BOOK17_58-0\"><a href=\"#cite_note-Colledanchise_BOOK17-58\">[58]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Belief desire intention software model",
      "definition_text":"Belief-desire-intention software model \u2013 (BDI), is a software model developed for programming intelligent agents. Superficially characterized by the implementation of an agent's beliefs, desires and intentions, it actually uses these concepts to solve a particular problem in agent programming. In essence, it provides a mechanism for separating the activity of selecting a plan (from a plan library or an external planner application) from the execution of currently active plans. Consequently, BDI agents are able to balance the time spent on deliberating about plans (choosing what to do) and executing those plans (doing it). A third activity, creating the plans in the first place (planning), is not within the scope of the model, and is left to the system designer and programmer.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Belief-desire-intention_software_model\" title=\"Belief-desire-intention software model\">Belief-desire-intention software model</a> \u2013 (BDI), is a software model developed for programming <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agents</a>. Superficially characterized by the implementation of an agent's <i>beliefs</i>, <i>desires</i> and <i>intentions</i>, it actually uses these concepts to solve a particular problem in agent programming. In essence, it provides a mechanism for separating the activity of selecting a plan (from a plan library or an external planner application) from the execution of currently active plans. Consequently, BDI agents are able to balance the time spent on deliberating about plans (choosing what to do) and executing those plans (doing it). A third activity, creating the plans in the first place (planning), is not within the scope of the model, and is left to the system designer and programmer.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Bias\u2013variance tradeoff",
      "definition_text":"Bias\u2013variance tradeoff \u2013 In statistics and machine learning, the bias\u2013variance tradeoff is the property of a set of predictive models whereby models with a lower bias in parameter estimation have a higher variance of the parameter estimates across samples, and vice versa.",
      "definition_html":[
         "<li><a href=\"/wiki/Bias%E2%80%93variance_tradeoff\" title=\"Bias\u2013variance tradeoff\">Bias\u2013variance tradeoff</a> \u2013 In <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a> and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, the bias\u2013variance tradeoff is the property of a set of predictive models whereby models with a lower <a href=\"/wiki/Bias_of_an_estimator\" title=\"Bias of an estimator\">bias</a> in <a href=\"/wiki/Statistical_parameter\" title=\"Statistical parameter\">parameter</a> <a href=\"/wiki/Estimation_theory\" title=\"Estimation theory\">estimation</a> have a higher <a href=\"/wiki/Variance\" title=\"Variance\">variance</a> of the parameter estimates across <a href=\"/wiki/Sample_(statistics)\" title=\"Sample (statistics)\">samples</a>, and vice versa.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Big data",
      "definition_text":"Big data \u2013 is a term used to refer to data sets that are too large or complex for traditional data-processing application software to adequately deal with. Data with many cases (rows) offer greater statistical power, while data with higher complexity (more attributes or columns) may lead to a higher false discovery rate.[59]",
      "definition_html":[
         "<li><a href=\"/wiki/Big_data\" title=\"Big data\">Big data</a> \u2013 is a term used to refer to <a href=\"/wiki/Data_set\" title=\"Data set\">data sets</a> that are too large or complex for traditional <a href=\"/wiki/Data_processing\" title=\"Data processing\">data-processing</a> <a href=\"/wiki/Application_software\" title=\"Application software\">application software</a> to adequately deal with. Data with many cases (rows) offer greater <a class=\"mw-redirect\" href=\"/wiki/Statistical_power\" title=\"Statistical power\">statistical power</a>, while data with higher complexity (more attributes or columns) may lead to a higher <a href=\"/wiki/False_discovery_rate\" title=\"False discovery rate\">false discovery rate</a>.<sup class=\"reference\" id=\"cite_ref-59\"><a href=\"#cite_note-59\">[59]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Big O notation",
      "definition_text":"Big O notation \u2013 is a mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity.  It is a member of a family of notations invented by Paul Bachmann,[60] Edmund Landau,[61] and others, collectively called Bachmann\u2013Landau notation or asymptotic notation.",
      "definition_html":[
         "<li><a href=\"/wiki/Big_O_notation\" title=\"Big O notation\">Big O notation</a> \u2013 is a mathematical notation that describes the <a href=\"/wiki/Asymptotic_analysis\" title=\"Asymptotic analysis\">limiting behavior</a> of a <a href=\"/wiki/Function_(mathematics)\" title=\"Function (mathematics)\">function</a> when the <a href=\"/wiki/Argument_of_a_function\" title=\"Argument of a function\">argument</a> tends towards a particular value or infinity.  It is a member of a family of notations invented by <a href=\"/wiki/Paul_Gustav_Heinrich_Bachmann\" title=\"Paul Gustav Heinrich Bachmann\">Paul Bachmann</a>,<sup class=\"reference\" id=\"cite_ref-Bachmann_60-0\"><a href=\"#cite_note-Bachmann-60\">[60]</a></sup> <a href=\"/wiki/Edmund_Landau\" title=\"Edmund Landau\">Edmund Landau</a>,<sup class=\"reference\" id=\"cite_ref-Landau_61-0\"><a href=\"#cite_note-Landau-61\">[61]</a></sup> and others, collectively called Bachmann\u2013Landau notation or asymptotic notation.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Binary tree",
      "definition_text":"Binary tree \u2013 is a tree data structure in which each node has at most two children, which are referred to as the left child and the right child.  A recursive definition using just set theory notions is that a (non-empty) binary tree is a tuple (L, S, R), where L and R are binary trees or the empty set and S is a singleton set.[62] Some authors allow the binary tree to be the empty set as well.[63]",
      "definition_html":[
         "<li><a href=\"/wiki/Binary_tree\" title=\"Binary tree\">Binary tree</a> \u2013 is a <a href=\"/wiki/Tree_structure\" title=\"Tree structure\">tree</a> <a href=\"/wiki/Data_structure\" title=\"Data structure\">data structure</a> in which each node has at most two <a class=\"mw-redirect\" href=\"/wiki/Child_node\" title=\"Child node\">children</a>, which are referred to as the <i><span id=\"left_child\">left child</span></i> and the <i><span id=\"right_child\">right child</span></i>.  A <a href=\"/wiki/Recursive_definition\" title=\"Recursive definition\">recursive definition</a> using just <a href=\"/wiki/Set_theory\" title=\"Set theory\">set theory</a> notions is that a (non-empty) binary tree is a <a href=\"/wiki/Tuple\" title=\"Tuple\">tuple</a> (<i>L</i>, <i>S</i>, <i>R</i>), where <i>L</i> and <i>R</i> are binary trees or the <a href=\"/wiki/Empty_set\" title=\"Empty set\">empty set</a> and <i>S</i> is a <a class=\"mw-redirect\" href=\"/wiki/Singleton_set\" title=\"Singleton set\">singleton set</a>.<sup class=\"reference\" id=\"cite_ref-GarnierTaylor2009_62-0\"><a href=\"#cite_note-GarnierTaylor2009-62\">[62]</a></sup> Some authors allow the binary tree to be the empty set as well.<sup class=\"reference\" id=\"cite_ref-Skiena2009_63-0\"><a href=\"#cite_note-Skiena2009-63\">[63]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Blackboard system",
      "definition_text":"Blackboard system \u2013 is an artificial intelligence approach based on the blackboard architectural model,[64][65][66][67] where a common knowledge base, the \"blackboard\", is iteratively updated by a diverse group of specialist knowledge sources, starting with a problem specification and ending with a solution.  Each knowledge source updates the blackboard with a partial solution when its internal constraints match the blackboard state.  In this way, the specialists work together to solve the problem.",
      "definition_html":[
         "<li><a href=\"/wiki/Blackboard_system\" title=\"Blackboard system\">Blackboard system</a> \u2013 is an <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> approach based on the <a class=\"mw-redirect\" href=\"/wiki/Blackboard_design_pattern\" title=\"Blackboard design pattern\">blackboard architectural model</a>,<sup class=\"reference\" id=\"cite_ref-64\"><a href=\"#cite_note-64\">[64]</a></sup><sup class=\"reference\" id=\"cite_ref-65\"><a href=\"#cite_note-65\">[65]</a></sup><sup class=\"reference\" id=\"cite_ref-66\"><a href=\"#cite_note-66\">[66]</a></sup><sup class=\"reference\" id=\"cite_ref-67\"><a href=\"#cite_note-67\">[67]</a></sup> where a common knowledge base, the \"blackboard\", is iteratively updated by a diverse group of specialist knowledge sources, starting with a problem specification and ending with a solution.  Each knowledge source updates the blackboard with a partial solution when its internal constraints match the blackboard state.  In this way, the specialists work together to solve the problem.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Boltzmann machine",
      "definition_text":"Boltzmann machine \u2013 (also called stochastic Hopfield network with hidden units) is a type of stochastic recurrent neural network and Markov random field.[68]  Boltzmann machines can be seen as the stochastic, generative counterpart of Hopfield networks.",
      "definition_html":[
         "<li><a href=\"/wiki/Boltzmann_machine\" title=\"Boltzmann machine\">Boltzmann machine</a> \u2013 (also called stochastic Hopfield network with hidden units) is a type of <a href=\"/wiki/Stochastic_neural_network\" title=\"Stochastic neural network\">stochastic</a> <a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">recurrent neural network</a> and <a href=\"/wiki/Markov_random_field\" title=\"Markov random field\">Markov random field</a>.<sup class=\"reference\" id=\"cite_ref-68\"><a href=\"#cite_note-68\">[68]</a></sup>  Boltzmann machines can be seen as the <a href=\"/wiki/Stochastic_process\" title=\"Stochastic process\">stochastic</a>, <a href=\"/wiki/Generative_model\" title=\"Generative model\">generative</a> counterpart of <a href=\"/wiki/Hopfield_network\" title=\"Hopfield network\">Hopfield networks</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Boolean satisfiability problem",
      "definition_text":"Boolean satisfiability problem \u2013 (sometimes called propositional satisfiability problem and abbreviated SATISFIABILITY or SAT) is the problem of determining if there exists an interpretation that satisfies a given Boolean formula. In other words, it asks whether the variables of a given Boolean formula can be consistently replaced by the values TRUE or FALSE in such a way that the formula evaluates to TRUE. If this is the case, the formula is called satisfiable. On the other hand, if no such assignment exists, the function expressed by the formula is FALSE for all possible variable assignments and the formula is unsatisfiable. For example, the formula \"a AND NOT b\" is satisfiable because one can find the values a\u00a0=\u00a0TRUE and b\u00a0=\u00a0FALSE, which make (a AND NOT b)\u00a0=\u00a0TRUE. In contrast, \"a AND NOT a\" is unsatisfiable.",
      "definition_html":[
         "<li><a href=\"/wiki/Boolean_satisfiability_problem\" title=\"Boolean satisfiability problem\">Boolean satisfiability problem</a> \u2013 (sometimes called propositional satisfiability problem and abbreviated SATISFIABILITY or SAT) is the problem of determining if there exists an <a href=\"/wiki/Interpretation_(logic)\" title=\"Interpretation (logic)\">interpretation</a> that <a href=\"/wiki/Satisfiability\" title=\"Satisfiability\">satisfies</a> a given <a class=\"mw-redirect\" href=\"/wiki/Boolean_logic\" title=\"Boolean logic\">Boolean</a> <a class=\"mw-redirect\" href=\"/wiki/Formula_(mathematical_logic)\" title=\"Formula (mathematical logic)\">formula</a>. In other words, it asks whether the variables of a given Boolean formula can be consistently replaced by the values TRUE or FALSE in such a way that the formula <a href=\"/wiki/Validity_(logic)\" title=\"Validity (logic)\">evaluates to TRUE</a>. If this is the case, the formula is called <i>satisfiable</i>. On the other hand, if no such assignment exists, the function expressed by the formula is <a href=\"/wiki/Contradiction#Contradiction_in_formal_logic\" title=\"Contradiction\">FALSE</a> for all possible variable assignments and the formula is <i>unsatisfiable</i>. For example, the formula \"<i>a</i> AND NOT <i>b</i>\" is satisfiable because one can find the values <i>a</i>\u00a0=\u00a0TRUE and <i>b</i>\u00a0=\u00a0FALSE, which make (<i>a</i> AND NOT <i>b</i>)\u00a0=\u00a0TRUE. In contrast, \"<i>a</i> AND NOT <i>a</i>\" is unsatisfiable.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Brain technology",
      "definition_text":"Brain technology \u2013 or self-learning know-how systems, defines a technology that employs latest findings in neuroscience. The term was first introduced by the Artificial Intelligence Laboratory in Zurich, Switzerland, in the context of the ROBOY project.[69] Brain Technology can be employed in robots,[70] know-how management systems[71] and any other application with self-learning capabilities. In particular, Brain Technology applications allow the visualization of the underlying learning architecture often coined as \"know-how maps\".",
      "definition_html":[
         "<li><a href=\"/wiki/Brain_technology\" title=\"Brain technology\">Brain technology</a> \u2013 or self-learning know-how systems, defines a technology that employs latest findings in <a href=\"/wiki/Neuroscience\" title=\"Neuroscience\">neuroscience</a>. The term was first introduced by the Artificial Intelligence Laboratory in <a class=\"mw-redirect\" href=\"/wiki/Zurich,_Switzerland\" title=\"Zurich, Switzerland\">Zurich, Switzerland</a>, in the context of the <a class=\"mw-redirect\" href=\"/wiki/ROBOY\" title=\"ROBOY\">ROBOY</a> project.<sup class=\"reference\" id=\"cite_ref-69\"><a href=\"#cite_note-69\">[69]</a></sup> Brain Technology can be employed in robots,<sup class=\"reference\" id=\"cite_ref-70\"><a href=\"#cite_note-70\">[70]</a></sup> <a href=\"/wiki/Starmind_International\" title=\"Starmind International\">know-how management systems</a><sup class=\"reference\" id=\"cite_ref-71\"><a href=\"#cite_note-71\">[71]</a></sup> and any other application with self-learning capabilities. In particular, Brain Technology applications allow the visualization of the underlying learning architecture often coined as \"know-how maps\".</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Branching factor",
      "definition_text":"Branching factor \u2013 In computing, tree data structures, and game theory, the branching factor is the number of children at each node, the outdegree. If this value is not uniform, an average branching factor can be calculated.",
      "definition_html":[
         "<li><a href=\"/wiki/Branching_factor\" title=\"Branching factor\">Branching factor</a> \u2013 In <a href=\"/wiki/Computing\" title=\"Computing\">computing</a>, <a class=\"mw-redirect\" href=\"/wiki/Tree_data_structure\" title=\"Tree data structure\">tree data structures</a>, and <a href=\"/wiki/Game_theory\" title=\"Game theory\">game theory</a>, the branching factor is the number of <a class=\"mw-redirect\" href=\"/wiki/Child_node\" title=\"Child node\">children</a> at each <a href=\"/wiki/Node_(computer_science)\" title=\"Node (computer science)\">node</a>, the <a class=\"mw-redirect\" href=\"/wiki/Outdegree\" title=\"Outdegree\">outdegree</a>. If this value is not uniform, an <i>average branching factor</i> can be calculated.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Brute force search",
      "definition_text":"Brute-force search \u2013 or exhaustive search, also known as generate and test, is a very general problem-solving technique and algorithmic paradigm that consists of systematically enumerating all possible candidates for the solution and checking whether each candidate satisfies the problem's statement.",
      "definition_html":[
         "<li><a href=\"/wiki/Brute-force_search\" title=\"Brute-force search\">Brute-force search</a> \u2013 or exhaustive search, also known as generate and test, is a very general <a class=\"mw-redirect\" href=\"/wiki/Problem-solving\" title=\"Problem-solving\">problem-solving</a> technique and <a href=\"/wiki/Algorithmic_paradigm\" title=\"Algorithmic paradigm\">algorithmic paradigm</a> that consists of systematically enumerating all possible candidates for the solution and checking whether each candidate satisfies the problem's statement.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Capsule neural network",
      "definition_text":"Capsule neural network \u2013  A Capsule Neural Network (CapsNet) is a machine learning system that is a type of artificial neural network (ANN) that can be used to better model hierarchical relationships. The approach is an attempt to more closely mimic biological neural organization.[72]",
      "definition_html":[
         "<li><a href=\"/wiki/Capsule_neural_network\" title=\"Capsule neural network\">Capsule neural network</a> \u2013  A Capsule Neural Network (CapsNet) is a machine learning system that is a type of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> (ANN) that can be used to better model hierarchical relationships. The approach is an attempt to more closely mimic biological neural organization.<sup class=\"reference\" id=\"cite_ref-72\"><a href=\"#cite_note-72\">[72]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Case based reasoning",
      "definition_text":"Case-based reasoning \u2013  (CBR), broadly construed, is the process of solving new problems based on the solutions of similar past problems.",
      "definition_html":[
         "<li><a href=\"/wiki/Case-based_reasoning\" title=\"Case-based reasoning\">Case-based reasoning</a> \u2013  (CBR), broadly construed, is the process of solving new problems based on the solutions of similar past problems.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Chatbot",
      "definition_text":"Chatbot \u2013 (also known as a smartbots, talkbot, chatterbot, Bot, IM bot, interactive agent, Conversational interface or Artificial Conversational Entity) is a computer program or an artificial intelligence which conducts a conversation via auditory or textual methods.[73]",
      "definition_html":[
         "<li><a href=\"/wiki/Chatbot\" title=\"Chatbot\">Chatbot</a> \u2013 (also known as a smartbots, talkbot, chatterbot, Bot, IM bot, interactive agent, Conversational interface or Artificial Conversational Entity) is a <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer program</a> or an <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> which conducts a <a href=\"/wiki/Conversation\" title=\"Conversation\">conversation</a> via auditory or textual methods.<sup class=\"reference\" id=\"cite_ref-target_73-0\"><a href=\"#cite_note-target-73\">[73]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cloud robotics",
      "definition_text":"Cloud robotics \u2013 is a field of robotics that attempts to invoke cloud technologies such as cloud computing, cloud storage, and other Internet technologies centred on the benefits of converged infrastructure and shared services for robotics. When connected to the cloud, robots can benefit from the powerful computation, storage, and communication resources of modern data center in the cloud, which can process and share information from various robots or agent (other machines, smart objects, humans, etc.). Humans can also delegate tasks to robots remotely through networks. Cloud computing technologies enable robot systems to be endowed with powerful capability whilst reducing costs through cloud technologies. Thus, it is possible to build lightweight, low cost, smarter robots have intelligent \"brain\" in the cloud. The \"brain\" consists of data center, knowledge base, task planners, deep learning, information processing, environment models, communication support, etc.[74][75][76][77]",
      "definition_html":[
         "<li><a href=\"/wiki/Cloud_robotics\" title=\"Cloud robotics\">Cloud robotics</a> \u2013 is a field of <a href=\"/wiki/Robotics\" title=\"Robotics\">robotics</a> that attempts to invoke cloud technologies such as <a href=\"/wiki/Cloud_computing\" title=\"Cloud computing\">cloud computing</a>, <a href=\"/wiki/Cloud_storage\" title=\"Cloud storage\">cloud storage</a>, and other <a class=\"mw-redirect\" href=\"/wiki/Internet_technologies\" title=\"Internet technologies\">Internet technologies</a> centred on the benefits of converged infrastructure and shared services for robotics. When connected to the cloud, robots can benefit from the powerful computation, storage, and communication resources of modern <a href=\"/wiki/Data_center\" title=\"Data center\">data center</a> in the cloud, which can process and share information from various robots or agent (other machines, smart objects, humans, etc.). Humans can also delegate tasks to robots remotely through <a class=\"mw-redirect\" href=\"/wiki/Network_(computing)\" title=\"Network (computing)\">networks</a>. Cloud computing technologies enable robot systems to be endowed with powerful capability whilst reducing costs through cloud technologies. Thus, it is possible to build lightweight, low cost, smarter robots have intelligent \"brain\" in the cloud. The \"brain\" consists of <a href=\"/wiki/Data_center\" title=\"Data center\">data center</a>, <a href=\"/wiki/Knowledge_base\" title=\"Knowledge base\">knowledge base</a>, task planners, <a href=\"/wiki/Deep_learning\" title=\"Deep learning\">deep learning</a>, information processing, environment models, communication support, etc.<sup class=\"reference\" id=\"cite_ref-RASrobot_74-0\"><a href=\"#cite_note-RASrobot-74\">[74]</a></sup><sup class=\"reference\" id=\"cite_ref-75\"><a href=\"#cite_note-75\">[75]</a></sup><sup class=\"reference\" id=\"cite_ref-kengoldberg_76-0\"><a href=\"#cite_note-kengoldberg-76\">[76]</a></sup><sup class=\"reference\" id=\"cite_ref-sites.google.com_77-0\"><a href=\"#cite_note-sites.google.com-77\">[77]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cluster analysis",
      "definition_text":"Cluster analysis \u2013 or clustering is the task of grouping a set of objects in such a way that objects in the same group (called a cluster) are more similar (in some sense) to each other than to those in other groups (clusters). It is a main task of exploratory data mining, and a common technique for statistical data analysis, used in many fields, including machine learning, pattern recognition, image analysis, information retrieval, bioinformatics, data compression, and computer graphics.",
      "definition_html":[
         "<li><a href=\"/wiki/Cluster_analysis\" title=\"Cluster analysis\">Cluster analysis</a> \u2013 or clustering is the task of grouping a set of objects in such a way that objects in the same group (called a cluster) are more similar (in some sense) to each other than to those in other groups (clusters). It is a main task of exploratory <a href=\"/wiki/Data_mining\" title=\"Data mining\">data mining</a>, and a common technique for <a href=\"/wiki/Statistics\" title=\"Statistics\">statistical</a> <a href=\"/wiki/Data_analysis\" title=\"Data analysis\">data analysis</a>, used in many fields, including <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, <a href=\"/wiki/Pattern_recognition\" title=\"Pattern recognition\">pattern recognition</a>, <a href=\"/wiki/Image_analysis\" title=\"Image analysis\">image analysis</a>, <a href=\"/wiki/Information_retrieval\" title=\"Information retrieval\">information retrieval</a>, <a href=\"/wiki/Bioinformatics\" title=\"Bioinformatics\">bioinformatics</a>, <a href=\"/wiki/Data_compression\" title=\"Data compression\">data compression</a>, and <a href=\"/wiki/Computer_graphics\" title=\"Computer graphics\">computer graphics</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cobweb",
      "definition_text":"Cobweb \u2013 is an incremental system for hierarchical conceptual clustering. COBWEB was invented by Professor Douglas H. Fisher, currently at Vanderbilt University.[78][79] COBWEB incrementally organizes observations into a classification tree. Each node in a classification tree represents a class (concept) and is labeled by a probabilistic concept that summarizes the attribute-value distributions of objects classified under the node. This classification tree can be used to predict missing attributes or the class of a new object.[80]",
      "definition_html":[
         "<li><a href=\"/wiki/Cobweb_(clustering)\" title=\"Cobweb (clustering)\">Cobweb</a> \u2013 is an incremental system for hierarchical <a href=\"/wiki/Conceptual_clustering\" title=\"Conceptual clustering\">conceptual clustering</a>. COBWEB was invented by Professor <a class=\"new\" href=\"/w/index.php?title=Douglas_H._Fisher_(Computer_Science)&amp;action=edit&amp;redlink=1\" title=\"Douglas H. Fisher (Computer Science) (page does not exist)\">Douglas H. Fisher</a>, currently at Vanderbilt University.<sup class=\"reference\" id=\"cite_ref-78\"><a href=\"#cite_note-78\">[78]</a></sup><sup class=\"reference\" id=\"cite_ref-79\"><a href=\"#cite_note-79\">[79]</a></sup> COBWEB incrementally organizes observations into a <a class=\"mw-redirect\" href=\"/wiki/Classification_tree\" title=\"Classification tree\">classification tree</a>. Each node in a classification tree represents a class (concept) and is labeled by a probabilistic concept that summarizes the attribute-value distributions of objects classified under the node. This classification tree can be used to predict missing attributes or the class of a new object.<sup class=\"reference\" id=\"cite_ref-80\"><a href=\"#cite_note-80\">[80]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cognitive architecture",
      "definition_text":"Cognitive architecture \u2013 The Institute of Creative Technologies defines cognitive architecture as: \"hypothesis about the fixed structures that provide a mind, whether in natural or artificial systems, and how they work together \u2013 in conjunction with knowledge and skills embodied within the architecture \u2013 to yield intelligent behavior in a diversity of complex environments.\"[81]",
      "definition_html":[
         "<li><a href=\"/wiki/Cognitive_architecture\" title=\"Cognitive architecture\">Cognitive architecture</a> \u2013 The <a class=\"mw-redirect\" href=\"/wiki/Institute_of_Creative_Technologies\" title=\"Institute of Creative Technologies\">Institute of Creative Technologies</a> defines cognitive architecture as: \"hypothesis about the fixed structures that provide a mind, whether in natural or artificial systems, and how they work together \u2013 in conjunction with knowledge and skills embodied within the architecture \u2013 to yield intelligent behavior in a diversity of complex environments.\"<sup class=\"reference\" id=\"cite_ref-81\"><a href=\"#cite_note-81\">[81]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cognitive computing",
      "definition_text":"Cognitive computing \u2013 In general, the term cognitive computing has been used to refer to new hardware and/or software that mimics the functioning of the human brain[82][83][84][85][86][87] and helps to improve human decision-making.[88][89] In this sense, CC is a new type of computing with the goal of more accurate models of how the human brain/mind senses, reasons, and responds to stimulus.",
      "definition_html":[
         "<li><a href=\"/wiki/Cognitive_computing\" title=\"Cognitive computing\">Cognitive computing</a> \u2013 In general, the term cognitive computing has been used to refer to new hardware and/or software that <a class=\"mw-redirect\" href=\"/wiki/Neuromorphic_computing\" title=\"Neuromorphic computing\">mimics the functioning</a> of the <a href=\"/wiki/Human_brain\" title=\"Human brain\">human brain</a><sup class=\"reference\" id=\"cite_ref-82\"><a href=\"#cite_note-82\">[82]</a></sup><sup class=\"reference\" id=\"cite_ref-83\"><a href=\"#cite_note-83\">[83]</a></sup><sup class=\"reference\" id=\"cite_ref-84\"><a href=\"#cite_note-84\">[84]</a></sup><sup class=\"reference\" id=\"cite_ref-85\"><a href=\"#cite_note-85\">[85]</a></sup><sup class=\"reference\" id=\"cite_ref-Denning_86-0\"><a href=\"#cite_note-Denning-86\">[86]</a></sup><sup class=\"reference\" id=\"cite_ref-87\"><a href=\"#cite_note-87\">[87]</a></sup> and helps to improve human decision-making.<sup class=\"reference\" id=\"cite_ref-88\"><a href=\"#cite_note-88\">[88]</a></sup><sup class=\"reference\" id=\"cite_ref-89\"><a href=\"#cite_note-89\">[89]</a></sup> In this sense, CC is a new type of computing with the goal of more accurate models of how the human brain/<a href=\"/wiki/Mind\" title=\"Mind\">mind</a> senses, <a class=\"mw-redirect\" href=\"/wiki/Reasoning\" title=\"Reasoning\">reasons</a>, and responds to stimulus.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Cognitive science",
      "definition_text":"Cognitive science \u2013 is the interdisciplinary, scientific study of the mind and its processes.[90]",
      "definition_html":[
         "<li><a href=\"/wiki/Cognitive_science\" title=\"Cognitive science\">Cognitive science</a> \u2013 is the interdisciplinary, <a href=\"/wiki/Science\" title=\"Science\">scientific</a> study of the <a href=\"/wiki/Mind\" title=\"Mind\">mind</a> and its processes.<sup class=\"reference\" id=\"cite_ref-90\"><a href=\"#cite_note-90\">[90]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Combinatorial optimization",
      "definition_text":"Combinatorial optimization \u2013 In Operations Research, applied mathematics and theoretical computer science, combinatorial optimization  is a topic that consists of finding an optimal object from a finite set of objects.[91]",
      "definition_html":[
         "<li><a href=\"/wiki/Combinatorial_optimization\" title=\"Combinatorial optimization\">Combinatorial optimization</a> \u2013 In <a class=\"mw-redirect\" href=\"/wiki/Operations_Research\" title=\"Operations Research\">Operations Research</a>, <a href=\"/wiki/Applied_mathematics\" title=\"Applied mathematics\">applied mathematics</a> and <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a>, combinatorial optimization  is a topic that consists of finding an optimal object from a <a href=\"/wiki/Finite_set\" title=\"Finite set\">finite set</a> of objects.<sup class=\"reference\" id=\"cite_ref-91\"><a href=\"#cite_note-91\">[91]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Committee machine",
      "definition_text":"Committee machine \u2013 is a type of artificial neural network using a divide and conquer strategy in which the responses of multiple neural networks (experts) are combined into a single response.[92]  The combined response of the committee machine is supposed to be superior to those of its constituent experts.  Compare with ensembles of classifiers.",
      "definition_html":[
         "<li><a href=\"/wiki/Committee_machine\" title=\"Committee machine\">Committee machine</a> \u2013 is a type of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> using a <a href=\"/wiki/Divide_and_rule\" title=\"Divide and rule\">divide and conquer</a> strategy in which the responses of multiple neural networks (experts) are combined into a single response.<sup class=\"reference\" id=\"cite_ref-92\"><a href=\"#cite_note-92\">[92]</a></sup>  The combined response of the committee machine is supposed to be superior to those of its constituent experts.  Compare with <a class=\"mw-redirect\" href=\"/wiki/Ensembles_of_classifiers\" title=\"Ensembles of classifiers\">ensembles of classifiers</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Commonsense knowledge",
      "definition_text":"Commonsense knowledge \u2013 In artificial intelligence research, commonsense knowledge consists of facts about the everyday world, such as \"Lemons are sour\", that all humans are expected to know.  The first AI program to address common sense knowledge was Advice Taker in 1959 by John McCarthy.[93]",
      "definition_html":[
         "<li><a href=\"/wiki/Commonsense_knowledge_(artificial_intelligence)\" title=\"Commonsense knowledge (artificial intelligence)\">Commonsense knowledge</a> \u2013 In <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> research, commonsense knowledge consists of facts about the everyday world, such as \"Lemons are sour\", that all humans are expected to know.  The first AI program to address common sense knowledge was <a class=\"mw-redirect\" href=\"/wiki/Advice_Taker\" title=\"Advice Taker\">Advice Taker</a> in 1959 by John McCarthy.<sup class=\"reference\" id=\"cite_ref-93\"><a href=\"#cite_note-93\">[93]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Commonsense reasoning",
      "definition_text":"Commonsense reasoning \u2013 is one of the branches of artificial intelligence that is concerned with simulating the human ability to make presumptions about the type and essence of ordinary situations they encounter every day.[94]",
      "definition_html":[
         "<li><a href=\"/wiki/Commonsense_reasoning\" title=\"Commonsense reasoning\">Commonsense reasoning</a> \u2013 is one of the branches of artificial intelligence that is concerned with simulating the human ability to make presumptions about the type and essence of ordinary situations they encounter every day.<sup class=\"reference\" id=\"cite_ref-94\"><a href=\"#cite_note-94\">[94]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational chemistry",
      "definition_text":"Computational chemistry \u2013 is a branch of chemistry that uses computer simulation to assist in solving chemical problems.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_chemistry\" title=\"Computational chemistry\">Computational chemistry</a> \u2013 is a branch of <a href=\"/wiki/Chemistry\" title=\"Chemistry\">chemistry</a> that uses <a href=\"/wiki/Computer_simulation\" title=\"Computer simulation\">computer simulation</a> to assist in solving chemical problems.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational complexity theory",
      "definition_text":"Computational complexity theory \u2013 focuses on classifying computational problems according to their inherent difficulty, and relating these classes to each other. A computational problem is a task solved by a computer. A computation problem is solvable by mechanical application of mathematical steps, such as an algorithm.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">Computational complexity theory</a> \u2013 focuses on classifying computational problems according to their inherent difficulty, and relating these classes to each other. A computational problem is a task solved by a computer. A computation problem is solvable by mechanical application of mathematical steps, such as an algorithm.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational creativity",
      "definition_text":"Computational creativity \u2013 (also known as artificial creativity, mechanical creativity, creative computing or creative computation) is a multidisciplinary endeavour that includes the fields of artificial intelligence, cognitive psychology, philosophy, and the arts.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_creativity\" title=\"Computational creativity\">Computational creativity</a> \u2013 (also known as artificial creativity, mechanical creativity, creative computing or creative computation) is a multidisciplinary endeavour that includes the fields of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>, <a href=\"/wiki/Cognitive_psychology\" title=\"Cognitive psychology\">cognitive psychology</a>, <a href=\"/wiki/Philosophy\" title=\"Philosophy\">philosophy</a>, and <a href=\"/wiki/The_arts\" title=\"The arts\">the arts</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational cybernetics",
      "definition_text":"Computational cybernetics \u2013 is the integration of cybernetics and computational intelligence techniques.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_cybernetics\" title=\"Computational cybernetics\">Computational cybernetics</a> \u2013 is the integration of <a href=\"/wiki/Cybernetics\" title=\"Cybernetics\">cybernetics</a> and <a href=\"/wiki/Computational_intelligence\" title=\"Computational intelligence\">computational intelligence</a> techniques.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational humor",
      "definition_text":"Computational humor \u2013 is a branch of computational linguistics and artificial intelligence which uses computers in humor research.[95]",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_humor\" title=\"Computational humor\">Computational humor</a> \u2013 is a branch of <a href=\"/wiki/Computational_linguistics\" title=\"Computational linguistics\">computational linguistics</a> and <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> which uses <a href=\"/wiki/Computer\" title=\"Computer\">computers</a> in <a href=\"/wiki/Humor_research\" title=\"Humor research\">humor research</a>.<sup class=\"reference\" id=\"cite_ref-95\"><a href=\"#cite_note-95\">[95]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational intelligence",
      "definition_text":"Computational intelligence \u2013 (CI), usually refers to the ability of a computer to learn a specific task from data or experimental observation.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_intelligence\" title=\"Computational intelligence\">Computational intelligence</a> \u2013 (CI), usually refers to the ability of a <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> to learn a specific task from data or experimental observation.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational learning theory",
      "definition_text":"Computational learning theory \u2013 In computer science, computational learning theory (or just learning theory) is a subfield of artificial intelligence devoted to studying the design and analysis of machine learning algorithms.[96]",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_learning_theory\" title=\"Computational learning theory\">Computational learning theory</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, computational learning theory (or just learning theory) is a subfield of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> devoted to studying the design and analysis of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> algorithms.<sup class=\"reference\" id=\"cite_ref-ACL_96-0\"><a href=\"#cite_note-ACL-96\">[96]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational linguistics",
      "definition_text":"Computational linguistics \u2013 is an interdisciplinary field concerned with the statistical or rule-based modeling of natural language from a computational perspective, as well as the study of appropriate computational approaches to linguistic questions.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_linguistics\" title=\"Computational linguistics\">Computational linguistics</a> \u2013 is an <a class=\"mw-redirect\" href=\"/wiki/Interdisciplinary\" title=\"Interdisciplinary\">interdisciplinary</a> field concerned with the statistical or rule-based modeling of <a href=\"/wiki/Natural_language\" title=\"Natural language\">natural language</a> from a computational perspective, as well as the study of appropriate computational approaches to linguistic questions.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational mathematics",
      "definition_text":"Computational mathematics \u2013 the mathematical research in areas of science where computing plays an essential role.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_mathematics\" title=\"Computational mathematics\">Computational mathematics</a> \u2013 the mathematical research in areas of science where <a href=\"/wiki/Computation\" title=\"Computation\">computing</a> plays an essential role.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational neuroscience",
      "definition_text":"Computational neuroscience \u2013 (also known as theoretical neuroscience or mathematical neuroscience) is a branch of\u00a0neuroscience\u00a0which employs mathematical models, theoretical analysis and abstractions of the brain to understand the principles that govern the\u00a0development,\u00a0structure, physiology\u00a0and\u00a0cognitive abilities\u00a0of the\u00a0nervous system.[97][98][99][100]",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_neuroscience\" title=\"Computational neuroscience\">Computational neuroscience</a> \u2013 (also known as theoretical neuroscience or mathematical neuroscience) is a branch of\u00a0<a href=\"/wiki/Neuroscience\" title=\"Neuroscience\">neuroscience</a>\u00a0which employs mathematical models, theoretical analysis and abstractions of the brain to understand the principles that govern the\u00a0<a class=\"mw-redirect\" href=\"/wiki/Developmental_neuroscience\" title=\"Developmental neuroscience\">development</a>,\u00a0<a href=\"/wiki/Neuroanatomy\" title=\"Neuroanatomy\">structure</a>, <a href=\"/wiki/Neurophysiology\" title=\"Neurophysiology\">physiology</a>\u00a0and\u00a0<a href=\"/wiki/Cognitive_neuroscience\" title=\"Cognitive neuroscience\">cognitive abilities</a>\u00a0of the\u00a0<a href=\"/wiki/Nervous_system\" title=\"Nervous system\">nervous system</a>.<sup class=\"reference\" id=\"cite_ref-97\"><a href=\"#cite_note-97\">[97]</a></sup><sup class=\"reference\" id=\"cite_ref-98\"><a href=\"#cite_note-98\">[98]</a></sup><sup class=\"reference\" id=\"cite_ref-99\"><a href=\"#cite_note-99\">[99]</a></sup><sup class=\"reference\" id=\"cite_ref-100\"><a href=\"#cite_note-100\">[100]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational number theory",
      "definition_text":"Computational number theory \u2013 also known as algorithmic number theory, it is the study of algorithms for performing number theoretic computations.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_number_theory\" title=\"Computational number theory\">Computational number theory</a> \u2013 also known as <i>algorithmic number theory</i>, it is the study of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> for performing <a href=\"/wiki/Number_theory\" title=\"Number theory\">number theoretic</a> <a class=\"mw-redirect\" href=\"/wiki/Computations\" title=\"Computations\">computations</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational problem",
      "definition_text":"Computational problem \u2013 In theoretical computer science, a computational problem is a mathematical object representing a collection of questions that computers might be able to solve.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_problem\" title=\"Computational problem\">Computational problem</a> \u2013 In <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a>, a computational problem is a <a href=\"/wiki/Mathematical_object\" title=\"Mathematical object\">mathematical object</a> representing a collection of questions that <a class=\"mw-redirect\" href=\"/wiki/Computers\" title=\"Computers\">computers</a> might be able to solve.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computational statistics",
      "definition_text":"Computational statistics \u2013 or statistical computing, is the interface between statistics and computer science.",
      "definition_html":[
         "<li><a href=\"/wiki/Computational_statistics\" title=\"Computational statistics\">Computational statistics</a> \u2013 or statistical computing, is the interface between <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a> and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computer automated design",
      "definition_text":"Computer-automated design \u2013 Design Automation usually refers to electronic design automation, or Design Automation which is a Product Configurator.  Extending Computer-Aided Design (CAD), automated design and Computer-Automated Design (CAutoD)[101][102][103] are more concerned with a broader range of applications, such as automotive engineering, civil engineering,[104][105][106][107] composite material design, control engineering,[108] dynamic system identification and optimization,[109] financial systems, industrial equipment, mechatronic systems, steel construction,[110] structural optimisation,[111] and the invention of novel systems.  More recently, traditional CAD simulation is seen to be transformed to CAutoD by biologically-inspired machine learning,[112] including heuristic search techniques such as evolutionary computation,[113][114] and swarm intelligence algorithms.[115]",
      "definition_html":[
         "<li><a href=\"/wiki/Computer-automated_design\" title=\"Computer-automated design\">Computer-automated design</a> \u2013 Design Automation usually refers to <a href=\"/wiki/Electronic_design_automation\" title=\"Electronic design automation\">electronic design automation</a>, or <a class=\"mw-redirect\" href=\"/wiki/Design_Automation\" title=\"Design Automation\">Design Automation</a> which is a <a class=\"mw-redirect\" href=\"/wiki/Product_Configurator\" title=\"Product Configurator\">Product Configurator</a>.  Extending <a class=\"mw-redirect\" href=\"/wiki/Computer-Aided_Design\" title=\"Computer-Aided Design\">Computer-Aided Design</a> (CAD), automated design and Computer-Automated Design (CAutoD)<sup class=\"reference\" id=\"cite_ref-IBM_101-0\"><a href=\"#cite_note-IBM-101\">[101]</a></sup><sup class=\"reference\" id=\"cite_ref-102\"><a href=\"#cite_note-102\">[102]</a></sup><sup class=\"reference\" id=\"cite_ref-103\"><a href=\"#cite_note-103\">[103]</a></sup> are more concerned with a broader range of applications, such as <a href=\"/wiki/Automotive_engineering\" title=\"Automotive engineering\">automotive engineering</a>, <a href=\"/wiki/Civil_engineering\" title=\"Civil engineering\">civil engineering</a>,<sup class=\"reference\" id=\"cite_ref-104\"><a href=\"#cite_note-104\">[104]</a></sup><sup class=\"reference\" id=\"cite_ref-105\"><a href=\"#cite_note-105\">[105]</a></sup><sup class=\"reference\" id=\"cite_ref-106\"><a href=\"#cite_note-106\">[106]</a></sup><sup class=\"reference\" id=\"cite_ref-107\"><a href=\"#cite_note-107\">[107]</a></sup> <a href=\"/wiki/Composite_material\" title=\"Composite material\">composite material</a> design, <a href=\"/wiki/Control_engineering\" title=\"Control engineering\">control engineering</a>,<sup class=\"reference\" id=\"cite_ref-108\"><a href=\"#cite_note-108\">[108]</a></sup> dynamic <a href=\"/wiki/System_identification\" title=\"System identification\">system identification</a> and optimization,<sup class=\"reference\" id=\"cite_ref-109\"><a href=\"#cite_note-109\">[109]</a></sup> <a class=\"mw-redirect\" href=\"/wiki/Financial\" title=\"Financial\">financial</a> systems, industrial equipment, <a class=\"mw-redirect\" href=\"/wiki/Mechatronic\" title=\"Mechatronic\">mechatronic</a> systems, <a class=\"mw-redirect\" href=\"/wiki/Steel_construction\" title=\"Steel construction\">steel construction</a>,<sup class=\"reference\" id=\"cite_ref-110\"><a href=\"#cite_note-110\">[110]</a></sup> structural <a class=\"mw-redirect\" href=\"/wiki/Optimization_(mathematics)\" title=\"Optimization (mathematics)\">optimisation</a>,<sup class=\"reference\" id=\"cite_ref-111\"><a href=\"#cite_note-111\">[111]</a></sup> and the invention of novel systems.  More recently, traditional CAD simulation is seen to be transformed to CAutoD by biologically-inspired <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>,<sup class=\"reference\" id=\"cite_ref-112\"><a href=\"#cite_note-112\">[112]</a></sup> including heuristic <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search techniques</a> such as <a href=\"/wiki/Evolutionary_computation\" title=\"Evolutionary computation\">evolutionary computation</a>,<sup class=\"reference\" id=\"cite_ref-113\"><a href=\"#cite_note-113\">[113]</a></sup><sup class=\"reference\" id=\"cite_ref-114\"><a href=\"#cite_note-114\">[114]</a></sup> and <a href=\"/wiki/Swarm_intelligence\" title=\"Swarm intelligence\">swarm intelligence</a> algorithms.<sup class=\"reference\" id=\"cite_ref-115\"><a href=\"#cite_note-115\">[115]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computer science",
      "definition_text":"Computer science \u2013 is the theory, experimentation, and engineering that form the basis for the design and use of computers. It involves the study of algorithms that process, store, and communicate digital information. A computer scientist specializes in the theory of computation and the design of computational systems.[116]",
      "definition_html":[
         "<li><a href=\"/wiki/Computer_science\" title=\"Computer science\">Computer science</a> \u2013 is the theory, experimentation, and engineering that form the basis for the design and use of <a href=\"/wiki/Computer\" title=\"Computer\">computers</a>. It involves the study of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> that process, store, and communicate <a href=\"/wiki/Digital_data\" title=\"Digital data\">digital</a> <a href=\"/wiki/Information\" title=\"Information\">information</a>. A <a href=\"/wiki/Computer_scientist\" title=\"Computer scientist\">computer scientist</a> specializes in the theory of computation and the design of computational systems.<sup class=\"reference\" id=\"cite_ref-116\"><a href=\"#cite_note-116\">[116]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Computer vision",
      "definition_text":"Computer vision \u2013 is an interdisciplinary scientific field that deals with how computers can be made to gain high-level understanding from digital images or videos. From the perspective of engineering, it seeks to automate tasks that the human visual system can do.[117][118][119]",
      "definition_html":[
         "<li><a href=\"/wiki/Computer_vision\" title=\"Computer vision\">Computer vision</a> \u2013 is an <a href=\"/wiki/Interdisciplinarity\" title=\"Interdisciplinarity\">interdisciplinary scientific field</a> that deals with how computers can be made to gain high-level understanding from <a href=\"/wiki/Digital_image\" title=\"Digital image\">digital images</a> or <a href=\"/wiki/Video\" title=\"Video\">videos</a>. From the perspective of <a href=\"/wiki/Engineering\" title=\"Engineering\">engineering</a>, it seeks to automate tasks that the <a class=\"mw-redirect\" href=\"/wiki/Human_visual_system\" title=\"Human visual system\">human visual system</a> can do.<sup class=\"reference\" id=\"cite_ref-117\"><a href=\"#cite_note-117\">[117]</a></sup><sup class=\"reference\" id=\"cite_ref-118\"><a href=\"#cite_note-118\">[118]</a></sup><sup class=\"reference\" id=\"cite_ref-119\"><a href=\"#cite_note-119\">[119]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Concept drift",
      "definition_text":"Concept drift \u2013 In predictive analytics and machine learning, the concept drift means that the statistical properties of the target variable, which the model is trying to predict, change over time in unforeseen ways. This causes problems because the predictions become less accurate as time passes.",
      "definition_html":[
         "<li><a href=\"/wiki/Concept_drift\" title=\"Concept drift\">Concept drift</a> \u2013 In <a href=\"/wiki/Predictive_analytics\" title=\"Predictive analytics\">predictive analytics</a> and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, the concept drift means that the statistical properties of the target variable, which the model is trying to predict, change over time in unforeseen ways. This causes problems because the predictions become less accurate as time passes.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Connectionism",
      "definition_text":"Connectionism \u2013 is an approach in the fields of cognitive science, that hopes to explain mental phenomena using artificial neural networks (ANN).[120]",
      "definition_html":[
         "<li><a href=\"/wiki/Connectionism\" title=\"Connectionism\">Connectionism</a> \u2013 is an approach in the fields of <a href=\"/wiki/Cognitive_science\" title=\"Cognitive science\">cognitive science</a>, that hopes to explain <a href=\"/wiki/Mind\" title=\"Mind\">mental</a> phenomena using <a class=\"mw-redirect\" href=\"/wiki/Artificial_neural_networks\" title=\"Artificial neural networks\">artificial neural networks</a> (ANN).<sup class=\"reference\" id=\"cite_ref-120\"><a href=\"#cite_note-120\">[120]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Consistent heuristic",
      "definition_text":"Consistent heuristic \u2013 In the study of path-finding problems in artificial intelligence, a heuristic function is said to be consistent, or monotone, if its estimate is always less than or equal to the estimated distance from any neighboring vertex to the goal, plus the cost of reaching that neighbor.",
      "definition_html":[
         "<li><a href=\"/wiki/Consistent_heuristic\" title=\"Consistent heuristic\">Consistent heuristic</a> \u2013 In the study of <a href=\"/wiki/Shortest_path_problem\" title=\"Shortest path problem\">path-finding problems</a> in <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>, a <a class=\"mw-redirect\" href=\"/wiki/Heuristic_function\" title=\"Heuristic function\">heuristic function</a> is said to be consistent, or monotone, if its estimate is always less than or equal to the estimated distance from any neighboring vertex to the goal, plus the cost of reaching that neighbor.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Constrained conditional model",
      "definition_text":"Constrained conditional model \u2013 (CCM), is a machine learning and inference framework that augments the learning of conditional (probabilistic or discriminative) models with declarative constraints.",
      "definition_html":[
         "<li><a href=\"/wiki/Constrained_conditional_model\" title=\"Constrained conditional model\">Constrained conditional model</a> \u2013 (CCM), is a <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> and inference framework that augments the learning of conditional (probabilistic or discriminative) models with declarative constraints.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Constraint logic programming",
      "definition_text":"Constraint logic programming \u2013 is a form of constraint programming, in which logic programming is extended to include concepts from constraint satisfaction. A constraint logic program is a logic program that contains constraints in the body of clauses. An example of a clause including a constraint is A(X,Y) :- X+Y>0, B(X), C(Y). In this clause, X+Y>0 is a constraint; A(X,Y), B(X), and C(Y) are literals as in regular logic programming. This clause states one condition under which the statement A(X,Y) holds: X+Y is greater than zero and both B(X) and C(Y) are true.",
      "definition_html":[
         "<li><a href=\"/wiki/Constraint_logic_programming\" title=\"Constraint logic programming\">Constraint logic programming</a> \u2013 is a form of <a href=\"/wiki/Constraint_programming\" title=\"Constraint programming\">constraint programming</a>, in which <a href=\"/wiki/Logic_programming\" title=\"Logic programming\">logic programming</a> is extended to include concepts from <a href=\"/wiki/Constraint_satisfaction\" title=\"Constraint satisfaction\">constraint satisfaction</a>. A constraint logic program is a logic program that contains constraints in the body of clauses. An example of a clause including a constraint is <code class=\"mw-highlight\" dir=\"ltr\" id=\"\" style=\"\"><span class=\"nv\">A</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span><span class=\"nv\">Y</span><span class=\"p\">)</span> <span class=\"p\">:-</span> <span class=\"nv\">X</span><span class=\"o\">+</span><span class=\"nv\">Y</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nv\">B</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">),</span> <span class=\"nv\">C</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">)</span></code>. In this clause, <code class=\"mw-highlight\" dir=\"ltr\" id=\"\" style=\"\"><span class=\"nv\">X</span><span class=\"o\">+</span><span class=\"nv\">Y</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span></code> is a constraint; <code>A(X,Y)</code>, <code>B(X)</code>, and <code>C(Y)</code> are <a href=\"/wiki/Literal_(mathematical_logic)\" title=\"Literal (mathematical logic)\">literals</a> as in regular logic programming. This clause states one condition under which the statement <code>A(X,Y)</code> holds: <code>X+Y</code> is greater than zero and both <code>B(X)</code> and <code>C(Y)</code> are true.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Constraint programming",
      "definition_text":"Constraint programming \u2013 is a programming paradigm wherein relations between variables are stated in the form of constraints. Constraints differ from the common primitives of imperative programming languages in that they do not specify a step or sequence of steps to execute, but rather the properties of a solution to be found.",
      "definition_html":[
         "<li><a href=\"/wiki/Constraint_programming\" title=\"Constraint programming\">Constraint programming</a> \u2013 is a <a href=\"/wiki/Programming_paradigm\" title=\"Programming paradigm\">programming paradigm</a> wherein <a href=\"/wiki/Finitary_relation\" title=\"Finitary relation\">relations</a> between <a href=\"/wiki/Variable_(mathematics)\" title=\"Variable (mathematics)\">variables</a> are stated in the form of <a href=\"/wiki/Constraint_(mathematics)\" title=\"Constraint (mathematics)\">constraints</a>. Constraints differ from the common <a href=\"/wiki/Language_primitive\" title=\"Language primitive\">primitives</a> of <a href=\"/wiki/Imperative_programming\" title=\"Imperative programming\">imperative programming</a> languages in that they do not specify a step or sequence of steps to execute, but rather the properties of a solution to be found.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Constructed language",
      "definition_text":"Constructed language \u2013 (sometimes called a conlang) is a language whose phonology, grammar, and vocabulary are, instead of having developed naturally, consciously devised. Constructed languages may also be referred to as artificial, planned or invented languages[121]",
      "definition_html":[
         "<li><a href=\"/wiki/Constructed_language\" title=\"Constructed language\">Constructed language</a> \u2013 (sometimes called a conlang) is a <a href=\"/wiki/Language\" title=\"Language\">language</a> whose <a href=\"/wiki/Phonology\" title=\"Phonology\">phonology</a>, <a href=\"/wiki/Grammar\" title=\"Grammar\">grammar</a>, and <a href=\"/wiki/Vocabulary\" title=\"Vocabulary\">vocabulary</a> are, instead of having developed <a href=\"/wiki/Natural_language\" title=\"Natural language\">naturally</a>, consciously devised. Constructed languages may also be referred to as artificial, planned or invented languages<sup class=\"reference\" id=\"cite_ref-121\"><a href=\"#cite_note-121\">[121]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Control theory",
      "definition_text":"Control theory \u2013 in control systems engineering is a subfield of mathematics that deals with the control of continuously operating dynamical systems in engineered processes and machines. The objective is to develop a control model for controlling such systems using a control action in an optimum manner without delay or overshoot and ensuring control stability.",
      "definition_html":[
         "<li><a href=\"/wiki/Control_theory\" title=\"Control theory\">Control theory</a> \u2013 in <a href=\"/wiki/Control_engineering\" title=\"Control engineering\">control systems engineering</a> is a subfield of <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a> that deals with the control of continuously operating <a href=\"/wiki/Dynamical_system\" title=\"Dynamical system\">dynamical systems</a> in engineered processes and machines. The objective is to develop a control model for controlling such systems using a control action in an optimum manner without <i>delay or overshoot</i> and ensuring control <a href=\"/wiki/Stability_theory\" title=\"Stability theory\">stability</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Convolutional neural network",
      "definition_text":"Convolutional neural network \u2013 In deep learning, a convolutional neural network (CNN, or ConvNet) is a class of deep neural networks, most commonly applied to analyzing visual imagery. CNNs use a variation of multilayer perceptrons designed to require minimal preprocessing.[122] They are also known as shift invariant or space invariant artificial neural networks (SIANN), based on their shared-weights architecture and translation invariance characteristics.[123][124]",
      "definition_html":[
         "<li><a href=\"/wiki/Convolutional_neural_network\" title=\"Convolutional neural network\">Convolutional neural network</a> \u2013 In <a href=\"/wiki/Deep_learning\" title=\"Deep learning\">deep learning</a>, a convolutional neural network (CNN, or ConvNet) is a class of <a class=\"mw-redirect\" href=\"/wiki/Deep_neural_network\" title=\"Deep neural network\">deep neural networks</a>, most commonly applied to analyzing visual imagery. CNNs use a variation of <a href=\"/wiki/Multilayer_perceptron\" title=\"Multilayer perceptron\">multilayer perceptrons</a> designed to require minimal <a href=\"/wiki/Data_pre-processing\" title=\"Data pre-processing\">preprocessing</a>.<sup class=\"reference\" id=\"cite_ref-LeCun_122-0\"><a href=\"#cite_note-LeCun-122\">[122]</a></sup> They are also known as shift invariant or space invariant artificial neural networks (SIANN), based on their shared-weights architecture and <a class=\"mw-redirect\" href=\"/wiki/Translation_invariance\" title=\"Translation invariance\">translation invariance</a> characteristics.<sup class=\"reference\" id=\"cite_ref-123\"><a href=\"#cite_note-123\">[123]</a></sup><sup class=\"reference\" id=\"cite_ref-124\"><a href=\"#cite_note-124\">[124]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Crossover",
      "definition_text":"Crossover \u2013 In genetic algorithms and evolutionary computation, crossover, also called recombination, is a genetic operator used to combine the genetic information of two parents to generate new offspring. It is one way to stochastically generate new solutions from an existing population, and analogous to the crossover that happens during sexual reproduction in biology. Solutions can also be generated by cloning an existing solution, which is analogous to asexual reproduction. Newly generated solutions are typically mutated before being added to the population.",
      "definition_html":[
         "<li><a href=\"/wiki/Crossover_(genetic_algorithm)\" title=\"Crossover (genetic algorithm)\">Crossover</a> \u2013 In <a href=\"/wiki/Genetic_algorithm\" title=\"Genetic algorithm\">genetic algorithms</a> and <a href=\"/wiki/Evolutionary_computation\" title=\"Evolutionary computation\">evolutionary computation</a>, crossover, also called recombination, is a <a href=\"/wiki/Genetic_operator\" title=\"Genetic operator\">genetic operator</a> used to combine the <a href=\"/wiki/Chromosome_(genetic_algorithm)\" title=\"Chromosome (genetic algorithm)\">genetic information</a> of two parents to generate new offspring. It is one way to <a href=\"/wiki/Stochastic\" title=\"Stochastic\">stochastically</a> generate new <a class=\"mw-redirect\" href=\"/wiki/Candidate_solution\" title=\"Candidate solution\">solutions</a> from an existing population, and analogous to the <a href=\"/wiki/Chromosomal_crossover\" title=\"Chromosomal crossover\">crossover</a> that happens during <a href=\"/wiki/Sexual_reproduction\" title=\"Sexual reproduction\">sexual reproduction</a> in <a href=\"/wiki/Biology\" title=\"Biology\">biology</a>. Solutions can also be generated by <a href=\"/wiki/Cloning\" title=\"Cloning\">cloning</a> an existing solution, which is analogous to <a href=\"/wiki/Asexual_reproduction\" title=\"Asexual reproduction\">asexual reproduction</a>. Newly generated solutions are typically <a href=\"/wiki/Mutation_(genetic_algorithm)\" title=\"Mutation (genetic algorithm)\">mutated</a> before being added to the population.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Darkforest",
      "definition_text":"Darkforest \u2013  is a computer go program developed by Facebook, based on deep learning techniques using a convolutional neural network. Its updated version Darkfores2 combines the techniques of its predecessor with Monte Carlo tree search.[125][126] The MCTS effectively takes tree search methods commonly seen in computer chess programs and randomizes them.[127] With the update, the system is known as Darkfmcts3.[128]",
      "definition_html":[
         "<li><a href=\"/wiki/Darkforest\" title=\"Darkforest\">Darkforest</a> \u2013  is a <a class=\"mw-redirect\" href=\"/wiki/Computer_go\" title=\"Computer go\">computer go</a> program developed by <a href=\"/wiki/Facebook\" title=\"Facebook\">Facebook</a>, based on <a href=\"/wiki/Deep_learning\" title=\"Deep learning\">deep learning</a> techniques using a <a href=\"/wiki/Convolutional_neural_network\" title=\"Convolutional neural network\">convolutional neural network</a>. Its updated version Darkfores2 combines the techniques of its predecessor with <a href=\"/wiki/Monte_Carlo_tree_search\" title=\"Monte Carlo tree search\">Monte Carlo tree search</a>.<sup class=\"reference\" id=\"cite_ref-facebook-paper2_125-0\"><a href=\"#cite_note-facebook-paper2-125\">[125]</a></sup><sup class=\"reference\" id=\"cite_ref-126\"><a href=\"#cite_note-126\">[126]</a></sup> The MCTS effectively takes tree search methods commonly seen in computer chess programs and randomizes them.<sup class=\"reference\" id=\"cite_ref-127\"><a href=\"#cite_note-127\">[127]</a></sup> With the update, the system is known as Darkfmcts3.<sup class=\"reference\" id=\"cite_ref-:2_128-0\"><a href=\"#cite_note-:2-128\">[128]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Dartmouth workshop",
      "definition_text":"Dartmouth workshop \u2013 The Dartmouth Summer Research Project on Artificial Intelligence was the name of a 1956 summer workshop now considered by many[129][130] (though not all[131]) to be the seminal event for artificial intelligence as a field.",
      "definition_html":[
         "<li><a href=\"/wiki/Dartmouth_workshop\" title=\"Dartmouth workshop\">Dartmouth workshop</a> \u2013 The Dartmouth Summer Research Project on Artificial Intelligence was the name of a 1956 summer workshop now considered by many<sup class=\"reference\" id=\"cite_ref-129\"><a href=\"#cite_note-129\">[129]</a></sup><sup class=\"reference\" id=\"cite_ref-130\"><a href=\"#cite_note-130\">[130]</a></sup> (though not all<sup class=\"reference\" id=\"cite_ref-131\"><a href=\"#cite_note-131\">[131]</a></sup>) to be the <a class=\"extiw\" href=\"https://en.wiktionary.org/wiki/seminal\" title=\"wikt:seminal\">seminal</a> event for <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> as a field.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data fusion",
      "definition_text":"Data fusion \u2013 is the process of integrating multiple data sources to produce more consistent, accurate, and useful information than that provided by any individual data source.[132]",
      "definition_html":[
         "<li><a href=\"/wiki/Data_fusion\" title=\"Data fusion\">Data fusion</a> \u2013 is the process of integrating multiple data sources to produce more consistent, accurate, and useful information than that provided by any individual data source.<sup class=\"reference\" id=\"cite_ref-dca_132-0\"><a href=\"#cite_note-dca-132\">[132]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data integration",
      "definition_text":"Data integration \u2013 involves combining data residing in different sources and providing users with a unified view of them.[133] This process becomes significant in a variety of situations, which include both commercial (such as when two similar companies need to merge their databases) and scientific (combining research results from different bioinformatics repositories, for example) domains.  Data integration appears with increasing frequency as the volume (that is, big data) and the need to share existing data explodes.[134] It has become the focus of extensive theoretical work, and numerous open problems remain unsolved.",
      "definition_html":[
         "<li><a href=\"/wiki/Data_integration\" title=\"Data integration\">Data integration</a> \u2013 involves combining <a href=\"/wiki/Data\" title=\"Data\">data</a> residing in different sources and providing users with a unified view of them.<sup class=\"reference\" id=\"cite_ref-refone_133-0\"><a href=\"#cite_note-refone-133\">[133]</a></sup> This process becomes significant in a variety of situations, which include both commercial (such as when two similar companies need to merge their <a href=\"/wiki/Database\" title=\"Database\">databases</a>) and scientific (combining research results from different <a href=\"/wiki/Bioinformatics\" title=\"Bioinformatics\">bioinformatics</a> repositories, for example) domains.  Data integration appears with increasing frequency as the volume (that is, <a href=\"/wiki/Big_data\" title=\"Big data\">big data</a>) and the need to share existing data <a href=\"/wiki/Information_explosion\" title=\"Information explosion\">explodes</a>.<sup class=\"reference\" id=\"cite_ref-DataExplode_134-0\"><a href=\"#cite_note-DataExplode-134\">[134]</a></sup> It has become the focus of extensive theoretical work, and numerous open problems remain unsolved.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data mining",
      "definition_text":"Data mining \u2013 is the process of discovering patterns in large data sets involving methods at the intersection of machine learning, statistics, and database systems.",
      "definition_html":[
         "<li><a href=\"/wiki/Data_mining\" title=\"Data mining\">Data mining</a> \u2013 is the process of discovering patterns in large data sets involving methods at the intersection of machine learning, statistics, and database systems.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data science",
      "definition_text":"Data science \u2013 is an interdisciplinary field that uses scientific methods, processes, algorithms and systems to extract knowledge and insights from data in various forms, both structured and unstructured,[135][136] similar to data mining.  Data science is a \"concept to unify statistics, data analysis, machine learning and their related methods\" in order to \"understand and analyze actual phenomena\" with data.[137] It employs techniques and theories drawn from many fields within the context of mathematics, statistics, information science, and computer science.",
      "definition_html":[
         "<li><a href=\"/wiki/Data_science\" title=\"Data science\">Data science</a> \u2013 is an <a class=\"mw-redirect\" href=\"/wiki/Interdisciplinary\" title=\"Interdisciplinary\">interdisciplinary</a> field that uses scientific methods, processes, algorithms and systems to extract <a href=\"/wiki/Knowledge\" title=\"Knowledge\">knowledge</a> and insights from <a href=\"/wiki/Data\" title=\"Data\">data</a> in various forms, both structured and unstructured,<sup class=\"reference\" id=\"cite_ref-135\"><a href=\"#cite_note-135\">[135]</a></sup><sup class=\"reference\" id=\"cite_ref-136\"><a href=\"#cite_note-136\">[136]</a></sup> similar to <a href=\"/wiki/Data_mining\" title=\"Data mining\">data mining</a>.  Data science is a \"concept to unify statistics, data analysis, machine learning and their related methods\" in order to \"understand and analyze actual phenomena\" with data.<sup class=\"reference\" id=\"cite_ref-Hayashi_137-0\"><a href=\"#cite_note-Hayashi-137\">[137]</a></sup> It employs techniques and theories drawn from many fields within the context of <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a>, <a href=\"/wiki/Information_science\" title=\"Information science\">information science</a>, and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data set",
      "definition_text":"Data set \u2013 (or dataset) is a collection of data. Most commonly a data set corresponds to the contents of a single database table, or a single statistical data matrix, where every column of the table represents a particular variable, and each row corresponds to a given member of the data set in question. The data set lists values for each of the variables, such as height and weight of an object, for each member of the data set.  Each value is known as a datum. The data set may comprise data for one or more members, corresponding to the number of rows.",
      "definition_html":[
         "<li><a href=\"/wiki/Data_set\" title=\"Data set\">Data set</a> \u2013 (or dataset) is a collection of <a href=\"/wiki/Data\" title=\"Data\">data</a>. Most commonly a data set corresponds to the contents of a single <a href=\"/wiki/Table_(database)\" title=\"Table (database)\">database table</a>, or a single statistical <a class=\"mw-redirect\" href=\"/wiki/Data_matrix_(multivariate_statistics)\" title=\"Data matrix (multivariate statistics)\">data matrix</a>, where every <a href=\"/wiki/Column_(database)\" title=\"Column (database)\">column</a> of the table represents a particular variable, and each <a href=\"/wiki/Row_(database)\" title=\"Row (database)\">row</a> corresponds to a given member of the data set in question. The data set lists values for each of the variables, such as height and weight of an object, for each member of the data set.  Each value is known as a datum. The data set may comprise data for one or more members, corresponding to the number of rows.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Data warehouse",
      "definition_text":"Data warehouse \u2013 (DW or DWH), also known as an enterprise data warehouse (EDW), is a system used for reporting and data analysis.[138] DWs are central repositories of integrated data from one or more disparate sources. They store current and historical data in one single place[139]",
      "definition_html":[
         "<li><a href=\"/wiki/Data_warehouse\" title=\"Data warehouse\">Data warehouse</a> \u2013 (DW or DWH), also known as an enterprise data warehouse (EDW), is a system used for <a href=\"/wiki/Business_reporting\" title=\"Business reporting\">reporting</a> and <a href=\"/wiki/Data_analysis\" title=\"Data analysis\">data analysis</a>.<sup class=\"reference\" id=\"cite_ref-138\"><a href=\"#cite_note-138\">[138]</a></sup> DWs are central repositories of integrated data from one or more disparate sources. They store current and historical data in one single place<sup class=\"reference\" id=\"cite_ref-rjmetrics_139-0\"><a href=\"#cite_note-rjmetrics-139\">[139]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Datalog",
      "definition_text":"Datalog \u2013 is a declarative logic programming language that syntactically is a subset of Prolog.  It is often used as a query language for deductive databases.  In recent years, Datalog has found new application in data integration, information extraction, networking, program analysis, security, and cloud computing.[140]",
      "definition_html":[
         "<li><a href=\"/wiki/Datalog\" title=\"Datalog\">Datalog</a> \u2013 is a <a href=\"/wiki/Declarative_programming\" title=\"Declarative programming\">declarative</a> <a href=\"/wiki/Logic_programming\" title=\"Logic programming\">logic programming</a> language that syntactically is a subset of <a href=\"/wiki/Prolog\" title=\"Prolog\">Prolog</a>.  It is often used as a <a href=\"/wiki/Query_language\" title=\"Query language\">query language</a> for <a href=\"/wiki/Deductive_database\" title=\"Deductive database\">deductive databases</a>.  In recent years, Datalog has found new application in <a href=\"/wiki/Data_integration\" title=\"Data integration\">data integration</a>, <a href=\"/wiki/Information_extraction\" title=\"Information extraction\">information extraction</a>, <a href=\"/wiki/Computer_network\" title=\"Computer network\">networking</a>, <a href=\"/wiki/Program_analysis\" title=\"Program analysis\">program analysis</a>, <a href=\"/wiki/Security\" title=\"Security\">security</a>, and <a href=\"/wiki/Cloud_computing\" title=\"Cloud computing\">cloud computing</a>.<sup class=\"reference\" id=\"cite_ref-140\"><a href=\"#cite_note-140\">[140]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Decision boundary",
      "definition_text":"Decision boundary \u2013 In the case of backpropagation based artificial neural networks or perceptrons, the type of decision boundary that the network can learn is determined by the number of hidden layers the network has. If it has no hidden layers, then it can only learn linear problems. If it has one hidden layer, then it can learn any continuous function on compact subsets of Rn as shown by the Universal approximation theorem, thus it can have an arbitrary decision boundary.",
      "definition_html":[
         "<li><a href=\"/wiki/Decision_boundary\" title=\"Decision boundary\">Decision boundary</a> \u2013 In the case of <a href=\"/wiki/Backpropagation\" title=\"Backpropagation\">backpropagation</a> based <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a> or <a href=\"/wiki/Perceptron\" title=\"Perceptron\">perceptrons</a>, the type of decision boundary that the network can learn is determined by the number of hidden layers the network has. If it has no hidden layers, then it can only learn linear problems. If it has one hidden layer, then it can learn any <a href=\"/wiki/Continuous_function\" title=\"Continuous function\">continuous function</a> on <a href=\"/wiki/Compact_space\" title=\"Compact space\">compact subsets</a> of <a href=\"/wiki/Euclidean_space\" title=\"Euclidean space\">R<sup>n</sup></a> as shown by the <a href=\"/wiki/Universal_approximation_theorem\" title=\"Universal approximation theorem\">Universal approximation theorem</a>, thus it can have an arbitrary decision boundary.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Decision support system",
      "definition_text":"Decision support system \u2013  (DSS), is an information system that supports business or organizational decision-making activities. DSSs serve the management, operations and planning levels of an organization (usually mid and higher management) and help people make decisions about problems that may be rapidly changing and not easily specified in advance\u2014i.e. unstructured and semi-structured decision problems. Decision support systems can be either fully computerized or human-powered, or a combination of both.",
      "definition_html":[
         "<li><a href=\"/wiki/Decision_support_system\" title=\"Decision support system\">Decision support system</a> \u2013  (DSS), is an <a class=\"mw-redirect\" href=\"/wiki/Information_systems\" title=\"Information systems\">information system</a> that supports business or organizational <a href=\"/wiki/Decision-making\" title=\"Decision-making\">decision-making</a> activities. DSSs serve the management, operations and planning levels of an organization (usually mid and higher management) and help people make decisions about problems that may be rapidly changing and not easily specified in advance\u2014i.e. unstructured and semi-structured decision problems. Decision support systems can be either fully computerized or human-powered, or a combination of both.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Decision theory",
      "definition_text":"Decision theory \u2013 (or the theory of choice) is the study of the reasoning underlying an agent's choices.[141] Decision theory can be broken into two branches: normative decision theory, which gives advice on how to make the best decisions given a set of uncertain beliefs and a set of values, and descriptive decision theory which analyzes how existing, possibly irrational agents actually make decisions.",
      "definition_html":[
         "<li><a href=\"/wiki/Decision_theory\" title=\"Decision theory\">Decision theory</a> \u2013 (or the theory of choice) is the study of the reasoning underlying an <a href=\"/wiki/Agent_(economics)\" title=\"Agent (economics)\">agent's</a> choices.<sup class=\"reference\" id=\"cite_ref-141\"><a href=\"#cite_note-141\">[141]</a></sup> Decision theory can be broken into two branches: <a href=\"/wiki/Norm_(philosophy)\" title=\"Norm (philosophy)\">normative</a> decision theory, which gives advice on how to make the <a href=\"/wiki/Optimal_decision\" title=\"Optimal decision\">best decisions</a> given a set of uncertain beliefs and a set of <a class=\"mw-redirect\" href=\"/wiki/Value_(personal_and_cultural)\" title=\"Value (personal and cultural)\">values</a>, and descriptive decision theory which analyzes how existing, possibly irrational agents actually make decisions.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Decision tree learning",
      "definition_text":"Decision tree learning \u2013 uses a decision tree (as a predictive model) to go from observations about an item (represented in the branches) to conclusions about the item's target value (represented in the leaves). It is one of the predictive modeling approaches used in statistics, data mining and machine learning.",
      "definition_html":[
         "<li><a href=\"/wiki/Decision_tree_learning\" title=\"Decision tree learning\">Decision tree learning</a> \u2013 uses a <a href=\"/wiki/Decision_tree\" title=\"Decision tree\">decision tree</a> (as a <a href=\"/wiki/Predictive_modelling\" title=\"Predictive modelling\">predictive model</a>) to go from observations about an item (represented in the branches) to conclusions about the item's target value (represented in the leaves). It is one of the predictive modeling approaches used in <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a>, <a href=\"/wiki/Data_mining\" title=\"Data mining\">data mining</a> and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Declarative programming",
      "definition_text":"Declarative programming \u2013 is a programming paradigm\u2014a style of building the structure and elements of computer programs\u2014that expresses the logic of a computation without describing its control flow.[142]",
      "definition_html":[
         "<li><a href=\"/wiki/Declarative_programming\" title=\"Declarative programming\">Declarative programming</a> \u2013 is a <a href=\"/wiki/Programming_paradigm\" title=\"Programming paradigm\">programming paradigm</a>\u2014a style of building the structure and elements of computer programs\u2014that expresses the logic of a <a href=\"/wiki/Computation\" title=\"Computation\">computation</a> without describing its <a href=\"/wiki/Control_flow\" title=\"Control flow\">control flow</a>.<sup class=\"reference\" id=\"cite_ref-142\"><a href=\"#cite_note-142\">[142]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Deductive classifier",
      "definition_text":"Deductive classifier \u2013 is a type of artificial intelligence inference engine. It takes as input a set of declarations in a frame language about a domain such as medical research or molecular biology. For example, the names of classes, sub-classes, properties, and restrictions on allowable values.",
      "definition_html":[
         "<li><a href=\"/wiki/Deductive_classifier\" title=\"Deductive classifier\">Deductive classifier</a> \u2013 is a type of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engine</a>. It takes as input a set of declarations in a <a href=\"/wiki/Frame_language\" title=\"Frame language\">frame language</a> about a domain such as medical research or molecular biology. For example, the names of <a href=\"/wiki/Class_hierarchy\" title=\"Class hierarchy\">classes, sub-classes</a>, properties, and restrictions on allowable values.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Deep Blue",
      "definition_text":"Deep Blue \u2013 was a chess-playing computer developed by IBM. It is known for being the first computer chess-playing system to win both a chess game and a chess match against a reigning world champion under regular time controls.",
      "definition_html":[
         "<li><a href=\"/wiki/Deep_Blue_(chess_computer)\" title=\"Deep Blue (chess computer)\">Deep Blue</a> \u2013 was a <a href=\"/wiki/Computer_chess\" title=\"Computer chess\">chess-playing computer</a> developed by <a href=\"/wiki/IBM\" title=\"IBM\">IBM</a>. It is known for being the first computer chess-playing system to win both a chess game and a chess match against a reigning world champion under regular time controls.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Deep learning",
      "definition_text":"Deep learning \u2013 (also known as deep structured learning or hierarchical learning) is part of a broader family of machine learning methods based on learning data representations, as opposed to task-specific algorithms. Learning can be supervised, semi-supervised or unsupervised.[143][144][145]",
      "definition_html":[
         "<li><a href=\"/wiki/Deep_learning\" title=\"Deep learning\">Deep learning</a> \u2013 (also known as deep structured learning or hierarchical learning) is part of a broader family of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> methods based on <a class=\"mw-redirect\" href=\"/wiki/Learning_representation\" title=\"Learning representation\">learning data representations</a>, as opposed to task-specific algorithms. Learning can be <a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">supervised</a>, <a href=\"/wiki/Semi-supervised_learning\" title=\"Semi-supervised learning\">semi-supervised</a> or <a href=\"/wiki/Unsupervised_learning\" title=\"Unsupervised learning\">unsupervised</a>.<sup class=\"reference\" id=\"cite_ref-143\"><a href=\"#cite_note-143\">[143]</a></sup><sup class=\"reference\" id=\"cite_ref-144\"><a href=\"#cite_note-144\">[144]</a></sup><sup class=\"reference\" id=\"cite_ref-145\"><a href=\"#cite_note-145\">[145]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"DeepMind",
      "definition_text":"DeepMind \u2013 DeepMind Technologies is a British artificial intelligence company founded in September 2010, currently owned by Alphabet Inc. The company is based in London, with research centres in Canada,[146] France,[147] and the United States.   Acquired by Google in 2014, the company has created a neural network that learns how to play video games in a fashion similar to that of humans,[148] as well as a Neural Turing machine,[149] or a neural network that may be able to access an external memory like a conventional Turing machine, resulting in a computer that mimics the short-term memory of the human brain.[150][151] The company made headlines in 2016 after its AlphaGo program beat a human professional Go player Lee Sedol, the world champion, in a five-game match, which was the subject of a documentary film.[152] A more general program, AlphaZero, beat the most powerful programs playing go, chess and shogi (Japanese chess) after a few days of play against itself using reinforcement learning.[153]",
      "definition_html":[
         "<li><a href=\"/wiki/DeepMind\" title=\"DeepMind\">DeepMind</a> \u2013 DeepMind Technologies is a <a href=\"/wiki/United_Kingdom\" title=\"United Kingdom\">British</a> <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> company founded in September 2010, currently owned by <a href=\"/wiki/Alphabet_Inc.\" title=\"Alphabet Inc.\">Alphabet Inc.</a> The company is based in <a href=\"/wiki/London\" title=\"London\">London</a>, with research centres in <a href=\"/wiki/Canada\" title=\"Canada\">Canada</a>,<sup class=\"reference\" id=\"cite_ref-146\"><a href=\"#cite_note-146\">[146]</a></sup> <a href=\"/wiki/France\" title=\"France\">France</a>,<sup class=\"reference\" id=\"cite_ref-147\"><a href=\"#cite_note-147\">[147]</a></sup> and the <a href=\"/wiki/United_States\" title=\"United States\">United States</a>.   <a class=\"mw-redirect\" href=\"/wiki/List_of_mergers_and_acquisitions_by_Google\" title=\"List of mergers and acquisitions by Google\">Acquired</a> by <a href=\"/wiki/Google\" title=\"Google\">Google</a> in 2014, the company has created a <a href=\"/wiki/Neural_network\" title=\"Neural network\">neural network</a> that learns how to play <a class=\"mw-redirect\" href=\"/wiki/Video_games\" title=\"Video games\">video games</a> in a fashion similar to that of humans,<sup class=\"reference\" id=\"cite_ref-arxiv_medium_148-0\"><a href=\"#cite_note-arxiv_medium-148\">[148]</a></sup> as well as a <a href=\"/wiki/Neural_Turing_machine\" title=\"Neural Turing machine\">Neural Turing machine</a>,<sup class=\"reference\" id=\"cite_ref-arxiv_149-0\"><a href=\"#cite_note-arxiv-149\">[149]</a></sup> or a neural network that may be able to access an external memory like a conventional <a href=\"/wiki/Turing_machine\" title=\"Turing machine\">Turing machine</a>, resulting in a computer that mimics the <a href=\"/wiki/Short-term_memory\" title=\"Short-term memory\">short-term memory</a> of the human brain.<sup class=\"reference\" id=\"cite_ref-150\"><a href=\"#cite_note-150\">[150]</a></sup><sup class=\"reference\" id=\"cite_ref-DNCnature2016_151-0\"><a href=\"#cite_note-DNCnature2016-151\">[151]</a></sup> The company made headlines in 2016 after its <a href=\"/wiki/AlphaGo\" title=\"AlphaGo\">AlphaGo</a> program beat a human professional <a href=\"/wiki/Go_(game)\" title=\"Go (game)\">Go</a> player <a href=\"/wiki/Lee_Sedol\" title=\"Lee Sedol\">Lee Sedol</a>, the world champion, in <a href=\"/wiki/AlphaGo_versus_Lee_Sedol\" title=\"AlphaGo versus Lee Sedol\">a five-game match</a>, which was the subject of a documentary film.<sup class=\"reference\" id=\"cite_ref-152\"><a href=\"#cite_note-152\">[152]</a></sup> A more general program, <a href=\"/wiki/AlphaZero\" title=\"AlphaZero\">AlphaZero</a>, beat the most powerful programs playing <a href=\"/wiki/Go_(game)\" title=\"Go (game)\">go</a>, <a href=\"/wiki/Chess\" title=\"Chess\">chess</a> and <a href=\"/wiki/Shogi\" title=\"Shogi\">shogi</a> (Japanese chess) after a few days of play against itself using <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>.<sup class=\"reference\" id=\"cite_ref-153\"><a href=\"#cite_note-153\">[153]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Default logic",
      "definition_text":"Default logic \u2013 is a non-monotonic logic proposed by Raymond Reiter to formalize reasoning with default assumptions.",
      "definition_html":[
         "<li><a href=\"/wiki/Default_logic\" title=\"Default logic\">Default logic</a> \u2013 is a <a href=\"/wiki/Non-monotonic_logic\" title=\"Non-monotonic logic\">non-monotonic logic</a> proposed by <a href=\"/wiki/Raymond_Reiter\" title=\"Raymond Reiter\">Raymond Reiter</a> to formalize reasoning with default assumptions.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Description logic",
      "definition_text":"Description logic \u2013 Description logics (DL) are a family of formal knowledge representation languages. Many DLs are more expressive than propositional logic but less expressive than first-order logic. In contrast to the latter, the core reasoning problems for DLs are (usually) decidable, and efficient decision procedures have been designed and implemented for these problems. There are general, spatial, temporal, spatiotemporal, and fuzzy descriptions logics, and each description logic features a different balance between DL expressivity and reasoning complexity by supporting different sets of mathematical constructors.[154]",
      "definition_html":[
         "<li><a href=\"/wiki/Description_logic\" title=\"Description logic\">Description logic</a> \u2013 Description logics (DL) are a family of formal <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">knowledge representation</a> languages. Many DLs are more expressive than <a class=\"mw-redirect\" href=\"/wiki/Propositional_logic\" title=\"Propositional logic\">propositional logic</a> but less expressive than <a href=\"/wiki/First-order_logic\" title=\"First-order logic\">first-order logic</a>. In contrast to the latter, the core reasoning problems for DLs are (usually) <a href=\"/wiki/Decision_problem\" title=\"Decision problem\">decidable</a>, and efficient decision procedures have been designed and implemented for these problems. There are general, spatial, temporal, spatiotemporal, and fuzzy descriptions logics, and each description logic features a different balance between DL expressivity and <a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">reasoning</a> <a href=\"/wiki/Complexity_class\" title=\"Complexity class\">complexity</a> by supporting different sets of mathematical constructors.<sup class=\"reference\" id=\"cite_ref-154\"><a href=\"#cite_note-154\">[154]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Developmental robotics",
      "definition_text":"Developmental robotics \u2013 (DevRob), sometimes called epigenetic robotics, is a scientific field which aims at studying the developmental mechanisms, architectures and constraints that allow lifelong and open-ended learning of new skills and new knowledge in embodied machines.",
      "definition_html":[
         "<li><a href=\"/wiki/Developmental_robotics\" title=\"Developmental robotics\">Developmental robotics</a> \u2013 (DevRob), sometimes called <a href=\"/wiki/Epigenetics\" title=\"Epigenetics\">epigenetic</a> robotics, is a scientific field which aims at studying the developmental mechanisms, architectures and constraints that allow lifelong and open-ended learning of new skills and new knowledge in embodied <a href=\"/wiki/Machine\" title=\"Machine\">machines</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Diagnosis",
      "definition_text":"Diagnosis \u2013 is concerned with the development of algorithms and techniques that are able to determine whether the behaviour of a system is correct.  If the system is not functioning correctly, the algorithm should be able to determine, as accurately as possible, which part of the system is failing, and which kind of fault it is facing.  The computation is based on observations, which provide information on the current behaviour.",
      "definition_html":[
         "<li><a href=\"/wiki/Diagnosis_(artificial_intelligence)\" title=\"Diagnosis (artificial intelligence)\">Diagnosis</a> \u2013 is concerned with the development of algorithms and techniques that are able to determine whether the behaviour of a system is correct.  If the system is not functioning correctly, the algorithm should be able to determine, as accurately as possible, which part of the system is failing, and which kind of fault it is facing.  The computation is based on <i>observations</i>, which provide information on the current behaviour.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Dialogue system",
      "definition_text":"Dialogue system \u2013 or conversational agent (CA), is a computer system intended to converse with a human with a coherent structure. Dialogue systems have employed text, speech, graphics, haptics, gestures, and other modes for communication on both the input and output channel.",
      "definition_html":[
         "<li><a href=\"/wiki/Dialogue_system\" title=\"Dialogue system\">Dialogue system</a> \u2013 or conversational agent (CA), is a computer system intended to converse with a human with a coherent structure. Dialogue systems have employed text, speech, graphics, haptics, gestures, and other modes for communication on both the input and output channel.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Dimensionality reduction",
      "definition_text":"Dimensionality reduction \u2013 or dimension reduction, is the process of reducing the number of random variables under consideration[155] by obtaining a set of principal variables. It can be divided into feature selection and feature extraction.[156]",
      "definition_html":[
         "<li><a href=\"/wiki/Dimensionality_reduction\" title=\"Dimensionality reduction\">Dimensionality reduction</a> \u2013 or dimension reduction, is the process of reducing the number of random variables under consideration<sup class=\"reference\" id=\"cite_ref-155\"><a href=\"#cite_note-155\">[155]</a></sup> by obtaining a set of principal variables. It can be divided into <a href=\"/wiki/Feature_selection\" title=\"Feature selection\">feature selection</a> and <a href=\"/wiki/Feature_extraction\" title=\"Feature extraction\">feature extraction</a>.<sup class=\"reference\" id=\"cite_ref-156\"><a href=\"#cite_note-156\">[156]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Discrete system",
      "definition_text":"Discrete system \u2013 is a system with a countable number of states. Discrete systems may be contrasted with continuous systems, which may also be called analog systems. A final discrete system is often modeled with a directed graph and is analyzed for correctness and complexity according to computational theory. Because discrete systems have a countable number of states, they may be described in precise mathematical models. A computer is a finite state machine that may be viewed as a discrete system. Because computers are often used to model not only other discrete systems but continuous systems as well, methods have been developed to represent real-world continuous systems as discrete systems. One such method involves sampling a continuous signal at discrete time intervals.",
      "definition_html":[
         "<li><a href=\"/wiki/Discrete_system\" title=\"Discrete system\">Discrete system</a> \u2013 is a system with a countable number of states. Discrete systems may be contrasted with continuous systems, which may also be called analog systems. A final discrete system is often modeled with a directed <a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">graph</a> and is analyzed for correctness and complexity according to <a class=\"mw-redirect\" href=\"/wiki/Computational_theory\" title=\"Computational theory\">computational theory</a>. Because discrete systems have a countable number of states, they may be described in precise <a class=\"mw-redirect\" href=\"/wiki/Mathematical_models\" title=\"Mathematical models\">mathematical models</a>. A <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> is a <a class=\"mw-redirect\" href=\"/wiki/Finite_state_machine\" title=\"Finite state machine\">finite state machine</a> that may be viewed as a discrete system. Because computers are often used to model not only other discrete systems but continuous systems as well, methods have been developed to represent real-world continuous systems as discrete systems. One such method involves sampling a continuous signal at <a class=\"mw-redirect\" href=\"/wiki/Discrete_time\" title=\"Discrete time\">discrete time</a> intervals.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Distributed artificial intelligence",
      "definition_text":"Distributed artificial intelligence \u2013 (DAI), also called Decentralized Artificial Intelligence,[157] is a subfield of artificial intelligence research dedicated to the development of distributed solutions for problems. DAI is closely related to and a predecessor of the field of multi-agent systems.",
      "definition_html":[
         "<li><a href=\"/wiki/Distributed_artificial_intelligence\" title=\"Distributed artificial intelligence\">Distributed artificial intelligence</a> \u2013 (DAI), also called Decentralized Artificial Intelligence,<sup class=\"reference\" id=\"cite_ref-157\"><a href=\"#cite_note-157\">[157]</a></sup> is a subfield of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> research dedicated to the development of distributed solutions for problems. DAI is closely related to and a predecessor of the field of <a href=\"/wiki/Multi-agent_system\" title=\"Multi-agent system\">multi-agent systems</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Dynamic epistemic logic",
      "definition_text":"Dynamic epistemic logic \u2013 (DEL), is a logical framework dealing with knowledge and information change. Typically, DEL focuses on situations involving multiple agents and studies how their knowledge changes when events occur.",
      "definition_html":[
         "<li><a href=\"/wiki/Dynamic_epistemic_logic\" title=\"Dynamic epistemic logic\">Dynamic epistemic logic</a> \u2013 (DEL), is a logical framework dealing with knowledge and information change. Typically, DEL focuses on situations involving multiple <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">agents</a> and studies how their knowledge changes when <a href=\"/wiki/Event_(philosophy)\" title=\"Event (philosophy)\">events</a> occur.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Eager learning",
      "definition_text":"Eager learning \u2013 is a learning method in which the system tries to construct a general, input-independent target function during training of the system, as opposed to lazy learning, where generalization beyond the training data is delayed until a query is made to the system.[158]",
      "definition_html":[
         "<li><a href=\"/wiki/Eager_learning\" title=\"Eager learning\">Eager learning</a> \u2013 is a learning method in which the system tries to construct a general, input-independent target function during training of the system, as opposed to <a href=\"/wiki/Lazy_learning\" title=\"Lazy learning\">lazy learning</a>, where generalization beyond the training data is delayed until a query is made to the system.<sup class=\"reference\" id=\"cite_ref-158\"><a href=\"#cite_note-158\">[158]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Ebert test",
      "definition_text":"Ebert test \u2013  gauges whether a computer-based synthesized voice[159][160] can tell a joke with sufficient skill to cause people to laugh.[161] It was proposed by film critic Roger Ebert at the 2011 TED conference as a challenge to software developers to have a computerized voice master the inflections, delivery, timing, and intonations of a speaking human.[159] The test is similar to the Turing test proposed by Alan Turing in 1950 as a way to gauge a computer's ability to exhibit intelligent behavior by generating performance indistinguishable from a human being.[162]",
      "definition_html":[
         "<li><a href=\"/wiki/Ebert_test\" title=\"Ebert test\">Ebert test</a> \u2013  gauges whether a computer-based <a href=\"/wiki/Speech_synthesis\" title=\"Speech synthesis\">synthesized voice</a><sup class=\"reference\" id=\"cite_ref-twsL35_159-0\"><a href=\"#cite_note-twsL35-159\">[159]</a></sup><sup class=\"reference\" id=\"cite_ref-twsL34_160-0\"><a href=\"#cite_note-twsL34-160\">[160]</a></sup> can tell a <a class=\"mw-redirect\" href=\"/wiki/Humor\" title=\"Humor\">joke</a> with sufficient skill to cause people to <a href=\"/wiki/Laughter\" title=\"Laughter\">laugh</a>.<sup class=\"reference\" id=\"cite_ref-twsL41_161-0\"><a href=\"#cite_note-twsL41-161\">[161]</a></sup> It was proposed by <a class=\"mw-redirect\" href=\"/wiki/Film_critic\" title=\"Film critic\">film critic</a> <a href=\"/wiki/Roger_Ebert\" title=\"Roger Ebert\">Roger Ebert</a> at the <a href=\"/wiki/TED_(conference)\" title=\"TED (conference)\">2011 TED conference</a> as a challenge to <a class=\"mw-redirect\" href=\"/wiki/Software_developers\" title=\"Software developers\">software developers</a> to have a computerized voice master the inflections, delivery, timing, and intonations of a speaking human.<sup class=\"reference\" id=\"cite_ref-twsL35_159-1\"><a href=\"#cite_note-twsL35-159\">[159]</a></sup> The test is similar to the <a href=\"/wiki/Turing_test\" title=\"Turing test\">Turing test</a> proposed by <a href=\"/wiki/Alan_Turing\" title=\"Alan Turing\">Alan Turing</a> in 1950 as a way to gauge a computer's ability to exhibit intelligent behavior by generating performance indistinguishable from a <a class=\"mw-redirect\" href=\"/wiki/Human_being\" title=\"Human being\">human being</a>.<sup class=\"reference\" id=\"cite_ref-twsL37_162-0\"><a href=\"#cite_note-twsL37-162\">[162]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Echo state network",
      "definition_text":"Echo state network \u2013 The echo state network (ESN),[163][164] is a recurrent neural network with a sparsely connected hidden layer (with typically 1% connectivity). The connectivity and weights of hidden neurons are fixed and randomly assigned. The weights of output neurons can be learned so that the network can (re)produce specific temporal patterns. The main interest of this network is that although its behaviour is non-linear, the only weights that are modified during training are for the synapses that connect the hidden neurons to output neurons. Thus, the error function is quadratic with respect to the parameter vector and can be differentiated easily to a linear system.",
      "definition_html":[
         "<li><a href=\"/wiki/Echo_state_network\" title=\"Echo state network\">Echo state network</a> \u2013 The echo state network (ESN),<sup class=\"reference\" id=\"cite_ref-163\"><a href=\"#cite_note-163\">[163]</a></sup><sup class=\"reference\" id=\"cite_ref-164\"><a href=\"#cite_note-164\">[164]</a></sup> is a <a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">recurrent neural network</a> with a sparsely connected hidden layer (with typically 1% connectivity). The connectivity and weights of hidden <a href=\"/wiki/Artificial_neuron\" title=\"Artificial neuron\">neurons</a> are fixed and randomly assigned. The weights of output neurons can be learned so that the network can (re)produce specific temporal patterns. The main interest of this network is that although its behaviour is non-linear, the only weights that are modified during training are for the synapses that connect the hidden neurons to output neurons. Thus, the error function is quadratic with respect to the parameter vector and can be differentiated easily to a linear system.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Embodied agent",
      "definition_text":"Embodied agent \u2013 also sometimes referred to as an interface agent,[165] is an intelligent agent that interacts with the environment through a physical body within that environment.  Agents that are represented graphically with a body, for example a human or a cartoon animal, are also called embodied agents, although they have only virtual, not physical, embodiment.",
      "definition_html":[
         "<li><a href=\"/wiki/Embodied_agent\" title=\"Embodied agent\">Embodied agent</a> \u2013 also sometimes referred to as an interface agent,<sup class=\"reference\" id=\"cite_ref-165\"><a href=\"#cite_note-165\">[165]</a></sup> is an <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agent</a> that interacts with the environment through a physical body within that environment.  Agents that are represented graphically with a body, for example a human or a cartoon animal, are also called embodied agents, although they have only virtual, not physical, embodiment.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Embodied cognitive science",
      "definition_text":"Embodied cognitive science \u2013 is an interdisciplinary field of research, the aim of which is to explain the mechanisms underlying intelligent behavior.   It comprises three main methodologies: 1) the modeling of psychological and biological systems in a holistic manner that considers the mind and body as a single entity, 2) the formation of a common set of general principles of intelligent behavior, and 3) the experimental use of robotic agents in controlled environments.",
      "definition_html":[
         "<li><a href=\"/wiki/Embodied_cognitive_science\" title=\"Embodied cognitive science\">Embodied cognitive science</a> \u2013 is an interdisciplinary field of research, the aim of which is to explain the mechanisms underlying intelligent behavior.   It comprises three main methodologies: 1) the modeling of psychological and biological systems in a holistic manner that considers the mind and body as a single entity, 2) the formation of a common set of general principles of intelligent behavior, and 3) the experimental use of robotic agents in controlled environments.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Error driven learning",
      "definition_text":"Error-driven learning \u2013 is a sub-area of machine learning concerned with how an agent ought to take actions in an environment so as to minimize some error feedback. It is a type of reinforcement learning.",
      "definition_html":[
         "<li><a href=\"/wiki/Error-driven_learning\" title=\"Error-driven learning\">Error-driven learning</a> \u2013 is a sub-area of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> concerned with how an <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">agent</a> ought to take actions in an <a href=\"/wiki/Environment_(systems)\" title=\"Environment (systems)\">environment</a> so as to minimize some error feedback. It is a type of <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Ensemble averaging",
      "definition_text":"Ensemble averaging \u2013 In machine learning, particularly in the creation of artificial neural networks, ensemble averaging is the process of creating multiple models and combining them to produce a desired output, as opposed to creating just one model.",
      "definition_html":[
         "<li><a href=\"/wiki/Ensemble_averaging_(machine_learning)\" title=\"Ensemble averaging (machine learning)\">Ensemble averaging</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, particularly in the creation of <a class=\"mw-redirect\" href=\"/wiki/Artificial_neural_networks\" title=\"Artificial neural networks\">artificial neural networks</a>, ensemble averaging is the process of creating multiple models and combining them to produce a desired output, as opposed to creating just one model.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Ethics of artificial intelligence",
      "definition_text":"Ethics of artificial intelligence \u2013 is the part of the ethics of technology specific to artificial intelligence.",
      "definition_html":[
         "<li><a href=\"/wiki/Ethics_of_artificial_intelligence\" title=\"Ethics of artificial intelligence\">Ethics of artificial intelligence</a> \u2013 is the part of the <a href=\"/wiki/Ethics_of_technology\" title=\"Ethics of technology\">ethics of technology</a> specific to artificial intelligence.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Evolutionary algorithm",
      "definition_text":"Evolutionary algorithm \u2013  (EA), is a subset of evolutionary computation,[166] a generic population-based metaheuristic optimization algorithm. An EA uses mechanisms inspired by biological evolution, such as reproduction, mutation, recombination, and selection. Candidate solutions to the optimization problem play the role of individuals in a population, and the fitness function determines the quality of the solutions (see also loss function). Evolution of the population then takes place after the repeated application of the above operators.",
      "definition_html":[
         "<li><a href=\"/wiki/Evolutionary_algorithm\" title=\"Evolutionary algorithm\">Evolutionary algorithm</a> \u2013  (EA), is a <a href=\"/wiki/Subset\" title=\"Subset\">subset</a> of <a href=\"/wiki/Evolutionary_computation\" title=\"Evolutionary computation\">evolutionary computation</a>,<sup class=\"reference\" id=\"cite_ref-EVOALG_166-0\"><a href=\"#cite_note-EVOALG-166\">[166]</a></sup> a generic population-based <a href=\"/wiki/Metaheuristic\" title=\"Metaheuristic\">metaheuristic</a> <a class=\"mw-redirect\" href=\"/wiki/Optimization_(mathematics)\" title=\"Optimization (mathematics)\">optimization</a> <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a>. An EA uses mechanisms inspired by <a class=\"mw-redirect\" href=\"/wiki/Biological_evolution\" title=\"Biological evolution\">biological evolution</a>, such as <a href=\"/wiki/Reproduction\" title=\"Reproduction\">reproduction</a>, <a href=\"/wiki/Mutation\" title=\"Mutation\">mutation</a>, <a href=\"/wiki/Genetic_recombination\" title=\"Genetic recombination\">recombination</a>, and <a href=\"/wiki/Natural_selection\" title=\"Natural selection\">selection</a>. <a class=\"mw-redirect\" href=\"/wiki/Candidate_solution\" title=\"Candidate solution\">Candidate solutions</a> to the <a href=\"/wiki/Optimization_problem\" title=\"Optimization problem\">optimization problem</a> play the role of individuals in a population, and the <a href=\"/wiki/Fitness_function\" title=\"Fitness function\">fitness function</a> determines the quality of the solutions (see also <a href=\"/wiki/Loss_function\" title=\"Loss function\">loss function</a>). <a href=\"/wiki/Evolution\" title=\"Evolution\">Evolution</a> of the population then takes place after the repeated application of the above operators.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Evolutionary computation",
      "definition_text":"Evolutionary computation \u2013 is a family of algorithms for global optimization inspired by biological evolution, and the subfield of artificial intelligence and soft computing studying these algorithms. In technical terms, they are a family of population-based trial and error problem solvers with a metaheuristic or stochastic optimization character.",
      "definition_html":[
         "<li><a href=\"/wiki/Evolutionary_computation\" title=\"Evolutionary computation\">Evolutionary computation</a> \u2013 is a family of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> for <a href=\"/wiki/Global_optimization\" title=\"Global optimization\">global optimization</a> inspired by <a class=\"mw-redirect\" href=\"/wiki/Biological_evolution\" title=\"Biological evolution\">biological evolution</a>, and the subfield of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> and <a class=\"new\" href=\"/w/index.php?title=Soft_computing&amp;action=edit&amp;redlink=1\" title=\"Soft computing (page does not exist)\">soft computing</a> studying these algorithms. In technical terms, they are a family of population-based <a href=\"/wiki/Trial_and_error\" title=\"Trial and error\">trial and error</a> problem solvers with a <a href=\"/wiki/Metaheuristic\" title=\"Metaheuristic\">metaheuristic</a> or <a href=\"/wiki/Stochastic_optimization\" title=\"Stochastic optimization\">stochastic optimization</a> character.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Evolving classification function",
      "definition_text":"Evolving classification function \u2013 (ECF), evolving classifier functions or evolving classifiers are used for classifying and clustering in the field of machine learning and artificial intelligence, typically employed for data stream mining tasks in dynamic and changing environments.",
      "definition_html":[
         "<li><a href=\"/wiki/Evolving_classification_function\" title=\"Evolving classification function\">Evolving classification function</a> \u2013 (ECF), evolving classifier functions or evolving <a class=\"mw-redirect\" href=\"/wiki/Classifier_(mathematics)\" title=\"Classifier (mathematics)\">classifiers</a> are used for classifying and clustering in the field of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> and <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a>, typically employed for <a href=\"/wiki/Data_stream_mining\" title=\"Data stream mining\">data stream mining</a> tasks in dynamic and changing environments.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Existential risk",
      "definition_text":"Existential risk \u2013  is the hypothesis that substantial progress in artificial general intelligence (AGI) could someday result in human extinction or some other unrecoverable global catastrophe.[167][168][169]",
      "definition_html":[
         "<li><a href=\"/wiki/Existential_risk_from_artificial_general_intelligence\" title=\"Existential risk from artificial general intelligence\">Existential risk</a> \u2013  is the hypothesis that substantial progress in <a href=\"/wiki/Artificial_general_intelligence\" title=\"Artificial general intelligence\">artificial general intelligence</a> (AGI) could someday result in <a href=\"/wiki/Human_extinction\" title=\"Human extinction\">human extinction</a> or some other unrecoverable <a href=\"/wiki/Global_catastrophic_risk\" title=\"Global catastrophic risk\">global catastrophe</a>.<sup class=\"reference\" id=\"cite_ref-aima_167-0\"><a href=\"#cite_note-aima-167\">[167]</a></sup><sup class=\"reference\" id=\"cite_ref-168\"><a href=\"#cite_note-168\">[168]</a></sup><sup class=\"reference\" id=\"cite_ref-169\"><a href=\"#cite_note-169\">[169]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Expert system",
      "definition_text":"Expert system \u2013 is a computer system that emulates the decision-making ability of a human expert.[170] Expert systems are designed to solve complex problems by reasoning through bodies of knowledge, represented mainly as if\u2013then rules rather than through conventional procedural code.[171]",
      "definition_html":[
         "<li><a href=\"/wiki/Expert_system\" title=\"Expert system\">Expert system</a> \u2013 is a computer system that emulates the decision-making ability of a human expert.<sup class=\"reference\" id=\"cite_ref-Jackson1998_170-0\"><a href=\"#cite_note-Jackson1998-170\">[170]</a></sup> Expert systems are designed to solve complex problems by <a href=\"/wiki/Automated_reasoning\" title=\"Automated reasoning\">reasoning</a> through bodies of knowledge, represented mainly as <a href=\"/wiki/Rule-based_system\" title=\"Rule-based system\">if\u2013then rules</a> rather than through conventional <a href=\"/wiki/Procedural_programming\" title=\"Procedural programming\">procedural code</a>.<sup class=\"reference\" id=\"cite_ref-171\"><a href=\"#cite_note-171\">[171]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fast and frugal trees",
      "definition_text":"Fast-and-frugal trees \u2013 a type of classification tree. Fast-and-frugal trees can be used as decision-making tools which operate as lexicographic classifiers, and, if required, associate an action (decision) to each class or category.[172]",
      "definition_html":[
         "<li><a href=\"/wiki/Fast-and-frugal_trees\" title=\"Fast-and-frugal trees\">Fast-and-frugal trees</a> \u2013 a type of <a class=\"mw-redirect\" href=\"/wiki/Classification_tree\" title=\"Classification tree\">classification tree</a>. Fast-and-frugal trees can be used as decision-making tools which operate as lexicographic classifiers, and, if required, associate an action (decision) to each class or category.<sup class=\"reference\" id=\"cite_ref-naive_172-0\"><a href=\"#cite_note-naive-172\">[172]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Feature extraction",
      "definition_text":"Feature extraction \u2013 In machine learning, pattern recognition and in image processing, feature extraction starts from an initial set of measured data and builds derived values (features) intended to be informative and non-redundant, facilitating the subsequent learning and generalization steps, and in some cases leading to better human interpretations.",
      "definition_html":[
         "<li><a href=\"/wiki/Feature_extraction\" title=\"Feature extraction\">Feature extraction</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, <a href=\"/wiki/Pattern_recognition\" title=\"Pattern recognition\">pattern recognition</a> and in <a class=\"mw-redirect\" href=\"/wiki/Image_processing\" title=\"Image processing\">image processing</a>, feature extraction starts from an initial set of measured data and builds derived values (<a href=\"/wiki/Feature_(machine_learning)\" title=\"Feature (machine learning)\">features</a>) intended to be informative and non-redundant, facilitating the subsequent learning and generalization steps, and in some cases leading to better human interpretations.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Feature learning",
      "definition_text":"Feature learning \u2013 In machine learning, feature learning or representation learning[173] is a set of techniques that allows a system to automatically discover the representations needed for feature detection or classification from raw data. This replaces manual feature engineering and allows a machine to both learn the features and use them to perform a specific task.",
      "definition_html":[
         "<li><a href=\"/wiki/Feature_learning\" title=\"Feature learning\">Feature learning</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, feature learning or representation learning<sup class=\"reference\" id=\"cite_ref-pami_173-0\"><a href=\"#cite_note-pami-173\">[173]</a></sup> is a set of techniques that allows a system to automatically discover the representations needed for feature detection or classification from raw data. This replaces manual <a href=\"/wiki/Feature_engineering\" title=\"Feature engineering\">feature engineering</a> and allows a machine to both learn the features and use them to perform a specific task.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Feature selection",
      "definition_text":"Feature selection \u2013 In machine learning and statistics, feature selection, also known as variable selection, attribute selection or variable subset selection, is the process of selecting a subset of relevant features (variables, predictors) for use in model construction.",
      "definition_html":[
         "<li><a href=\"/wiki/Feature_selection\" title=\"Feature selection\">Feature selection</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> and <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a>, feature selection, also known as variable selection, attribute selection or variable subset selection, is the process of selecting a subset of relevant <a href=\"/wiki/Feature_(machine_learning)\" title=\"Feature (machine learning)\">features</a> (variables, predictors) for use in model construction.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Federated learning",
      "definition_text":"Federated learning \u2013 a type of machine learning that allows for training on multiple devices with decentralized data, thus helping preserve the privacy of individual users and their data.",
      "definition_html":[
         "<li><a href=\"/wiki/Federated_learning\" title=\"Federated learning\">Federated learning</a> \u2013 a type of machine learning that allows for training on multiple devices with decentralized data, thus helping preserve the privacy of individual users and their data.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"First order logic",
      "definition_text":"First-order logic (also known as first-order predicate calculus and predicate logic) \u2013 a collection of formal systems used in mathematics, philosophy, linguistics, and computer science. First-order logic uses quantified variables over non-logical objects and allows the use of sentences that contain variables, so that rather than propositions such as Socrates is a man one can have expressions in the form \"there exists X such that X is Socrates and X is a man\" and there exists is a quantifier while X is a variable.[174] This distinguishes it from propositional logic, which does not use quantifiers or relations.[175]",
      "definition_html":[
         "<li><a href=\"/wiki/First-order_logic\" title=\"First-order logic\">First-order logic</a> (also known as first-order predicate calculus and predicate logic) \u2013 a collection of <a href=\"/wiki/Formal_system\" title=\"Formal system\">formal systems</a> used in <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, <a href=\"/wiki/Philosophy\" title=\"Philosophy\">philosophy</a>, <a href=\"/wiki/Linguistics\" title=\"Linguistics\">linguistics</a>, and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>. First-order logic uses <a class=\"mw-redirect\" href=\"/wiki/Quantification_(logic)\" title=\"Quantification (logic)\">quantified variables</a> over non-logical objects and allows the use of sentences that contain variables, so that rather than propositions such as <i>Socrates is a man</i> one can have expressions in the form \"there exists X such that X is <a href=\"/wiki/Socrates\" title=\"Socrates\">Socrates</a> and X is a man\" and <i>there exists</i> is a quantifier while <i>X</i> is a variable.<sup class=\"reference\" id=\"cite_ref-auto_174-0\"><a href=\"#cite_note-auto-174\">[174]</a></sup> This distinguishes it from <a class=\"mw-redirect\" href=\"/wiki/Propositional_logic\" title=\"Propositional logic\">propositional logic</a>, which does not use quantifiers or relations.<sup class=\"reference\" id=\"cite_ref-175\"><a href=\"#cite_note-175\">[175]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fluent",
      "definition_text":"Fluent \u2013\u00a0a condition that can change over time. In logical approaches to reasoning about actions, fluents can be represented in first-order logic by predicates having an argument that depends on time.",
      "definition_html":[
         "<li><a href=\"/wiki/Fluent_(artificial_intelligence)\" title=\"Fluent (artificial intelligence)\">Fluent</a> \u2013\u00a0a condition that can change over time. In <a href=\"/wiki/Logic\" title=\"Logic\">logical</a> approaches to reasoning about actions, fluents can be represented in <a href=\"/wiki/First-order_logic\" title=\"First-order logic\">first-order logic</a> by <a class=\"mw-redirect\" href=\"/wiki/Predicate_(logic)\" title=\"Predicate (logic)\">predicates</a> having an argument that depends on time.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Formal language",
      "definition_text":"Formal language \u2013 a set of words whose letters are taken from an alphabet and are well-formed according to a specific set of rules.",
      "definition_html":[
         "<li><a href=\"/wiki/Formal_language\" title=\"Formal language\">Formal language</a> \u2013 a set of <a href=\"/wiki/String_(computer_science)\" title=\"String (computer science)\">words</a> whose <a href=\"/wiki/Symbol_(formal)\" title=\"Symbol (formal)\">letters</a> are taken from an <a class=\"mw-redirect\" href=\"/wiki/Alphabet_(computer_science)\" title=\"Alphabet (computer science)\">alphabet</a> and are <a href=\"/wiki/Well-formedness\" title=\"Well-formedness\">well-formed</a> according to a specific set of rules.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Forward chaining",
      "definition_text":"Forward chaining \u2013   (or forward reasoning) is one of the two main methods of reasoning when using an inference engine and can be described logically as repeated application of modus ponens. Forward chaining is a popular implementation strategy for expert systems, business and production rule systems. The opposite of forward chaining is backward chaining.  Forward chaining starts with the available data and uses inference rules to extract more data (from an end user, for example) until a goal is reached. An inference engine using forward chaining searches the inference rules until it finds one where the antecedent (If clause) is known to be true. When such a rule is found, the engine can conclude, or infer, the consequent (Then clause), resulting in the addition of new information to its data.[176]",
      "definition_html":[
         "<li><a href=\"/wiki/Forward_chaining\" title=\"Forward chaining\">Forward chaining</a> \u2013   (or forward reasoning) is one of the two main methods of reasoning when using an <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engine</a> and can be described <a class=\"mw-redirect\" href=\"/wiki/Logically\" title=\"Logically\">logically</a> as repeated application of <i><a href=\"/wiki/Modus_ponens\" title=\"Modus ponens\">modus ponens</a></i>. Forward chaining is a popular implementation strategy for <a href=\"/wiki/Expert_system\" title=\"Expert system\">expert systems</a>, <a href=\"/wiki/Business_rules_engine\" title=\"Business rules engine\">business</a> and <a href=\"/wiki/Production_system_(computer_science)\" title=\"Production system (computer science)\">production rule systems</a>. The opposite of forward chaining is <a href=\"/wiki/Backward_chaining\" title=\"Backward chaining\">backward chaining</a>.  Forward chaining starts with the available <a href=\"/wiki/Data\" title=\"Data\">data</a> and uses inference rules to extract more data (from an end user, for example) until a <a href=\"/wiki/Goal\" title=\"Goal\">goal</a> is reached. An <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engine</a> using forward chaining searches the inference rules until it finds one where the <a href=\"/wiki/Antecedent_(logic)\" title=\"Antecedent (logic)\">antecedent</a> (If clause) is known to be true. When such a rule is found, the engine can conclude, or infer, the <a href=\"/wiki/Consequent\" title=\"Consequent\">consequent</a> (Then clause), resulting in the addition of new <a href=\"/wiki/Information\" title=\"Information\">information</a> to its data.<sup class=\"reference\" id=\"cite_ref-176\"><a href=\"#cite_note-176\">[176]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Frame",
      "definition_text":"Frame \u2013\u00a0an artificial intelligence data structure used to divide knowledge into substructures by representing \"stereotyped situations.\" Frames are the primary data structure used in artificial intelligence frame language.",
      "definition_html":[
         "<li><a href=\"/wiki/Frame_(artificial_intelligence)\" title=\"Frame (artificial intelligence)\">Frame</a> \u2013\u00a0an artificial intelligence <a href=\"/wiki/Data_structure\" title=\"Data structure\">data structure</a> used to divide <a href=\"/wiki/Knowledge\" title=\"Knowledge\">knowledge</a> into substructures by representing \"<a href=\"/wiki/Stereotype\" title=\"Stereotype\">stereotyped</a> situations.\" Frames are the primary data structure used in artificial intelligence <a href=\"/wiki/Frame_language\" title=\"Frame language\">frame language</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Frame language",
      "definition_text":"Frame language \u2013 a technology used for knowledge representation in artificial intelligence. Frames are stored as ontologies of sets and subsets of the frame concepts. They are similar to class hierarchies in object-oriented languages although their fundamental design goals are different. Frames are focused on explicit and intuitive representation of knowledge whereas objects focus on encapsulation and information hiding. Frames originated in AI research and objects primarily in software engineering. However, in practice the techniques and capabilities of frame and object-oriented languages overlap significantly.",
      "definition_html":[
         "<li><a href=\"/wiki/Frame_language\" title=\"Frame language\">Frame language</a> \u2013 a technology used for <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">knowledge representation</a> in artificial intelligence. Frames are stored as <a href=\"/wiki/Ontology_(information_science)\" title=\"Ontology (information science)\">ontologies</a> of <a href=\"/wiki/Set_theory\" title=\"Set theory\">sets</a> and subsets of the <a href=\"/wiki/Frame_(artificial_intelligence)\" title=\"Frame (artificial intelligence)\">frame concepts</a>. They are similar to class hierarchies in <a class=\"mw-redirect\" href=\"/wiki/Object-oriented_languages\" title=\"Object-oriented languages\">object-oriented languages</a> although their fundamental design goals are different. Frames are focused on explicit and intuitive representation of knowledge whereas objects focus on <a class=\"mw-redirect\" href=\"/wiki/Encapsulation_(object-oriented_programming)\" title=\"Encapsulation (object-oriented programming)\">encapsulation</a> and <a href=\"/wiki/Information_hiding\" title=\"Information hiding\">information hiding</a>. Frames originated in AI research and objects primarily in <a href=\"/wiki/Software_engineering\" title=\"Software engineering\">software engineering</a>. However, in practice the techniques and capabilities of frame and object-oriented languages overlap significantly.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Frame problem",
      "definition_text":"Frame problem \u2013 is the problem of finding adequate collections of axioms for a viable description of a robot environment.[177]",
      "definition_html":[
         "<li><a href=\"/wiki/Frame_problem\" title=\"Frame problem\">Frame problem</a> \u2013 is the problem of finding adequate collections of axioms for a viable description of a robot environment.<sup class=\"reference\" id=\"cite_ref-177\"><a href=\"#cite_note-177\">[177]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Friendly artificial intelligence",
      "definition_text":"Friendly artificial intelligence (also friendly AI or FAI) \u2013 a hypothetical artificial general intelligence (AGI) that would have a positive effect on humanity. It is a part of the ethics of artificial intelligence and is closely related to machine ethics. While machine ethics is concerned with how an artificially intelligent agent should behave, friendly artificial intelligence research is focused on how to practically bring about this behaviour and ensuring it is adequately constrained.",
      "definition_html":[
         "<li><a href=\"/wiki/Friendly_artificial_intelligence\" title=\"Friendly artificial intelligence\">Friendly artificial intelligence</a> (also friendly AI or FAI) \u2013 a hypothetical <a href=\"/wiki/Artificial_general_intelligence\" title=\"Artificial general intelligence\">artificial general intelligence</a> (AGI) that would have a positive effect on humanity. It is a part of the <a href=\"/wiki/Ethics_of_artificial_intelligence\" title=\"Ethics of artificial intelligence\">ethics of artificial intelligence</a> and is closely related to <a href=\"/wiki/Machine_ethics\" title=\"Machine ethics\">machine ethics</a>. While machine ethics is concerned with how an artificially intelligent agent should behave, friendly artificial intelligence research is focused on how to practically bring about this behaviour and ensuring it is adequately constrained.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Futures studies",
      "definition_text":"Futures studies \u2013 is the study of postulating possible, probable, and preferable futures and the worldviews and myths that underlie them.[178]",
      "definition_html":[
         "<li><a href=\"/wiki/Futures_studies\" title=\"Futures studies\">Futures studies</a> \u2013 is the study of postulating possible, probable, and preferable <a href=\"/wiki/Future\" title=\"Future\">futures</a> and the worldviews and myths that underlie them.<sup class=\"reference\" id=\"cite_ref-Sardar,_Z._2010_pp._177_178-0\"><a href=\"#cite_note-Sardar,_Z._2010_pp._177-178\">[178]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fuzzy control system",
      "definition_text":"Fuzzy control system \u2013\u00a0a control system based on fuzzy logic\u2014a mathematical system that analyzes analog input values in terms of logical variables that take on continuous values between 0 and 1, in contrast to classical or digital logic, which operates on discrete values of either 1 or 0 (true or false, respectively).[179][180]",
      "definition_html":[
         "<li><a href=\"/wiki/Fuzzy_control_system\" title=\"Fuzzy control system\">Fuzzy control system</a> \u2013\u00a0a <a href=\"/wiki/Control_system\" title=\"Control system\">control system</a> based on <a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">fuzzy logic</a>\u2014a <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematical</a> system that analyzes <a href=\"/wiki/Analog_signal\" title=\"Analog signal\">analog</a> input values in terms of <a href=\"/wiki/Mathematical_logic\" title=\"Mathematical logic\">logical</a> variables that take on continuous values between 0 and 1, in contrast to classical or <a href=\"/wiki/Digital_data\" title=\"Digital data\">digital</a> logic, which operates on discrete values of either 1 or 0 (true or false, respectively).<sup class=\"reference\" id=\"cite_ref-Pedrycz_179-0\"><a href=\"#cite_note-Pedrycz-179\">[179]</a></sup><sup class=\"reference\" id=\"cite_ref-H\u00e1jek_180-0\"><a href=\"#cite_note-H\u00e1jek-180\">[180]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fuzzy logic",
      "definition_text":"Fuzzy logic \u2013\u00a0a simple form for the many-valued logic, in which the truth values of variables may have any degree of \"Truthfulness\" that can be represented by any real number in the range between 0 (as in Completely False) and 1 (as in Completely True) inclusive. Consequently, It is employed to handle the concept of partial truth, where the truth value may range between completely true and completely false. In contrast to Boolean logic, where the truth values of variables may have the integer values 0 or 1 only.",
      "definition_html":[
         "<li><a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">Fuzzy logic</a> \u2013\u00a0a simple form for the <a href=\"/wiki/Many-valued_logic\" title=\"Many-valued logic\">many-valued logic</a>, in which the <a href=\"/wiki/Truth_value\" title=\"Truth value\">truth values</a> of variables may have any degree of \"<i>Truthfulness</i>\" that can be represented by any real number in the range between 0 (as in Completely False) and 1 (as in Completely True) inclusive. Consequently, It is employed to handle the concept of partial truth, where the truth value may range between completely true and completely false. In contrast to <a href=\"/wiki/Boolean_algebra\" title=\"Boolean algebra\">Boolean logic</a>, where the truth values of variables may have the integer values 0 or 1 only.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fuzzy rule",
      "definition_text":"Fuzzy rule \u2013 Fuzzy rules are used within fuzzy logic systems to infer an output based on input variables.",
      "definition_html":[
         "<li><a href=\"/wiki/Fuzzy_rule\" title=\"Fuzzy rule\">Fuzzy rule</a> \u2013 Fuzzy rules are used within <a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">fuzzy logic systems</a> to infer an output based on input variables.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Fuzzy set",
      "definition_text":"Fuzzy set \u2013 In classical set theory, the membership of elements in a set is assessed in binary terms according to a bivalent condition \u2014 an element either belongs or does not belong to the set. By contrast, fuzzy set theory permits the gradual assessment of the membership of elements in a set; this is described with the aid of a membership function valued in the real unit interval [0,\u00a01]. Fuzzy sets generalize classical sets, since the indicator functions (aka characteristic functions) of classical sets are special cases of the membership functions of fuzzy sets, if the latter only take values 0 or 1.[181] In fuzzy set theory, classical bivalent sets are usually called crisp sets. The fuzzy set theory can be used in a wide range of domains in which information is incomplete or imprecise, such as bioinformatics.[182]",
      "definition_html":[
         "<li><a href=\"/wiki/Fuzzy_set\" title=\"Fuzzy set\">Fuzzy set</a> \u2013 In classical <a href=\"/wiki/Set_theory\" title=\"Set theory\">set theory</a>, the membership of elements in a set is assessed in binary terms according to a <a href=\"/wiki/Principle_of_bivalence\" title=\"Principle of bivalence\">bivalent condition</a> \u2014 an element either belongs or does not belong to the set. By contrast, fuzzy set theory permits the gradual assessment of the membership of elements in a set; this is described with the aid of a <a href=\"/wiki/Membership_function_(mathematics)\" title=\"Membership function (mathematics)\">membership function</a> valued in the real unit interval [0,\u00a01]. Fuzzy sets generalize classical sets, since the <a href=\"/wiki/Indicator_function\" title=\"Indicator function\">indicator functions</a> (aka characteristic functions) of classical sets are special cases of the membership functions of fuzzy sets, if the latter only take values 0 or 1.<sup class=\"reference\" id=\"cite_ref-:0_181-0\"><a href=\"#cite_note-:0-181\">[181]</a></sup> In fuzzy set theory, classical bivalent sets are usually called <a class=\"mw-redirect\" href=\"/wiki/Crisp_set\" title=\"Crisp set\"><i>crisp</i> sets</a>. The fuzzy set theory can be used in a wide range of domains in which information is incomplete or imprecise, such as <a href=\"/wiki/Bioinformatics\" title=\"Bioinformatics\">bioinformatics</a>.<sup class=\"reference\" id=\"cite_ref-182\"><a href=\"#cite_note-182\">[182]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Game theory",
      "definition_text":"Game theory \u2013 is the study of mathematical models of strategic interaction between rational decision-makers.[183]",
      "definition_html":[
         "<li><a href=\"/wiki/Game_theory\" title=\"Game theory\">Game theory</a> \u2013 is the study of <a href=\"/wiki/Mathematical_model\" title=\"Mathematical model\">mathematical models</a> of strategic interaction between rational decision-makers.<sup class=\"reference\" id=\"cite_ref-Myerson_183-0\"><a href=\"#cite_note-Myerson-183\">[183]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Generative adversarial network",
      "definition_text":"Generative adversarial network \u2013 (GAN), is a class of machine learning systems. Two neural networks contest with each other in a zero-sum game framework.",
      "definition_html":[
         "<li><a href=\"/wiki/Generative_adversarial_network\" title=\"Generative adversarial network\">Generative adversarial network</a> \u2013 (GAN), is a class of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> systems. Two <a href=\"/wiki/Neural_network\" title=\"Neural network\">neural networks</a> contest with each other in a <a href=\"/wiki/Zero-sum_game\" title=\"Zero-sum game\">zero-sum game</a> framework.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Genetic algorithm",
      "definition_text":"Genetic algorithm \u2013 (GA), is a metaheuristic inspired by the process of natural selection that belongs to the larger class of evolutionary algorithms (EA). Genetic algorithms are commonly used to generate high-quality solutions to optimization and search problems by relying on bio-inspired operators such as mutation, crossover and selection.[184]",
      "definition_html":[
         "<li><a href=\"/wiki/Genetic_algorithm\" title=\"Genetic algorithm\">Genetic algorithm</a> \u2013 (GA), is a <a href=\"/wiki/Metaheuristic\" title=\"Metaheuristic\">metaheuristic</a> inspired by the process of <a href=\"/wiki/Natural_selection\" title=\"Natural selection\">natural selection</a> that belongs to the larger class of <a href=\"/wiki/Evolutionary_algorithm\" title=\"Evolutionary algorithm\">evolutionary algorithms</a> (EA). Genetic algorithms are commonly used to generate high-quality solutions to <a class=\"mw-redirect\" href=\"/wiki/Optimization_(mathematics)\" title=\"Optimization (mathematics)\">optimization</a> and <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search problems</a> by relying on bio-inspired operators such as <a href=\"/wiki/Mutation_(genetic_algorithm)\" title=\"Mutation (genetic algorithm)\">mutation</a>, <a href=\"/wiki/Crossover_(genetic_algorithm)\" title=\"Crossover (genetic algorithm)\">crossover</a> and <a href=\"/wiki/Selection_(genetic_algorithm)\" title=\"Selection (genetic algorithm)\">selection</a>.<sup class=\"reference\" id=\"cite_ref-FOOTNOTEMitchell19962_184-0\"><a href=\"#cite_note-FOOTNOTEMitchell19962-184\">[184]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Genetic operator",
      "definition_text":"Genetic operator \u2013 is an operator used in genetic algorithms to guide the algorithm towards a solution to a given problem. There are three main types of operators (mutation, crossover and selection), which must work in conjunction with one another in order for the algorithm to be successful.",
      "definition_html":[
         "<li><a href=\"/wiki/Genetic_operator\" title=\"Genetic operator\">Genetic operator</a> \u2013 is an <a class=\"mw-redirect\" href=\"/wiki/Operator_(programming)\" title=\"Operator (programming)\">operator</a> used in <a class=\"mw-redirect\" href=\"/wiki/Genetic_algorithms\" title=\"Genetic algorithms\">genetic algorithms</a> to guide the algorithm towards a solution to a given problem. There are three main types of operators (<a href=\"/wiki/Mutation_(genetic_algorithm)\" title=\"Mutation (genetic algorithm)\">mutation</a>, <a href=\"/wiki/Crossover_(genetic_algorithm)\" title=\"Crossover (genetic algorithm)\">crossover</a> and <a href=\"/wiki/Selection_(genetic_algorithm)\" title=\"Selection (genetic algorithm)\">selection</a>), which must work in conjunction with one another in order for the algorithm to be successful.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Glowworm swarm optimization",
      "definition_text":"Glowworm swarm optimization \u2013  is a swarm intelligence optimization algorithm developed based on the behaviour of glowworms (also known as fireflies or lightning bugs).",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Glowworm_swarm_optimization\" title=\"Glowworm swarm optimization\">Glowworm swarm optimization</a> \u2013  is a <a href=\"/wiki/Swarm_intelligence\" title=\"Swarm intelligence\">swarm intelligence</a> <a href=\"/wiki/Mathematical_optimization\" title=\"Mathematical optimization\">optimization</a> <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a> developed based on the behaviour of <a href=\"/wiki/Glowworm\" title=\"Glowworm\">glowworms</a> (also known as fireflies or lightning bugs).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Graph (abstract data type)",
      "definition_text":"Graph (abstract data type) \u2013 In computer science, a graph is an abstract data type that is meant to implement the undirected graph and directed graph concepts from mathematics; specifically, the field of graph theory.",
      "definition_html":[
         "<li><a href=\"/wiki/Graph_(abstract_data_type)\" title=\"Graph (abstract data type)\">Graph (abstract data type)</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, a graph is an <a href=\"/wiki/Abstract_data_type\" title=\"Abstract data type\">abstract data type</a> that is meant to implement the <a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">undirected graph</a> and <a href=\"/wiki/Directed_graph\" title=\"Directed graph\">directed graph</a> concepts from <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>; specifically, the field of <a href=\"/wiki/Graph_theory\" title=\"Graph theory\">graph theory</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Graph (discrete mathematics)",
      "definition_text":"Graph (discrete mathematics) \u2013 In mathematics, and more specifically in graph theory, a graph is a structure amounting to a set of objects in which some pairs of the objects are in some sense \"related\". The objects correspond to mathematical abstractions called vertices (also called nodes or points) and each of the related pairs of vertices is called an edge (also called an arc or line).[185]",
      "definition_html":[
         "<li><a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">Graph (discrete mathematics)</a> \u2013 In <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, and more specifically in <a href=\"/wiki/Graph_theory\" title=\"Graph theory\">graph theory</a>, a graph is a structure amounting to a set of objects in which some pairs of the objects are in some sense \"related\". The objects correspond to mathematical abstractions called <i><a href=\"/wiki/Vertex_(graph_theory)\" title=\"Vertex (graph theory)\">vertices</a></i> (also called <i>nodes</i> or <i>points</i>) and each of the related pairs of vertices is called an <i>edge</i> (also called an <i>arc</i> or <i>line</i>).<sup class=\"reference\" id=\"cite_ref-185\"><a href=\"#cite_note-185\">[185]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Graph database",
      "definition_text":"Graph database \u2013 (GDB[186]), is a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data. A key concept of the system is the graph (or edge or relationship), which directly relates data items in the store a collection of nodes of data and edges representing the relationships between the nodes. The relationships allow data in the store to be linked together directly, and in many cases retrieved with one operation. Graph databases hold the relationships between data as a priority. Querying relationships within a graph database is fast because they are perpetually stored within the database itself. Relationships can be intuitively visualized using graph databases, making it useful for heavily inter-connected data.[187]",
      "definition_html":[
         "<li><a href=\"/wiki/Graph_database\" title=\"Graph database\">Graph database</a> \u2013 (GDB<sup class=\"reference\" id=\"cite_ref-186\"><a href=\"#cite_note-186\">[186]</a></sup>), is a <a href=\"/wiki/Database\" title=\"Database\">database</a> that uses <a class=\"mw-redirect\" href=\"/wiki/Graph_(data_structure)\" title=\"Graph (data structure)\">graph structures</a> for <a href=\"/wiki/Semantic_query\" title=\"Semantic query\">semantic queries</a> with <a class=\"mw-redirect\" href=\"/wiki/Node_(graph_theory)\" title=\"Node (graph theory)\">nodes</a>, <a class=\"mw-redirect\" href=\"/wiki/Edge_(graph_theory)\" title=\"Edge (graph theory)\">edges</a> and properties to represent and store data. A key concept of the system is the <i>graph</i> (or <i>edge</i> or <i>relationship</i>), which directly relates data items in the store a collection of nodes of data and edges representing the relationships between the nodes. The relationships allow data in the store to be linked together directly, and in many cases retrieved with one operation. Graph databases hold the relationships between data as a priority. Querying relationships within a graph database is fast because they are perpetually stored within the database itself. Relationships can be intuitively visualized using graph databases, making it useful for heavily inter-connected data.<sup class=\"reference\" id=\"cite_ref-187\"><a href=\"#cite_note-187\">[187]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Graph theory",
      "definition_text":"Graph theory \u2013  is the study of graphs, which are mathematical structures used to model pairwise relations between objects.",
      "definition_html":[
         "<li><a href=\"/wiki/Graph_theory\" title=\"Graph theory\">Graph theory</a> \u2013  is the study of <i><a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">graphs</a></i>, which are mathematical structures used to model pairwise relations between objects.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Graph traversal",
      "definition_text":"Graph traversal \u2013  (also known as graph search) refers to the process of visiting (checking and/or updating) each vertex in a graph. Such traversals are classified by the order in which the vertices are visited. Tree traversal is a special case of graph traversal.",
      "definition_html":[
         "<li><a href=\"/wiki/Graph_traversal\" title=\"Graph traversal\">Graph traversal</a> \u2013  (also known as graph search) refers to the process of visiting (checking and/or updating) each vertex in a <a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">graph</a>. Such traversals are classified by the order in which the vertices are visited. <a href=\"/wiki/Tree_traversal\" title=\"Tree traversal\">Tree traversal</a> is a special case of graph traversal.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Heuristic",
      "definition_text":"Heuristic \u2013   is a technique designed for solving a problem more quickly when classic methods are too slow, or for finding an approximate solution when classic methods fail to find any exact solution.  This is achieved by trading optimality, completeness, accuracy, or precision for speed.  In a way, it can be considered a shortcut.  A heuristic function, also called simply a heuristic, is a function that ranks alternatives in search algorithms at each branching step based on available information to decide which branch to follow. For example, it may approximate the exact solution.[188]",
      "definition_html":[
         "<li><a href=\"/wiki/Heuristic_(computer_science)\" title=\"Heuristic (computer science)\">Heuristic</a> \u2013   is a technique designed for <a href=\"/wiki/Problem_solving\" title=\"Problem solving\">solving a problem</a> more quickly when classic methods are too slow, or for finding an approximate solution when classic methods fail to find any exact solution.  This is achieved by trading optimality, completeness, <a href=\"/wiki/Accuracy_and_precision\" title=\"Accuracy and precision\">accuracy</a>, or <a href=\"/wiki/Accuracy_and_precision\" title=\"Accuracy and precision\">precision</a> for speed.  In a way, it can be considered a shortcut.  A heuristic function, also called simply a heuristic, is a <a href=\"/wiki/Function_(mathematics)\" title=\"Function (mathematics)\">function</a> that ranks alternatives in <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search algorithms</a> at each branching step based on available information to decide which branch to follow. For example, it may approximate the exact solution.<sup class=\"reference\" id=\"cite_ref-188\"><a href=\"#cite_note-188\">[188]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"artificial neural network",
      "definition_text":"Hidden layer \u2013 an internal layer of neurons in an artificial neural network, not dedicated to input or output",
      "definition_html":[
         "<li><span id=\"hidden_layer\"></span>Hidden layer \u2013 an internal layer of neurons in an <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a>, not dedicated to input or output</li>",
         "<span id=\"hidden_layer\"></span>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"artificial neural network",
      "definition_text":"Hidden unit \u2013 an neuron in a hidden layer in an artificial neural network",
      "definition_html":[
         "<li><span id=\"hidden_unit\"></span>Hidden unit \u2013 an neuron in a hidden layer in an <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a></li>",
         "<span id=\"hidden_unit\"></span>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Hyper heuristic",
      "definition_text":"Hyper-heuristic \u2013 is a heuristic search method that seeks to automate, often by the incorporation of machine learning techniques, the process of selecting, combining, generating or adapting several simpler heuristics (or components of such heuristics) to efficiently solve computational search problems. One of the motivations for studying hyper-heuristics is to build systems which can handle classes of problems rather than solving just one problem.[189][190][191]",
      "definition_html":[
         "<li><a href=\"/wiki/Hyper-heuristic\" title=\"Hyper-heuristic\">Hyper-heuristic</a> \u2013 is a <a href=\"/wiki/Heuristic\" title=\"Heuristic\">heuristic</a> search method that seeks to automate, often by the incorporation of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> techniques, the process of selecting, combining, generating or adapting several simpler heuristics (or components of such heuristics) to efficiently solve computational search problems. One of the motivations for studying hyper-heuristics is to build systems which can handle classes of problems rather than solving just one problem.<sup class=\"reference\" id=\"cite_ref-189\"><a href=\"#cite_note-189\">[189]</a></sup><sup class=\"reference\" id=\"cite_ref-Ross05_190-0\"><a href=\"#cite_note-Ross05-190\">[190]</a></sup><sup class=\"reference\" id=\"cite_ref-Ozcan08_191-0\"><a href=\"#cite_note-Ozcan08-191\">[191]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"IEEE Computational Intelligence Society",
      "definition_text":"IEEE Computational Intelligence Society \u2013 is a professional society of the Institute of Electrical and Electronics Engineers (IEEE) focussing on \"the theory, design, application, and development of biologically and linguistically motivated computational paradigms emphasizing neural networks, connectionist systems, genetic algorithms, evolutionary programming, fuzzy systems, and hybrid intelligent systems in which these paradigms are contained\".[192]",
      "definition_html":[
         "<li><a href=\"/wiki/IEEE_Computational_Intelligence_Society\" title=\"IEEE Computational Intelligence Society\">IEEE Computational Intelligence Society</a> \u2013 is a <a class=\"mw-redirect\" href=\"/wiki/Professional_society\" title=\"Professional society\">professional society</a> of the <a href=\"/wiki/Institute_of_Electrical_and_Electronics_Engineers\" title=\"Institute of Electrical and Electronics Engineers\">Institute of Electrical and Electronics Engineers</a> (IEEE) focussing on \"the theory, design, application, and development of biologically and linguistically motivated computational paradigms emphasizing <a class=\"mw-redirect\" href=\"/wiki/Neural_networks\" title=\"Neural networks\">neural networks</a>, connectionist systems, <a class=\"mw-redirect\" href=\"/wiki/Genetic_algorithms\" title=\"Genetic algorithms\">genetic algorithms</a>, <a href=\"/wiki/Evolutionary_programming\" title=\"Evolutionary programming\">evolutionary programming</a>, fuzzy systems, and hybrid intelligent systems in which these paradigms are contained\".<sup class=\"reference\" id=\"cite_ref-IEEE_CIS_Scope_192-0\"><a href=\"#cite_note-IEEE_CIS_Scope-192\">[192]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Incremental learning",
      "definition_text":"Incremental learning \u2013 is a method of machine learning, in which input data is continuously used to extend the existing model's knowledge i.e. to further train the model. It represents a dynamic technique of supervised learning and unsupervised learning that can be applied when training data becomes available gradually over time or its size is out of system memory limits. Algorithms that can facilitate incremental learning are known as incremental machine learning algorithms.",
      "definition_html":[
         "<li><a href=\"/wiki/Incremental_learning\" title=\"Incremental learning\">Incremental learning</a> \u2013 is a method of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, in which input data is continuously used to extend the existing model's knowledge i.e. to further train the model. It represents a dynamic technique of <a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">supervised learning</a> and <a href=\"/wiki/Unsupervised_learning\" title=\"Unsupervised learning\">unsupervised learning</a> that can be applied when training data becomes available gradually over time or its size is out of system memory limits. Algorithms that can facilitate incremental learning are known as incremental machine learning algorithms.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Inference engine",
      "definition_text":"Inference engine \u2013  is a component of the system that applies logical rules to the knowledge base to deduce new information.",
      "definition_html":[
         "<li><a href=\"/wiki/Inference_engine\" title=\"Inference engine\">Inference engine</a> \u2013  is a component of the system that applies logical rules to the knowledge base to deduce new information.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Information integration",
      "definition_text":"Information integration \u2013 (II), is the merging of information from heterogeneous sources with differing conceptual, contextual and typographical representations. It is used in data mining and consolidation of data from unstructured or semi-structured resources. Typically, information integration refers to textual representations of knowledge but is sometimes applied to rich-media content. Information fusion, which is a related term, involves the combination of information into a new set of information towards reducing redundancy and uncertainty.[132]",
      "definition_html":[
         "<li><a href=\"/wiki/Information_integration\" title=\"Information integration\">Information integration</a> \u2013 (II), is the merging of information from heterogeneous sources with differing conceptual, contextual and typographical representations. It is used in <a href=\"/wiki/Data_mining\" title=\"Data mining\">data mining</a> and consolidation of data from unstructured or semi-structured resources. Typically, <i>information integration</i> refers to textual representations of knowledge but is sometimes applied to <a class=\"mw-redirect\" href=\"/wiki/Rich-media\" title=\"Rich-media\">rich-media</a> content. Information fusion, which is a related term, involves the combination of information into a new set of information towards reducing redundancy and uncertainty.<sup class=\"reference\" id=\"cite_ref-dca_132-1\"><a href=\"#cite_note-dca-132\">[132]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Information Processing Language",
      "definition_text":"Information Processing Language \u2013 (IPL), is a programming language that includes features intended to help with programs that perform simple problem solving actions such as lists, dynamic memory allocation, data types, recursion, functions as arguments, generators, and cooperative multitasking.  IPL invented the concept of list processing, albeit in an assembly-language style.",
      "definition_html":[
         "<li><a href=\"/wiki/Information_Processing_Language\" title=\"Information Processing Language\">Information Processing Language</a> \u2013 (IPL), is a <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming language</a> that includes features intended to help with programs that perform simple problem solving actions such as lists, <a class=\"mw-redirect\" href=\"/wiki/Dynamic_memory_allocation\" title=\"Dynamic memory allocation\">dynamic memory allocation</a>, <a href=\"/wiki/Data_type\" title=\"Data type\">data types</a>, <a href=\"/wiki/Recursion_(computer_science)\" title=\"Recursion (computer science)\">recursion</a>, <a href=\"/wiki/Subroutine\" title=\"Subroutine\">functions</a> as arguments, generators, and <a href=\"/wiki/Cooperative_multitasking\" title=\"Cooperative multitasking\">cooperative multitasking</a>.  IPL invented the concept of list processing, albeit in an <a href=\"/wiki/Assembly_language\" title=\"Assembly language\">assembly-language</a> style.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Intelligence amplification",
      "definition_text":"Intelligence amplification \u2013 (IA), (also referred to as cognitive augmentation, machine augmented intelligence and enhanced intelligence), refers to the effective use of information technology in augmenting human intelligence.",
      "definition_html":[
         "<li><a href=\"/wiki/Intelligence_amplification\" title=\"Intelligence amplification\">Intelligence amplification</a> \u2013 (IA), (also referred to as cognitive augmentation, machine augmented intelligence and enhanced intelligence), refers to the effective use of <a href=\"/wiki/Information_technology\" title=\"Information technology\">information technology</a> in augmenting <a href=\"/wiki/Intelligence#Human_intelligence\" title=\"Intelligence\">human intelligence</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Intelligence explosion",
      "definition_text":"Intelligence explosion \u2013 is a possible outcome of humanity building artificial general intelligence (AGI). AGI would be capable of recursive self-improvement leading to rapid emergence of ASI (artificial superintelligence), the limits of which are unknown, at the time of the technological singularity.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Intelligence_explosion\" title=\"Intelligence explosion\">Intelligence explosion</a> \u2013 is a possible outcome of humanity building <a href=\"/wiki/Artificial_general_intelligence\" title=\"Artificial general intelligence\">artificial general intelligence</a> (AGI). AGI would be capable of recursive self-improvement leading to rapid emergence of ASI (<a href=\"/wiki/Superintelligence\" title=\"Superintelligence\">artificial superintelligence</a>), the limits of which are unknown, at the time of the technological singularity.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Intelligent agent",
      "definition_text":"Intelligent agent \u2013 (IA), is an autonomous entity which acts, directing its activity towards achieving goals (i.e. it is an agent), upon an environment using observation through sensors and consequent actuators (i.e. it is intelligent). Intelligent agents may also learn or use knowledge to achieve their goals. They may be very simple or very complex.",
      "definition_html":[
         "<li><a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">Intelligent agent</a> \u2013 (IA), is an <a class=\"mw-redirect\" href=\"/wiki/Autonomous\" title=\"Autonomous\">autonomous</a> entity which acts, directing its activity towards achieving goals (i.e. it is an <a href=\"/wiki/Software_agent\" title=\"Software agent\">agent</a>), upon an <a class=\"mw-redirect\" href=\"/wiki/Environment_(biophysical)\" title=\"Environment (biophysical)\">environment</a> using observation through sensors and consequent actuators (i.e. it is intelligent). Intelligent agents may also <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">learn</a> or use <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">knowledge</a> to achieve their goals. They may be very simple or <a href=\"/wiki/Complexity\" title=\"Complexity\">very complex</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Intelligent control",
      "definition_text":"Intelligent control \u2013  is a class of control techniques that use various artificial intelligence computing approaches like neural networks, Bayesian probability, fuzzy logic, machine learning, reinforcement learning, evolutionary computation and genetic algorithms.[193]",
      "definition_html":[
         "<li><a href=\"/wiki/Intelligent_control\" title=\"Intelligent control\">Intelligent control</a> \u2013  is a class of <a href=\"/wiki/Control_theory\" title=\"Control theory\">control</a> techniques that use various <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> computing approaches like <a class=\"mw-redirect\" href=\"/wiki/Artificial_neural_networks\" title=\"Artificial neural networks\">neural networks</a>, <a href=\"/wiki/Bayesian_probability\" title=\"Bayesian probability\">Bayesian probability</a>, <a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">fuzzy logic</a>, <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>, <a href=\"/wiki/Evolutionary_computation\" title=\"Evolutionary computation\">evolutionary computation</a> and <a href=\"/wiki/Genetic_algorithm\" title=\"Genetic algorithm\">genetic algorithms</a>.<sup class=\"reference\" id=\"cite_ref-193\"><a href=\"#cite_note-193\">[193]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Intelligent personal assistant",
      "definition_text":"Intelligent personal assistant \u2013 A virtual assistant or intelligent personal assistant is a software agent that can perform tasks or services for an individual based on verbal commands. Sometimes the term \"chatbot\" is used to refer to virtual assistants generally or specifically accessed by online chat (or in some cases online chat programs that are exclusively for entertainment purposes).  Some virtual assistants are able to interpret human speech and respond via synthesized voices. Users can ask their assistants questions, control home automation devices and media playback via voice, and manage other basic tasks such as email, to-do lists, and calendars with verbal commands.[194]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Intelligent_personal_assistant\" title=\"Intelligent personal assistant\">Intelligent personal assistant</a> \u2013 A virtual assistant or intelligent personal assistant is a <a href=\"/wiki/Software_agent\" title=\"Software agent\">software agent</a> that can perform tasks or services for an individual based on verbal commands. Sometimes the term \"<a href=\"/wiki/Chatbot\" title=\"Chatbot\">chatbot</a>\" is used to refer to virtual assistants generally or specifically accessed by <a href=\"/wiki/Online_chat\" title=\"Online chat\">online chat</a> (or in some cases online chat programs that are exclusively for entertainment purposes).  Some virtual assistants are able to interpret human speech and respond via synthesized voices. Users can ask their assistants questions, control home automation devices and media playback via voice, and manage other basic tasks such as email, to-do lists, and calendars with verbal commands.<sup class=\"reference\" id=\"cite_ref-194\"><a href=\"#cite_note-194\">[194]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Interpretation (logic)",
      "definition_text":"Interpretation (logic) \u2013 is an assignment of meaning to the symbols of a formal language. Many formal languages used in mathematics, logic, and theoretical computer science are defined in solely syntactic terms, and as such do not have any meaning until they are given some interpretation. The general study of interpretations of formal languages is called formal semantics.",
      "definition_html":[
         "<li><a href=\"/wiki/Interpretation_(logic)\" title=\"Interpretation (logic)\">Interpretation (logic)</a> \u2013 is an assignment of meaning to the <a href=\"/wiki/Symbol_(formal)\" title=\"Symbol (formal)\">symbols</a> of a <a href=\"/wiki/Formal_language\" title=\"Formal language\">formal language</a>. Many formal languages used in <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, <a href=\"/wiki/Logic\" title=\"Logic\">logic</a>, and <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a> are defined in solely <a href=\"/wiki/Syntax\" title=\"Syntax\">syntactic</a> terms, and as such do not have any meaning until they are given some interpretation. The general study of interpretations of formal languages is called <a class=\"mw-redirect\" href=\"/wiki/Formal_semantics_(logic)\" title=\"Formal semantics (logic)\">formal semantics</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Issue tree",
      "definition_text":"Issue tree \u2013 Also called logic tree, is a graphical breakdown of a question that dissects it into its different components vertically and that progresses into details as it reads to the right.[195]:47  Issue trees are useful in problem solving to identify the root causes of a problem as well as to identify its potential solutions. They also provide a reference point to see how each piece fits into the whole picture of a problem.[196]",
      "definition_html":[
         "<li><a href=\"/wiki/Issue_tree\" title=\"Issue tree\">Issue tree</a> \u2013 Also called logic tree, is a graphical breakdown of a question that dissects it into its different components vertically and that progresses into details as it reads to the right.<sup class=\"reference\" id=\"cite_ref-195\"><a href=\"#cite_note-195\">[195]</a></sup><sup class=\"reference\" style=\"white-space:nowrap;\">:<span>47</span></sup>  Issue trees are useful in <a href=\"/wiki/Problem_solving\" title=\"Problem solving\">problem solving</a> to identify the root causes of a problem as well as to identify its potential solutions. They also provide a reference point to see how each piece fits into the whole picture of a problem.<sup class=\"reference\" id=\"cite_ref-196\"><a href=\"#cite_note-196\">[196]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Junction tree algorithm",
      "definition_text":"Junction tree algorithm \u2013 (also known as 'Clique Tree') is a method used in machine learning to extract marginalization in general graphs.  In essence, it entails performing belief propagation on a modified graph called a junction tree. The graph is called a tree because it branches into different sections of data; nodes of variables are the branches.[197]",
      "definition_html":[
         "<li><a href=\"/wiki/Junction_tree_algorithm\" title=\"Junction tree algorithm\">Junction tree algorithm</a> \u2013 (also known as 'Clique Tree') is a method used in <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> to extract <a href=\"/wiki/Marginal_distribution\" title=\"Marginal distribution\">marginalization</a> in general <a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">graphs</a>.  In essence, it entails performing <a href=\"/wiki/Belief_propagation\" title=\"Belief propagation\">belief propagation</a> on a modified graph called a <a class=\"mw-redirect\" href=\"/wiki/Junction_tree\" title=\"Junction tree\">junction tree</a>. The graph is called a tree because it branches into different sections of data; <a href=\"/wiki/Vertex_(graph_theory)\" title=\"Vertex (graph theory)\">nodes</a> of variables are the branches.<sup class=\"reference\" id=\"cite_ref-:1_197-0\"><a href=\"#cite_note-:1-197\">[197]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Kernel method",
      "definition_text":"Kernel method \u2013 In machine learning, kernel methods are a class of algorithms for pattern analysis, whose best known member is the support vector machine (SVM). The general task of pattern analysis is to find and study general types of relations (for example clusters, rankings, principal components, correlations, classifications) in datasets.",
      "definition_html":[
         "<li><a href=\"/wiki/Kernel_method\" title=\"Kernel method\">Kernel method</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, kernel methods are a class of algorithms for <a class=\"mw-redirect\" href=\"/wiki/Pattern_analysis\" title=\"Pattern analysis\">pattern analysis</a>, whose best known member is the <a class=\"mw-redirect\" href=\"/wiki/Support_vector_machine\" title=\"Support vector machine\">support vector machine</a> (SVM). The general task of pattern analysis is to find and study general types of relations (for example <a href=\"/wiki/Cluster_analysis\" title=\"Cluster analysis\">clusters</a>, <a href=\"/wiki/Ranking\" title=\"Ranking\">rankings</a>, <a class=\"mw-redirect\" href=\"/wiki/Principal_components\" title=\"Principal components\">principal components</a>, <a class=\"mw-redirect\" href=\"/wiki/Correlation\" title=\"Correlation\">correlations</a>, <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classifications</a>) in datasets.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"KL ONE",
      "definition_text":"KL-ONE \u2013 is a well known knowledge representation system in the tradition of semantic networks and frames; that is, it is a frame language. The system is an attempt to overcome semantic indistinctness in semantic network representations and to explicitly represent conceptual information as a structured inheritance network.[198][199][200]",
      "definition_html":[
         "<li><a href=\"/wiki/KL-ONE\" title=\"KL-ONE\">KL-ONE</a> \u2013 is a well known <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">knowledge representation</a> system in the tradition of <a class=\"mw-redirect\" href=\"/wiki/Semantic_networks\" title=\"Semantic networks\">semantic networks</a> and <a class=\"mw-redirect\" href=\"/wiki/Frame_(Artificial_intelligence)\" title=\"Frame (Artificial intelligence)\">frames</a>; that is, it is a <a href=\"/wiki/Frame_language\" title=\"Frame language\">frame language</a>. The system is an attempt to overcome semantic indistinctness in semantic network representations and to explicitly represent conceptual information as a structured inheritance network.<sup class=\"reference\" id=\"cite_ref-198\"><a href=\"#cite_note-198\">[198]</a></sup><sup class=\"reference\" id=\"cite_ref-199\"><a href=\"#cite_note-199\">[199]</a></sup><sup class=\"reference\" id=\"cite_ref-200\"><a href=\"#cite_note-200\">[200]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge acquisition",
      "definition_text":"Knowledge acquisition \u2013 is the process used to define the rules and ontologies required for a knowledge-based system. The phrase was first used in conjunction with expert systems to describe the initial tasks associated with developing an expert system, namely finding and interviewing domain experts and capturing their knowledge via rules, objects, and frame-based ontologies.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge_acquisition\" title=\"Knowledge acquisition\">Knowledge acquisition</a> \u2013 is the process used to define the rules and ontologies required for a <a class=\"mw-redirect\" href=\"/wiki/Knowledge-based_system\" title=\"Knowledge-based system\">knowledge-based system</a>. The phrase was first used in conjunction with <a class=\"mw-redirect\" href=\"/wiki/Expert_systems\" title=\"Expert systems\">expert systems</a> to describe the initial tasks associated with developing an expert system, namely finding and interviewing <a class=\"mw-redirect\" href=\"/wiki/Knowledge_domain\" title=\"Knowledge domain\">domain</a> experts and capturing their knowledge via <a href=\"/wiki/Rule-based_system\" title=\"Rule-based system\">rules</a>, <a href=\"/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">objects</a>, and <a href=\"/wiki/Frame_language\" title=\"Frame language\">frame-based</a> <a class=\"mw-redirect\" href=\"/wiki/Ontologies_(computer_science)\" title=\"Ontologies (computer science)\">ontologies</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge based systems",
      "definition_text":"Knowledge-based systems \u2013 A knowledge-based system (KBS) is a computer program that reasons and uses a knowledge base to solve complex problems. The term is broad and refers to many different kinds of systems. The one common theme that unites all knowledge based systems is an attempt to represent knowledge explicitly and a reasoning system that allows it to derive new knowledge. Thus, a knowledge-based system has two distinguishing features: a knowledge base and an inference engine.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge-based_systems\" title=\"Knowledge-based systems\">Knowledge-based systems</a> \u2013 A knowledge-based system (KBS) is a <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer program</a> that <a href=\"/wiki/Automated_reasoning\" title=\"Automated reasoning\">reasons</a> and uses a <a href=\"/wiki/Knowledge_base\" title=\"Knowledge base\">knowledge base</a> to <a href=\"/wiki/Problem_solving\" title=\"Problem solving\">solve</a> <a class=\"mw-redirect\" href=\"/wiki/Complex_systems\" title=\"Complex systems\">complex problems</a>. The term is broad and refers to many different kinds of systems. The one common theme that unites all knowledge based systems is an attempt to represent knowledge explicitly and a <a href=\"/wiki/Reasoning_system\" title=\"Reasoning system\">reasoning system</a> that allows it to derive new knowledge. Thus, a knowledge-based system has two distinguishing features: a <a href=\"/wiki/Knowledge_base\" title=\"Knowledge base\">knowledge base</a> and an <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engine</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge engineering",
      "definition_text":"Knowledge engineering \u2013 (KE) refers to all technical, scientific and social aspects involved in building, maintaining and using knowledge-based systems.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge_engineering\" title=\"Knowledge engineering\">Knowledge engineering</a> \u2013 (KE) refers to all technical, scientific and social aspects involved in building, maintaining and using <a href=\"/wiki/Knowledge-based_systems\" title=\"Knowledge-based systems\">knowledge-based systems</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge extraction",
      "definition_text":"Knowledge extraction \u2013 is the creation of knowledge from structured (relational databases, XML) and unstructured (text, documents, images) sources. The resulting knowledge needs to be in a machine-readable and machine-interpretable format and must represent knowledge in a manner that facilitates inferencing. Although it is methodically similar to information extraction (NLP) and ETL (data warehouse), the main criteria is that the extraction result goes beyond the creation of structured information or the transformation into a relational schema. It requires either the reuse of existing formal knowledge (reusing identifiers or ontologies) or the generation of a schema based on the source data.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge_extraction\" title=\"Knowledge extraction\">Knowledge extraction</a> \u2013 is the creation of <a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">knowledge</a> from structured (<a class=\"mw-redirect\" href=\"/wiki/Relational_databases\" title=\"Relational databases\">relational databases</a>, <a href=\"/wiki/XML\" title=\"XML\">XML</a>) and unstructured (<a href=\"/wiki/Text_(literary_theory)\" title=\"Text (literary theory)\">text</a>, documents, <a href=\"/wiki/Image\" title=\"Image\">images</a>) sources. The resulting knowledge needs to be in a machine-readable and machine-interpretable format and must <a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">represent knowledge</a> in a manner that facilitates inferencing. Although it is methodically similar to <a href=\"/wiki/Information_extraction\" title=\"Information extraction\">information extraction</a> (<a href=\"/wiki/Natural_language_processing\" title=\"Natural language processing\">NLP</a>) and <a href=\"/wiki/Extract,_transform,_load\" title=\"Extract, transform, load\">ETL</a> (data warehouse), the main criteria is that the extraction result goes beyond the creation of structured information or the transformation into a <a href=\"/wiki/Database_schema\" title=\"Database schema\">relational schema</a>. It requires either the reuse of existing <a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">formal knowledge</a> (reusing identifiers or <a class=\"mw-redirect\" href=\"/wiki/Ontologies\" title=\"Ontologies\">ontologies</a>) or the generation of a schema based on the source data.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge Interchange Format",
      "definition_text":"Knowledge Interchange Format \u2013  (KIF) is a computer language designed to enable systems to share and re-use information from knowledge-based systems. KIF is similar to frame languages such as KL-ONE and LOOM but unlike such language its primary role is not intended as a framework for the expression or use of knowledge but rather for the interchange of knowledge between systems. The designers of KIF likened it to PostScript. PostScript was not designed primarily as a language to store and manipulate documents but rather as an interchange format for systems and devices to share documents. In the same way KIF is meant to facilitate sharing of knowledge across different systems that use different languages, formalisms, platforms, etc.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge_Interchange_Format\" title=\"Knowledge Interchange Format\">Knowledge Interchange Format</a> \u2013  (KIF) is a computer language designed to enable systems to share and re-use information from <a href=\"/wiki/Knowledge-based_systems\" title=\"Knowledge-based systems\">knowledge-based systems</a>. KIF is similar to <a href=\"/wiki/Frame_language\" title=\"Frame language\">frame languages</a> such as <a href=\"/wiki/KL-ONE\" title=\"KL-ONE\">KL-ONE</a> and <a href=\"/wiki/LOOM_(ontology)\" title=\"LOOM (ontology)\">LOOM</a> but unlike such language its primary role is not intended as a framework for the expression or use of knowledge but rather for the interchange of knowledge between systems. The designers of KIF likened it to <a href=\"/wiki/PostScript\" title=\"PostScript\">PostScript</a>. PostScript was not designed primarily as a language to store and manipulate documents but rather as an interchange format for systems and devices to share documents. In the same way KIF is meant to facilitate sharing of knowledge across different systems that use different languages, formalisms, platforms, etc.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Knowledge representation and reasoning",
      "definition_text":"Knowledge representation and reasoning \u2013 (KR\u00b2, KR&R) is the field of artificial intelligence (AI) dedicated to representing information about the world in a form that a computer system can utilize to solve complex tasks such as diagnosing a medical condition or having a dialog in a natural language. Knowledge representation incorporates findings from psychology[201] about how humans solve problems and represent knowledge in order to design formalisms that will make complex systems easier to design and build.  Knowledge representation and reasoning also incorporates findings from logic to automate various kinds of reasoning, such as the application of rules or the relations of sets and subsets.[202] Examples of knowledge representation formalisms include semantic nets, systems architecture, frames, rules, and ontologies. Examples of automated reasoning engines include inference engines, theorem provers, and classifiers.",
      "definition_html":[
         "<li><a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">Knowledge representation and reasoning</a> \u2013 (KR\u00b2, KR&amp;R) is the field of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> (AI) dedicated to representing information about the world in a form that a computer system can utilize to solve complex tasks such as <a href=\"/wiki/Computer-aided_diagnosis\" title=\"Computer-aided diagnosis\">diagnosing a medical condition</a> or <a class=\"mw-redirect\" href=\"/wiki/Natural_language_user_interface\" title=\"Natural language user interface\">having a dialog in a natural language</a>. Knowledge representation incorporates findings from psychology<sup class=\"reference\" id=\"cite_ref-201\"><a href=\"#cite_note-201\">[201]</a></sup> about how humans solve problems and represent knowledge in order to design <a class=\"mw-redirect\" href=\"/wiki/Formalism_(mathematics)\" title=\"Formalism (mathematics)\">formalisms</a> that will make complex systems easier to design and build.  Knowledge representation and reasoning also incorporates findings from <a href=\"/wiki/Logic\" title=\"Logic\">logic</a> to automate various kinds of <i>reasoning</i>, such as the application of rules or the relations of <a href=\"/wiki/Set_theory\" title=\"Set theory\">sets</a> and <a href=\"/wiki/Subset\" title=\"Subset\">subsets</a>.<sup class=\"reference\" id=\"cite_ref-202\"><a href=\"#cite_note-202\">[202]</a></sup> Examples of knowledge representation formalisms include <a href=\"/wiki/Semantic_network\" title=\"Semantic network\">semantic nets</a>, <a href=\"/wiki/Systems_architecture\" title=\"Systems architecture\">systems architecture</a>, <a href=\"/wiki/Frame_(artificial_intelligence)\" title=\"Frame (artificial intelligence)\">frames</a>, rules, and <a href=\"/wiki/Ontology_(information_science)\" title=\"Ontology (information science)\">ontologies</a>. Examples of <a href=\"/wiki/Automated_reasoning\" title=\"Automated reasoning\">automated reasoning</a> engines include <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engines</a>, <a href=\"/wiki/Automated_theorem_proving\" title=\"Automated theorem proving\">theorem provers</a>, and classifiers.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Lazy learning",
      "definition_text":"Lazy learning \u2013 In machine learning, lazy learning is a learning method in which generalization of the training data is, in theory, delayed until a query is made to the system, as opposed to in eager learning, where the system tries to generalize the training data before receiving queries.",
      "definition_html":[
         "<li><a href=\"/wiki/Lazy_learning\" title=\"Lazy learning\">Lazy learning</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, lazy learning is a learning method in which generalization of the <a class=\"mw-redirect\" href=\"/wiki/Training_data\" title=\"Training data\">training data</a> is, in theory, delayed until a query is made to the system, as opposed to in <a href=\"/wiki/Eager_learning\" title=\"Eager learning\">eager learning</a>, where the system tries to generalize the training data before receiving queries.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Lisp (programming language)",
      "definition_text":"Lisp (programming language) \u2013 (historically LISP), is a family of computer programming languages with a long history and a distinctive, fully parenthesized prefix notation.[203]",
      "definition_html":[
         "<li><a href=\"/wiki/Lisp_(programming_language)\" title=\"Lisp (programming language)\">Lisp (programming language)</a> \u2013 (historically LISP), is a family of <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming languages</a> with a long history and a distinctive, fully <a class=\"mw-redirect\" href=\"/wiki/Parenthesized\" title=\"Parenthesized\">parenthesized</a> <a href=\"/wiki/Polish_notation#Computer_programming\" title=\"Polish notation\">prefix notation</a>.<sup class=\"reference\" id=\"cite_ref-203\"><a href=\"#cite_note-203\">[203]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Logic programming",
      "definition_text":"Logic programming \u2013 is a type of programming paradigm which is largely based on formal logic. Any program written in a logic programming language is a set of sentences in logical form, expressing facts and rules about some problem domain.  Major logic programming language families include Prolog, Answer set programming (ASP) and Datalog.",
      "definition_html":[
         "<li><a href=\"/wiki/Logic_programming\" title=\"Logic programming\">Logic programming</a> \u2013 is a type of <a href=\"/wiki/Programming_paradigm\" title=\"Programming paradigm\">programming paradigm</a> which is largely based on <a class=\"mw-redirect\" href=\"/wiki/Formal_logic\" title=\"Formal logic\">formal logic</a>. Any program written in a logic <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming language</a> is a set of sentences in logical form, expressing facts and rules about some problem domain.  Major logic programming language families include <a href=\"/wiki/Prolog\" title=\"Prolog\">Prolog</a>, <a href=\"/wiki/Answer_set_programming\" title=\"Answer set programming\">Answer set programming</a> (ASP) and <a href=\"/wiki/Datalog\" title=\"Datalog\">Datalog</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Long short term memory",
      "definition_text":"Long short-term memory \u2013 (LSTM), is an artificial recurrent neural network, (RNN) architecture[204] used in the field of deep learning. Unlike standard feedforward neural networks, LSTM has feedback connections that make it a \"general purpose computer\" (that is, it can compute anything that a Turing machine can).[205] It can not only process single data points (such as images), but also entire sequences of data (such as speech or video).",
      "definition_html":[
         "<li><a href=\"/wiki/Long_short-term_memory\" title=\"Long short-term memory\">Long short-term memory</a> \u2013 (LSTM), is an artificial <a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">recurrent neural network</a>, (RNN) architecture<sup class=\"reference\" id=\"cite_ref-204\"><a href=\"#cite_note-204\">[204]</a></sup> used in the field of <a href=\"/wiki/Deep_learning\" title=\"Deep learning\">deep learning</a>. Unlike standard <a href=\"/wiki/Feedforward_neural_network\" title=\"Feedforward neural network\">feedforward neural networks</a>, LSTM has feedback connections that make it a \"general purpose computer\" (that is, it can compute anything that a <a href=\"/wiki/Turing_machine\" title=\"Turing machine\">Turing machine</a> can).<sup class=\"reference\" id=\"cite_ref-Siegelmann92_205-0\"><a href=\"#cite_note-Siegelmann92-205\">[205]</a></sup> It can not only process single data points (such as images), but also entire sequences of data (such as speech or video).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Machine vision",
      "definition_text":"Machine vision \u2013 (MV) is the technology and methods used to provide imaging-based automatic inspection and analysis for such applications as automatic inspection, process control, and robot guidance, usually in industry.  Machine vision is a term encompassing a large number of technologies, software and hardware products, integrated systems, actions, methods and expertise. Machine vision as a systems engineering discipline can be considered distinct from computer vision, a form of computer science.  It attempts to integrate existing technologies in new ways and apply them to solve real world problems. The term is the prevalent one for these functions in industrial automation environments but is also used for these functions in other environments such as security and vehicle guidance.",
      "definition_html":[
         "<li><a href=\"/wiki/Machine_vision\" title=\"Machine vision\">Machine vision</a> \u2013 (MV) is the technology and methods used to provide imaging-based automatic inspection and analysis for such applications as automatic inspection, <a href=\"/wiki/Process_control\" title=\"Process control\">process control</a>, and robot guidance, usually in industry.  Machine vision is a term encompassing a large number of technologies, software and hardware products, integrated systems, actions, methods and expertise. Machine vision as a <a href=\"/wiki/Systems_engineering\" title=\"Systems engineering\">systems engineering</a> discipline can be considered distinct from <a href=\"/wiki/Computer_vision\" title=\"Computer vision\">computer vision</a>, a form of <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>.  It attempts to integrate existing technologies in new ways and apply them to solve real world problems. The term is the prevalent one for these functions in industrial automation environments but is also used for these functions in other environments such as security and vehicle guidance.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Markov chain",
      "definition_text":"Markov chain \u2013 is a stochastic model describing a sequence of possible events in which the probability of each event depends only on the state attained in the previous event.[206][207][208]",
      "definition_html":[
         "<li><a href=\"/wiki/Markov_chain\" title=\"Markov chain\">Markov chain</a> \u2013 is a <a class=\"mw-redirect\" href=\"/wiki/Stochastic_model\" title=\"Stochastic model\">stochastic model</a> describing a <a href=\"/wiki/Sequence\" title=\"Sequence\">sequence</a> of possible events in which the probability of each event depends only on the state attained in the previous event.<sup class=\"reference\" id=\"cite_ref-206\"><a href=\"#cite_note-206\">[206]</a></sup><sup class=\"reference\" id=\"cite_ref-207\"><a href=\"#cite_note-207\">[207]</a></sup><sup class=\"reference\" id=\"cite_ref-208\"><a href=\"#cite_note-208\">[208]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Markov decision process",
      "definition_text":"Markov decision process \u2013 (MDP) is a discrete time stochastic control process. It provides a mathematical framework for modeling decision making in situations where outcomes are partly random and partly under the control of a decision maker. MDPs are useful for studying optimization problems solved via dynamic programming and reinforcement learning.",
      "definition_html":[
         "<li><a href=\"/wiki/Markov_decision_process\" title=\"Markov decision process\">Markov decision process</a> \u2013 (MDP) is a <a class=\"mw-redirect\" href=\"/wiki/Discrete_time\" title=\"Discrete time\">discrete time</a> <a href=\"/wiki/Stochastic\" title=\"Stochastic\">stochastic</a> <a class=\"mw-redirect\" href=\"/wiki/Optimal_control_theory\" title=\"Optimal control theory\">control</a> process. It provides a mathematical framework for modeling <a class=\"mw-redirect\" href=\"/wiki/Decision_making\" title=\"Decision making\">decision making</a> in situations where outcomes are partly <a href=\"/wiki/Randomness#In_mathematics\" title=\"Randomness\">random</a> and partly under the control of a decision maker. MDPs are useful for studying <a href=\"/wiki/Optimization_problem\" title=\"Optimization problem\">optimization problems</a> solved via <a href=\"/wiki/Dynamic_programming\" title=\"Dynamic programming\">dynamic programming</a> and <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Mathematical optimization",
      "definition_text":"Mathematical optimization \u2013 In mathematics, computer science and operations research, mathematical optimization (alternatively spelled optimisation) or mathematical programming is the selection of a best element (with regard to some criterion) from some set of available alternatives.[209]",
      "definition_html":[
         "<li><a href=\"/wiki/Mathematical_optimization\" title=\"Mathematical optimization\">Mathematical optimization</a> \u2013 In <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> and <a href=\"/wiki/Operations_research\" title=\"Operations research\">operations research</a>, mathematical optimization (alternatively spelled <i>optimisation</i>) or mathematical programming is the selection of a best element (with regard to some criterion) from some set of available alternatives.<sup class=\"reference\" id=\"cite_ref-209\"><a href=\"#cite_note-209\">[209]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Machine learning",
      "definition_text":"Machine learning \u2013 (ML) is the scientific study of algorithms and statistical models that computer systems use in order to perform a specific task effectively without using explicit instructions, relying on patterns and inference instead.",
      "definition_html":[
         "<li><a href=\"/wiki/Machine_learning\" title=\"Machine learning\">Machine learning</a> \u2013 (ML) is the <a href=\"/wiki/Branches_of_science\" title=\"Branches of science\">scientific study</a> of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> and <a href=\"/wiki/Statistical_model\" title=\"Statistical model\">statistical models</a> that <a class=\"mw-redirect\" href=\"/wiki/Computer_systems\" title=\"Computer systems\">computer systems</a> use in order to perform a specific task effectively without using explicit instructions, relying on patterns and inference instead.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Machine listening",
      "definition_text":"Machine listening \u2013 Computer audition (CA) or machine listening is general field of study of algorithms and systems for audio understanding by machine.[210][211]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Machine_listening\" title=\"Machine listening\">Machine listening</a> \u2013 Computer audition (CA) or machine listening is general field of study of <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> and systems for audio understanding by machine.<sup class=\"reference\" id=\"cite_ref-210\"><a href=\"#cite_note-210\">[210]</a></sup><sup class=\"reference\" id=\"cite_ref-211\"><a href=\"#cite_note-211\">[211]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Machine perception",
      "definition_text":"Machine perception \u2013 is the capability of a computer system to interpret data in a manner that is similar to the way humans use their senses to relate to the world around them.[212][213][214]",
      "definition_html":[
         "<li><a href=\"/wiki/Machine_perception\" title=\"Machine perception\">Machine perception</a> \u2013 is the capability of a computer system to interpret data in a manner that is similar to the way humans use their senses to relate to the world around them.<sup class=\"reference\" id=\"cite_ref-212\"><a href=\"#cite_note-212\">[212]</a></sup><sup class=\"reference\" id=\"cite_ref-213\"><a href=\"#cite_note-213\">[213]</a></sup><sup class=\"reference\" id=\"cite_ref-214\"><a href=\"#cite_note-214\">[214]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Mechanism design",
      "definition_text":"Mechanism design \u2013 is a field in economics and game theory that takes an engineering approach to designing economic mechanisms or incentives, toward desired objectives, in strategic settings, where players act rationally. Because it starts at the end of the game, then goes backwards, it is also called reverse game theory. It has broad applications, from economics and politics (markets, auctions, voting procedures) to networked-systems (internet interdomain routing, sponsored search auctions).",
      "definition_html":[
         "<li><a href=\"/wiki/Mechanism_design\" title=\"Mechanism design\">Mechanism design</a> \u2013 is a field in <a href=\"/wiki/Economics\" title=\"Economics\">economics</a> and <a href=\"/wiki/Game_theory\" title=\"Game theory\">game theory</a> that takes an <a href=\"/wiki/Engineering\" title=\"Engineering\">engineering</a> approach to designing economic mechanisms or <a class=\"mw-redirect\" href=\"/wiki/Economic_incentive\" title=\"Economic incentive\">incentives</a>, toward desired objectives, in <a href=\"/wiki/Strategy_(game_theory)\" title=\"Strategy (game theory)\">strategic settings</a>, where players act <a href=\"/wiki/Rational_choice_theory\" title=\"Rational choice theory\">rationally</a>. Because it starts at the end of the game, then goes backwards, it is also called reverse game theory. It has broad applications, from economics and politics (markets, auctions, voting procedures) to networked-systems (internet interdomain routing, sponsored search auctions).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Mechatronics",
      "definition_text":"Mechatronics \u2013 which is also called mechatronic engineering, is a multidisciplinary branch of engineering that focuses on the engineering of both electrical and mechanical systems, and also includes a combination of robotics, electronics, computer, telecommunications, systems, control, and product engineering.[215][216]",
      "definition_html":[
         "<li><a href=\"/wiki/Mechatronics\" title=\"Mechatronics\">Mechatronics</a> \u2013 which is also called mechatronic engineering, is a <a class=\"mw-redirect\" href=\"/wiki/Multidisciplinary\" title=\"Multidisciplinary\">multidisciplinary</a> branch of engineering that focuses on the engineering of both <a href=\"/wiki/Electrical_engineering\" title=\"Electrical engineering\">electrical</a> and <a href=\"/wiki/Mechanical_engineering\" title=\"Mechanical engineering\">mechanical systems</a>, and also includes a combination of <a href=\"/wiki/Robotics\" title=\"Robotics\">robotics</a>, <a href=\"/wiki/Electronics\" title=\"Electronics\">electronics</a>, <a href=\"/wiki/Computer_engineering\" title=\"Computer engineering\">computer</a>, <a class=\"mw-redirect\" href=\"/wiki/Telecommunications\" title=\"Telecommunications\">telecommunications</a>, <a href=\"/wiki/Systems_engineering\" title=\"Systems engineering\">systems</a>, <a href=\"/wiki/Control_engineering\" title=\"Control engineering\">control</a>, and <a href=\"/wiki/Product_engineering\" title=\"Product engineering\">product</a> engineering.<sup class=\"reference\" id=\"cite_ref-215\"><a href=\"#cite_note-215\">[215]</a></sup><sup class=\"reference\" id=\"cite_ref-CZU_216-0\"><a href=\"#cite_note-CZU-216\">[216]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Metabolic network reconstruction and simulation",
      "definition_text":"Metabolic network reconstruction and simulation \u2013 allows for an in-depth insight into the molecular mechanisms of a particular organism. In particular, these models correlate the genome with molecular physiology.[217]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Metabolic_network_reconstruction_and_simulation\" title=\"Metabolic network reconstruction and simulation\">Metabolic network reconstruction and simulation</a> \u2013 allows for an in-depth insight into the molecular mechanisms of a particular organism. In particular, these models correlate the <a href=\"/wiki/Genome\" title=\"Genome\">genome</a> with molecular <a href=\"/wiki/Physiology\" title=\"Physiology\">physiology</a>.<sup class=\"reference\" id=\"cite_ref-Franke_2005_217-0\"><a href=\"#cite_note-Franke_2005-217\">[217]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Metaheuristic",
      "definition_text":"Metaheuristic \u2013 In computer science and mathematical optimization, a metaheuristic is a higher-level procedure or heuristic designed to find, generate, or select a heuristic (partial search algorithm) that may provide a sufficiently good solution to an optimization problem, especially with incomplete or imperfect information or limited computation capacity.[218][219] Metaheuristics sample a set of solutions which is too large to be completely sampled.",
      "definition_html":[
         "<li><a href=\"/wiki/Metaheuristic\" title=\"Metaheuristic\">Metaheuristic</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> and <a href=\"/wiki/Mathematical_optimization\" title=\"Mathematical optimization\">mathematical optimization</a>, a metaheuristic is a higher-level <a class=\"mw-redirect\" href=\"/wiki/Procedure_(computer_science)\" title=\"Procedure (computer science)\">procedure</a> or <a href=\"/wiki/Heuristic_(computer_science)\" title=\"Heuristic (computer science)\">heuristic</a> designed to find, generate, or select a heuristic (partial <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search algorithm</a>) that may provide a sufficiently good solution to an <a href=\"/wiki/Optimization_problem\" title=\"Optimization problem\">optimization problem</a>, especially with incomplete or imperfect information or limited computation capacity.<sup class=\"reference\" id=\"cite_ref-218\"><a href=\"#cite_note-218\">[218]</a></sup><sup class=\"reference\" id=\"cite_ref-219\"><a href=\"#cite_note-219\">[219]</a></sup> Metaheuristics sample a set of solutions which is too large to be completely sampled.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Model checking",
      "definition_text":"Model checking \u2013 In computer science, model checking or property checking is, for a given model of a system, exhaustively and automatically checking whether this model meets a given specification. Typically, one has hardware or software systems in mind, whereas the specification contains safety requirements such as the absence of deadlocks and similar critical states that can cause the system to crash. Model checking is a technique for automatically verifying correctness properties of finite-state systems.",
      "definition_html":[
         "<li><a href=\"/wiki/Model_checking\" title=\"Model checking\">Model checking</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, model checking or property checking is, for a given model of a system, exhaustively and automatically checking whether this model meets a given <a href=\"/wiki/Formal_specification\" title=\"Formal specification\">specification</a>. Typically, one has hardware or software systems in mind, whereas the specification contains safety requirements such as the absence of <a href=\"/wiki/Deadlock\" title=\"Deadlock\">deadlocks</a> and similar critical states that can cause the system to <a href=\"/wiki/Crash_(computing)\" title=\"Crash (computing)\">crash</a>. Model checking is a technique for automatically verifying correctness properties of <i>finite-state</i> systems.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Modus ponens",
      "definition_text":"Modus ponens \u2013 In propositional logic, modus ponens is a rule of inference.[220] It can be summarized as \"P implies Q and P is asserted to be true, therefore Q must be true.\"",
      "definition_html":[
         "<li><a href=\"/wiki/Modus_ponens\" title=\"Modus ponens\">Modus ponens</a> \u2013 In <a href=\"/wiki/Propositional_calculus\" title=\"Propositional calculus\">propositional logic</a>, <i>modus ponens</i> is a <a href=\"/wiki/Rule_of_inference\" title=\"Rule of inference\">rule of inference</a>.<sup class=\"reference\" id=\"cite_ref-220\"><a href=\"#cite_note-220\">[220]</a></sup> It can be summarized as \"<i>P <a href=\"/wiki/Material_conditional\" title=\"Material conditional\">implies</a> Q</i> and <i>P</i> is asserted to be true, therefore <i>Q</i> must be true.\"</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Modus tollens",
      "definition_text":"Modus tollens \u2013 In propositional logic, modus tollens is a valid argument form and a rule of inference.  It is an application of the general truth that if a statement is true, then so is its contrapositive.  The inference rule modus tollens asserts that the inference from P implies Q to the negation of Q implies the negation of P is valid.",
      "definition_html":[
         "<li><a href=\"/wiki/Modus_tollens\" title=\"Modus tollens\">Modus tollens</a> \u2013 In <a href=\"/wiki/Propositional_calculus\" title=\"Propositional calculus\">propositional logic</a>, <i>modus tollens</i> is a <a href=\"/wiki/Validity_(logic)\" title=\"Validity (logic)\">valid</a> <a href=\"/wiki/Logical_form\" title=\"Logical form\">argument form</a> and a <a href=\"/wiki/Rule_of_inference\" title=\"Rule of inference\">rule of inference</a>.  It is an application of the general truth that if a statement is true, then so is its <a class=\"mw-redirect\" href=\"/wiki/Contrapositive\" title=\"Contrapositive\">contrapositive</a>.  The inference rule <i>modus tollens</i> asserts that the <a href=\"/wiki/Inference\" title=\"Inference\">inference</a> from <i>P implies Q</i> to <i>the negation of Q implies the negation of P</i> is valid.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Monte Carlo tree search",
      "definition_text":"Monte Carlo tree search \u2013 In computer science, Monte Carlo tree search (MCTS) is a heuristic search algorithm for some kinds of decision processes.",
      "definition_html":[
         "<li><a href=\"/wiki/Monte_Carlo_tree_search\" title=\"Monte Carlo tree search\">Monte Carlo tree search</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, Monte Carlo tree search (MCTS) is a <a href=\"/wiki/Heuristic_(computer_science)\" title=\"Heuristic (computer science)\">heuristic</a> <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search algorithm</a> for some kinds of <a class=\"mw-redirect\" href=\"/wiki/Decision_process\" title=\"Decision process\">decision processes</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Multi agent system",
      "definition_text":"Multi-agent system \u2013 (MAS or \"self-organized system\"), is a computerized system composed of multiple interacting intelligent agents. Multi-agent systems can solve problems that are difficult or impossible for an individual agent or a monolithic system to solve. Intelligence may include methodic, functional, procedural approaches, algorithmic search or reinforcement learning.",
      "definition_html":[
         "<li><a href=\"/wiki/Multi-agent_system\" title=\"Multi-agent system\">Multi-agent system</a> \u2013 (MAS or \"self-organized system\"), is a computerized system composed of multiple interacting <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">intelligent agents</a>. Multi-agent systems can solve problems that are difficult or impossible for an individual agent or a <a href=\"/wiki/Monolithic_system\" title=\"Monolithic system\">monolithic system</a> to solve. Intelligence may include <a href=\"/wiki/Scientific_method\" title=\"Scientific method\">methodic</a>, <a class=\"mw-redirect\" href=\"/wiki/Function_(computer_science)\" title=\"Function (computer science)\">functional</a>, <a href=\"/wiki/Algorithm\" title=\"Algorithm\">procedural</a> approaches, <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithmic</a> <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search</a> or <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Multi swarm optimization",
      "definition_text":"Multi-swarm optimization \u2013 is a variant of particle swarm optimization (PSO) based on the use of multiple sub-swarms instead of one (standard) swarm. The general approach in multi-swarm optimization is that each sub-swarm focuses on a specific region while a specific diversification method decides where and when to launch the sub-swarms. The multi-swarm framework is especially fitted for the optimization on multi-modal problems, where multiple (local) optima exist.",
      "definition_html":[
         "<li><a href=\"/wiki/Multi-swarm_optimization\" title=\"Multi-swarm optimization\">Multi-swarm optimization</a> \u2013 is a variant of <a href=\"/wiki/Particle_swarm_optimization\" title=\"Particle swarm optimization\">particle swarm optimization</a> (PSO) based on the use of multiple sub-swarms instead of one (standard) swarm. The general approach in multi-swarm optimization is that each sub-swarm focuses on a specific region while a specific diversification method decides where and when to launch the sub-swarms. The multi-swarm framework is especially fitted for the optimization on multi-modal problems, where multiple (local) optima exist.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Mutation",
      "definition_text":"Mutation \u2013 is a genetic operator used to maintain genetic diversity from one generation of a population of genetic algorithm chromosomes to the next. It is analogous to biological mutation. Mutation alters one or more gene values in a chromosome from its initial state. In mutation, the solution may change entirely from the previous solution. Hence GA can come to a better solution by using mutation. Mutation occurs during evolution according to a user-definable mutation probability. This probability should be set low. If it is set too high, the search will turn into a primitive random search.",
      "definition_html":[
         "<li><a href=\"/wiki/Mutation_(genetic_algorithm)\" title=\"Mutation (genetic algorithm)\">Mutation</a> \u2013 is a <a href=\"/wiki/Genetic_operator\" title=\"Genetic operator\">genetic operator</a> used to maintain <a href=\"/wiki/Genetic_diversity\" title=\"Genetic diversity\">genetic diversity</a> from one generation of a population of <a href=\"/wiki/Genetic_algorithm\" title=\"Genetic algorithm\">genetic algorithm</a> <a href=\"/wiki/Chromosome_(genetic_algorithm)\" title=\"Chromosome (genetic algorithm)\">chromosomes</a> to the next. It is analogous to biological <a href=\"/wiki/Mutation\" title=\"Mutation\">mutation</a>. Mutation alters one or more gene values in a chromosome from its initial state. In mutation, the solution may change entirely from the previous solution. Hence GA can come to a better solution by using mutation. Mutation occurs during evolution according to a user-definable mutation probability. This probability should be set low. If it is set too high, the search will turn into a primitive random search.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Mycin",
      "definition_text":"Mycin \u2013 was an early backward chaining expert system that used artificial intelligence to identify bacteria causing severe infections, such as bacteremia and meningitis, and to recommend antibiotics, with the dosage adjusted for patient's body weight \u2013 the name derived from the antibiotics themselves, as many antibiotics have the suffix \"-mycin\". The MYCIN system was also used for the diagnosis of blood clotting diseases.",
      "definition_html":[
         "<li><a href=\"/wiki/Mycin\" title=\"Mycin\">Mycin</a> \u2013 was an early <a href=\"/wiki/Backward_chaining\" title=\"Backward chaining\">backward chaining</a> <a href=\"/wiki/Expert_system\" title=\"Expert system\">expert system</a> that used <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> to identify bacteria causing severe infections, such as <a href=\"/wiki/Bacteremia\" title=\"Bacteremia\">bacteremia</a> and <a href=\"/wiki/Meningitis\" title=\"Meningitis\">meningitis</a>, and to recommend <a href=\"/wiki/Antibiotic\" title=\"Antibiotic\">antibiotics</a>, with the dosage adjusted for patient's body weight \u2013 the name derived from the antibiotics themselves, as many antibiotics have the suffix \"-mycin\". The MYCIN system was also used for the diagnosis of blood clotting diseases.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Naive Bayes classifier",
      "definition_text":"Naive Bayes classifier \u2013 In machine learning, naive Bayes classifiers are a family of simple probabilistic classifiers based on applying Bayes' theorem with strong (naive) independence assumptions between the features.",
      "definition_html":[
         "<li><a href=\"/wiki/Naive_Bayes_classifier\" title=\"Naive Bayes classifier\">Naive Bayes classifier</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, naive Bayes classifiers are a family of simple <a href=\"/wiki/Probabilistic_classification\" title=\"Probabilistic classification\">probabilistic classifiers</a> based on applying <a href=\"/wiki/Bayes%27_theorem\" title=\"Bayes' theorem\">Bayes' theorem</a> with strong (naive) <a class=\"mw-redirect\" href=\"/wiki/Statistical_independence\" title=\"Statistical independence\">independence</a> assumptions between the features.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Naive semantics",
      "definition_text":"Naive semantics \u2013 is an approach used in computer science for representing basic knowledge about a specific domain, and has been used in applications such as the representation of the meaning of natural language sentences in artificial intelligence applications. In a general setting the term has been used to refer to the use of a limited store of generally understood knowledge about a specific domain in the world, and has been applied to fields such as the knowledge based design of data schemas.[221]",
      "definition_html":[
         "<li><a href=\"/wiki/Naive_semantics\" title=\"Naive semantics\">Naive semantics</a> \u2013 is an approach used in computer science for <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">representing basic knowledge</a> about a specific domain, and has been used in applications such as the representation of the meaning of natural language sentences in artificial intelligence applications. In a general setting the term has been used to refer to the use of a limited store of generally understood knowledge about a specific domain in the world, and has been applied to fields such as the knowledge based design of data schemas.<sup class=\"reference\" id=\"cite_ref-221\"><a href=\"#cite_note-221\">[221]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Name binding",
      "definition_text":"Name binding \u2013 In programming languages, name binding is the association of entities (data and/or code) with identifiers.[222] An identifier bound to an object is said to reference that object. Machine languages have no built-in notion of identifiers, but name-object bindings as a service and notation for the programmer is implemented by programming languages. Binding is intimately connected with scoping, as scope determines which names bind to which objects \u2013 at which locations in the program code (lexically) and in which one of the possible execution paths (temporally).  Use of an identifier id in a context that establishes a binding for id is called a binding (or defining) occurrence. In all other occurrences (e.g., in expressions, assignments, and subprogram calls), an identifier stands for what it is bound to; such occurrences are called applied occurrences.",
      "definition_html":[
         "<li><a href=\"/wiki/Name_binding\" title=\"Name binding\">Name binding</a> \u2013 In programming languages, name binding is the association of entities (data and/or code) with <a href=\"/wiki/Identifier\" title=\"Identifier\">identifiers</a>.<sup class=\"reference\" id=\"cite_ref-tkac08_222-0\"><a href=\"#cite_note-tkac08-222\">[222]</a></sup> An identifier bound to an object is said to <a href=\"/wiki/Reference_(computer_science)\" title=\"Reference (computer science)\">reference</a> that object. <a class=\"mw-redirect\" href=\"/wiki/Machine_language\" title=\"Machine language\">Machine languages</a> have no built-in notion of identifiers, but name-object bindings as a service and notation for the programmer is implemented by programming languages. Binding is intimately connected with <a class=\"mw-redirect\" href=\"/wiki/Scoping\" title=\"Scoping\">scoping</a>, as scope determines which names bind to which objects \u2013 at which locations in the program code (<a href=\"/wiki/Scope_(computer_science)#Lexical_scoping\" title=\"Scope (computer science)\">lexically</a>) and in which one of the possible execution paths (<a href=\"/wiki/Scope_(computer_science)#Dynamic_scoping\" title=\"Scope (computer science)\">temporally</a>).  Use of an identifier <code>id</code> in a context that establishes a binding for <code>id</code> is called a binding (or defining) occurrence. In all other occurrences (e.g., in expressions, assignments, and subprogram calls), an identifier stands for what it is bound to; such occurrences are called applied occurrences.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Named entity recognition",
      "definition_text":"Named-entity recognition \u2013 (NER), (also known as entity identification, entity chunking and entity extraction) is a subtask of information extraction that seeks to locate and classify named entity mentions in unstructured text into pre-defined categories such as the person names, organizations, locations, medical codes, time expressions, quantities, monetary values, percentages, etc.",
      "definition_html":[
         "<li><a href=\"/wiki/Named-entity_recognition\" title=\"Named-entity recognition\">Named-entity recognition</a> \u2013 (NER), (also known as entity identification, entity chunking and entity extraction) is a subtask of <a href=\"/wiki/Information_extraction\" title=\"Information extraction\">information extraction</a> that seeks to locate and classify <a href=\"/wiki/Named_entity\" title=\"Named entity\">named entity</a> mentions in <a href=\"/wiki/Unstructured_data\" title=\"Unstructured data\">unstructured text</a> into pre-defined categories such as the person names, organizations, locations, <a href=\"/wiki/Medical_classification\" title=\"Medical classification\">medical codes</a>, time expressions, quantities, monetary values, percentages, etc.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Named graph",
      "definition_text":"Named graph \u2013 Named graphs are a key concept of Semantic Web architecture in which a set of Resource Description Framework statements (a graph) are identified using a URI,[223] allowing descriptions to be made of that set of statements such as context, provenance information or other such metadata.  Named graphs are a simple extension of the RDF data model[224] through which graphs can be created but the model lacks an effective means of distinguishing between them once published on the Web at large.",
      "definition_html":[
         "<li><a href=\"/wiki/Named_graph\" title=\"Named graph\">Named graph</a> \u2013 Named graphs are a key concept of <a href=\"/wiki/Semantic_Web\" title=\"Semantic Web\">Semantic Web</a> architecture in which a set of <a href=\"/wiki/Resource_Description_Framework\" title=\"Resource Description Framework\">Resource Description Framework</a> statements (a <a href=\"/wiki/Graph_(discrete_mathematics)\" title=\"Graph (discrete mathematics)\">graph</a>) are identified using a <a class=\"mw-redirect\" href=\"/wiki/URI\" title=\"URI\">URI</a>,<sup class=\"reference\" id=\"cite_ref-223\"><a href=\"#cite_note-223\">[223]</a></sup> allowing descriptions to be made of that set of statements such as context, provenance information or other such <a href=\"/wiki/Metadata\" title=\"Metadata\">metadata</a>.  Named graphs are a simple extension of the RDF data model<sup class=\"reference\" id=\"cite_ref-224\"><a href=\"#cite_note-224\">[224]</a></sup> through which graphs can be created but the model lacks an effective means of distinguishing between them once published on the <a href=\"/wiki/World_Wide_Web\" title=\"World Wide Web\">Web</a> at large.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Natural language generation",
      "definition_text":"Natural language generation \u2013 (NLG), is a software process that transforms structured data into plain-English content.  It can be used to produce long-form content for organizations to automate custom reports, as well as produce custom content for a web or mobile application. It can also be used to generate short blurbs of text in interactive conversations (a chatbot) which might even be read out loud by a text-to-speech system.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Natural_language_generation\" title=\"Natural language generation\">Natural language generation</a> \u2013 (NLG), is a software process that transforms structured data into plain-English content.  It can be used to produce long-form content for organizations to automate custom reports, as well as produce custom content for a web or mobile application. It can also be used to generate short blurbs of text in interactive conversations (a <a href=\"/wiki/Chatbot\" title=\"Chatbot\">chatbot</a>) which might even be read out loud by a <a class=\"mw-redirect\" href=\"/wiki/Text-to-speech\" title=\"Text-to-speech\">text-to-speech</a> system.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Natural language processing",
      "definition_text":"Natural language processing \u2013  (NLP), is a subfield of computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human (natural) languages, in particular how to program computers to process and analyze large amounts of natural language data.",
      "definition_html":[
         "<li><a href=\"/wiki/Natural_language_processing\" title=\"Natural language processing\">Natural language processing</a> \u2013  (NLP), is a subfield of computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human (natural) languages, in particular how to program computers to process and analyze large amounts of <a href=\"/wiki/Natural_language\" title=\"Natural language\">natural language</a> data.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Natural language programming",
      "definition_text":"Natural language programming \u2013 is an ontology-assisted way of programming in terms of natural-language sentences, e.g. English.[225]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Natural_language_programming\" title=\"Natural language programming\">Natural language programming</a> \u2013 is an <a href=\"/wiki/Ontology_(information_science)\" title=\"Ontology (information science)\">ontology</a>-assisted way of <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming</a> in terms of <a href=\"/wiki/Natural_language\" title=\"Natural language\">natural-language</a> sentences, e.g. <a href=\"/wiki/English_language\" title=\"English language\">English</a>.<sup class=\"reference\" id=\"cite_ref-225\"><a href=\"#cite_note-225\">[225]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Network motif",
      "definition_text":"Network motif \u2013 All networks, including biological networks, social networks, technological networks (e.g., computer networks and electrical circuits) and more, can be represented as graphs, which include a wide variety of subgraphs. One important local property of networks are so-called network motifs, which are defined as recurrent and statistically significant sub-graphs or patterns.",
      "definition_html":[
         "<li><a href=\"/wiki/Network_motif\" title=\"Network motif\">Network motif</a> \u2013 All networks, including biological networks, social networks, technological networks (e.g., computer networks and electrical circuits) and more, can be represented as <a href=\"/wiki/Complex_network\" title=\"Complex network\">graphs</a>, which include a wide variety of subgraphs. One important local property of networks are so-called network motifs, which are defined as recurrent and <a class=\"mw-redirect\" href=\"/wiki/Statistically_significant\" title=\"Statistically significant\">statistically significant</a> sub-graphs or patterns.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Neural machine translation",
      "definition_text":"Neural machine translation \u2013 (NMT), is an approach to machine translation that uses a large artificial neural network to predict the likelihood of a sequence of words, typically modeling entire sentences in a single integrated model.",
      "definition_html":[
         "<li><a href=\"/wiki/Neural_machine_translation\" title=\"Neural machine translation\">Neural machine translation</a> \u2013 (NMT), is an approach to <a href=\"/wiki/Machine_translation\" title=\"Machine translation\">machine translation</a> that uses a large <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> to predict the likelihood of a sequence of words, typically modeling entire sentences in a single integrated model.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Neural Turing machine",
      "definition_text":"Neural Turing machine \u2013 (NTMs) is a recurrent neural network model.  NTMs combine the fuzzy pattern matching capabilities of neural networks with the algorithmic power of programmable computers. An NTM has a neural network controller coupled to external memory resources, which it interacts with through attentional mechanisms. The memory interactions are differentiable end-to-end, making it possible to optimize them using gradient descent.[226] An NTM with a long short-term memory (LSTM) network controller can infer simple algorithms such as copying, sorting, and associative recall from examples alone.[227]",
      "definition_html":[
         "<li><a href=\"/wiki/Neural_Turing_machine\" title=\"Neural Turing machine\">Neural Turing machine</a> \u2013 (NTMs) is a <a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">recurrent neural network</a> model.  NTMs combine the fuzzy <a href=\"/wiki/Pattern_matching\" title=\"Pattern matching\">pattern matching</a> capabilities of <a href=\"/wiki/Neural_network\" title=\"Neural network\">neural networks</a> with the <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithmic</a> power of <a class=\"mw-redirect\" href=\"/wiki/Programmable_computer\" title=\"Programmable computer\">programmable computers</a>. An NTM has a neural network controller coupled to <a class=\"mw-redirect\" href=\"/wiki/Auxiliary_memory\" title=\"Auxiliary memory\">external memory</a> resources, which it interacts with through attentional mechanisms. The memory interactions are differentiable end-to-end, making it possible to optimize them using <a href=\"/wiki/Gradient_descent\" title=\"Gradient descent\">gradient descent</a>.<sup class=\"reference\" id=\"cite_ref-MyUser_Https:_May_17_2016c_226-0\"><a href=\"#cite_note-MyUser_Https:_May_17_2016c-226\">[226]</a></sup> An NTM with a <a href=\"/wiki/Long_short-term_memory\" title=\"Long short-term memory\">long short-term memory</a> (LSTM) network controller can infer simple algorithms such as copying, sorting, and associative recall from examples alone.<sup class=\"reference\" id=\"cite_ref-227\"><a href=\"#cite_note-227\">[227]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Neuro fuzzy",
      "definition_text":"Neuro-fuzzy \u2013 refers to combinations of artificial neural networks and fuzzy logic.",
      "definition_html":[
         "<li><a href=\"/wiki/Neuro-fuzzy\" title=\"Neuro-fuzzy\">Neuro-fuzzy</a> \u2013 refers to combinations of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a> and <a href=\"/wiki/Fuzzy_logic\" title=\"Fuzzy logic\">fuzzy logic</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Neurocybernetics",
      "definition_text":"Neurocybernetics \u2013 A brain\u2013computer interface (BCI), sometimes called a neural-control interface (NCI), mind-machine interface (MMI), direct neural interface (DNI), or brain\u2013machine interface (BMI), is a direct communication pathway between an enhanced or wired brain and an external device. BCI differs from neuromodulation in that it allows for bidirectional information flow. BCIs are often directed at researching, mapping, assisting, augmenting, or repairing human cognitive or sensory-motor functions.[228]",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Neurocybernetics\" title=\"Neurocybernetics\">Neurocybernetics</a> \u2013 A brain\u2013computer interface (BCI), sometimes called a neural-control interface (NCI), mind-machine interface (MMI), direct neural interface (DNI), or brain\u2013machine interface (BMI), is a direct communication pathway between an enhanced or wired <a href=\"/wiki/Brain\" title=\"Brain\">brain</a> and an external device. BCI differs from <a href=\"/wiki/Neuromodulation_(medicine)\" title=\"Neuromodulation (medicine)\">neuromodulation</a> in that it allows for bidirectional information flow. BCIs are often directed at researching, mapping, assisting, augmenting, or repairing human cognitive or sensory-motor functions.<sup class=\"reference\" id=\"cite_ref-Krucoff_584_228-0\"><a href=\"#cite_note-Krucoff_584-228\">[228]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Neuromorphic engineering",
      "definition_text":"Neuromorphic engineering \u2013 also known as neuromorphic computing,[229][230][231] is a concept describing the use of very-large-scale integration (VLSI) systems containing electronic analog circuits to mimic neuro-biological architectures present in the nervous system.[232] In recent times, the term neuromorphic has been used to describe analog, digital, mixed-mode analog/digital VLSI, and software systems that implement models of neural systems (for perception, motor control, or multisensory integration). The implementation of neuromorphic computing on the hardware level can be realized by oxide-based memristors,[233] spintronic memories,[234] threshold switches, and transistors.[235]",
      "definition_html":[
         "<li><a href=\"/wiki/Neuromorphic_engineering\" title=\"Neuromorphic engineering\">Neuromorphic engineering</a> \u2013 also known as neuromorphic computing,<sup class=\"reference\" id=\"cite_ref-229\"><a href=\"#cite_note-229\">[229]</a></sup><sup class=\"reference\" id=\"cite_ref-230\"><a href=\"#cite_note-230\">[230]</a></sup><sup class=\"reference\" id=\"cite_ref-humanbrainproject_231-0\"><a href=\"#cite_note-humanbrainproject-231\">[231]</a></sup> is a concept describing the use of <a class=\"mw-redirect\" href=\"/wiki/Very-large-scale_integration\" title=\"Very-large-scale integration\">very-large-scale integration</a> (VLSI) systems containing electronic <a class=\"mw-redirect\" href=\"/wiki/Analog_circuit\" title=\"Analog circuit\">analog circuits</a> to mimic neuro-biological architectures present in the nervous system.<sup class=\"reference\" id=\"cite_ref-232\"><a href=\"#cite_note-232\">[232]</a></sup> In recent times, the term <i>neuromorphic</i> has been used to describe analog, digital, mixed-mode analog/digital VLSI, and software systems that implement models of <a class=\"mw-redirect\" href=\"/wiki/Neural_system\" title=\"Neural system\">neural systems</a> (for <a href=\"/wiki/Perception\" title=\"Perception\">perception</a>, <a href=\"/wiki/Motor_control\" title=\"Motor control\">motor control</a>, or <a href=\"/wiki/Multisensory_integration\" title=\"Multisensory integration\">multisensory integration</a>). The implementation of neuromorphic computing on the hardware level can be realized by oxide-based <a href=\"/wiki/Memristor\" title=\"Memristor\">memristors</a>,<sup class=\"reference\" id=\"cite_ref-Maan_1\u201313_233-0\"><a href=\"#cite_note-Maan_1\u201313-233\">[233]</a></sup> spintronic memories,<sup class=\"reference\" id=\"cite_ref-234\"><a href=\"#cite_note-234\">[234]</a></sup> threshold switches, and <a href=\"/wiki/Transistor\" title=\"Transistor\">transistors</a>.<sup class=\"reference\" id=\"cite_ref-235\"><a href=\"#cite_note-235\">[235]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Node",
      "definition_text":"Node \u2013 is a basic unit of a data structure, such as a linked list or tree data structure. Nodes contain data and also may link to other nodes. Links between nodes are often implemented by pointers.",
      "definition_html":[
         "<li><a href=\"/wiki/Node_(computer_science)\" title=\"Node (computer science)\">Node</a> \u2013 is a basic unit of a <a href=\"/wiki/Data_structure\" title=\"Data structure\">data structure</a>, such as a <a href=\"/wiki/Linked_list\" title=\"Linked list\">linked list</a> or <a href=\"/wiki/Tree_(data_structure)\" title=\"Tree (data structure)\">tree</a> data structure. Nodes contain <a href=\"/wiki/Data\" title=\"Data\">data</a> and also may link to other nodes. Links between nodes are often implemented by <a href=\"/wiki/Pointer_(computer_programming)\" title=\"Pointer (computer programming)\">pointers</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Nondeterministic algorithm",
      "definition_text":"Nondeterministic algorithm \u2013  is an algorithm that, even for the same input, can exhibit different behaviors on different runs, as opposed to a deterministic algorithm.",
      "definition_html":[
         "<li><a href=\"/wiki/Nondeterministic_algorithm\" title=\"Nondeterministic algorithm\">Nondeterministic algorithm</a> \u2013  is an <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a> that, even for the same input, can exhibit different behaviors on different runs, as opposed to a <a href=\"/wiki/Deterministic_algorithm\" title=\"Deterministic algorithm\">deterministic algorithm</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Nouvelle AI",
      "definition_text":"Nouvelle AI \u2013 Nouvelle AI differs from classical AI by aiming to produce robots with intelligence levels similar to insects. Researchers believe that intelligence can emerge organically from simple behaviors as these intelligences interacted with the \"real world,\" instead of using the constructed worlds which symbolic AIs typically needed to have programmed into them.[236]",
      "definition_html":[
         "<li><a href=\"/wiki/Nouvelle_AI\" title=\"Nouvelle AI\">Nouvelle AI</a> \u2013 Nouvelle AI differs from classical AI by aiming to produce robots with intelligence levels similar to insects. Researchers believe that intelligence can emerge organically from simple behaviors as these intelligences interacted with the \"real world,\" instead of using the constructed worlds which symbolic AIs typically needed to have programmed into them.<sup class=\"reference\" id=\"cite_ref-236\"><a href=\"#cite_note-236\">[236]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"NP",
      "definition_text":"NP \u2013 In computational complexity theory, NP (nondeterministic polynomial time) is a complexity class used to classify decision problems.  NP is the set of decision problems for which the problem instances, where the answer is \"yes\", have proofs verifiable in polynomial time.[237][Note 1]",
      "definition_html":[
         "<li><a href=\"/wiki/NP_(complexity)\" title=\"NP (complexity)\">NP</a> \u2013 In <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, NP (nondeterministic polynomial time) is a <a href=\"/wiki/Complexity_class\" title=\"Complexity class\">complexity class</a> used to classify <a href=\"/wiki/Decision_problem\" title=\"Decision problem\">decision problems</a>.  NP is the <a href=\"/wiki/Set_(mathematics)\" title=\"Set (mathematics)\">set</a> of decision problems for which the <a href=\"/wiki/Computational_complexity_theory#Problem_instances\" title=\"Computational complexity theory\">problem instances</a>, where the answer is \"yes\", have <a href=\"/wiki/Mathematical_proof\" title=\"Mathematical proof\">proofs</a> verifiable in <a class=\"mw-redirect\" href=\"/wiki/Polynomial_time\" title=\"Polynomial time\">polynomial time</a>.<sup class=\"reference\" id=\"cite_ref-kleinberg2006_237-0\"><a href=\"#cite_note-kleinberg2006-237\">[237]</a></sup><sup class=\"reference\" id=\"cite_ref-238\"><a href=\"#cite_note-238\">[Note 1]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"NP completeness",
      "definition_text":"NP-completeness \u2013 In computational complexity theory, a problem is NP-complete when it can be solved by a restricted class of brute force search algorithms and it can be used to simulate any other problem with a similar algorithm. More precisely, each input to the problem should be associated with a set of solutions of polynomial length, whose validity can be tested quickly (in polynomial time[238]), such that the output for any input is \"yes\" if the solution set is non-empty and \"no\" if it is empty.",
      "definition_html":[
         "<li><a href=\"/wiki/NP-completeness\" title=\"NP-completeness\">NP-completeness</a> \u2013 In <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, a problem is NP-complete when it can be solved by a restricted class of <a class=\"mw-redirect\" href=\"/wiki/Brute_force_search\" title=\"Brute force search\">brute force search</a> algorithms and it can be used to simulate any other problem with a similar algorithm. More precisely, each input to the problem should be associated with a set of solutions of polynomial length, whose validity can be tested quickly (in <a class=\"mw-redirect\" href=\"/wiki/Polynomial_time\" title=\"Polynomial time\">polynomial time</a><sup class=\"reference\" id=\"cite_ref-239\"><a href=\"#cite_note-239\">[238]</a></sup>), such that the output for any input is \"yes\" if the solution set is non-empty and \"no\" if it is empty.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"NP hardness",
      "definition_text":"NP-hardness \u2013 (non-deterministic polynomial-time hardness), in computational complexity theory, is the defining property of a class of problems that are, informally, \"at least as hard as the hardest problems in NP\". A simple example of an NP-hard problem is the subset sum problem.",
      "definition_html":[
         "<li><a href=\"/wiki/NP-hardness\" title=\"NP-hardness\">NP-hardness</a> \u2013 (<a href=\"/wiki/NP_(complexity)\" title=\"NP (complexity)\">non-deterministic polynomial-time</a> hardness), in <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, is the defining property of a class of problems that are, informally, \"at least as hard as the hardest problems in NP\". A simple example of an NP-hard problem is the <a href=\"/wiki/Subset_sum_problem\" title=\"Subset sum problem\">subset sum problem</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Occam's razor",
      "definition_text":"Occam's razor \u2013 (also Ockham's razor or Ocham's razor), is the problem-solving principle that states that when presented with competing hypotheses that make the same predictions, one should select the solution with the fewest assumptions[239] and is not meant to filter out hypotheses that make different predictions. The idea is attributed to English Franciscan friar William of Ockham (c. 1287\u20131347), a scholastic philosopher and theologian.",
      "definition_html":[
         "<li><a href=\"/wiki/Occam%27s_razor\" title=\"Occam's razor\">Occam's razor</a> \u2013 (also Ockham's razor or Ocham's razor), is the problem-solving <a href=\"/wiki/Principle\" title=\"Principle\">principle</a> that states that when presented with competing <a href=\"/wiki/Hypothesis\" title=\"Hypothesis\">hypotheses</a> that make the same predictions, one should select the solution with the fewest assumptions<sup class=\"reference\" id=\"cite_ref-240\"><a href=\"#cite_note-240\">[239]</a></sup> and is not meant to filter out hypotheses that make different predictions. The idea is attributed to English <a class=\"mw-redirect\" href=\"/wiki/Franciscan\" title=\"Franciscan\">Franciscan</a> friar <a href=\"/wiki/William_of_Ockham\" title=\"William of Ockham\">William of Ockham</a> (<abbr title=\"circa\">c.</abbr> 1287\u20131347), a <a href=\"/wiki/Scholasticism\" title=\"Scholasticism\">scholastic</a> philosopher and <a href=\"/wiki/Catholic_theology\" title=\"Catholic theology\">theologian</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Offline learning",
      "definition_text":"Offline learning \u2013",
      "definition_html":[
         "<li><a href=\"/wiki/Offline_learning\" title=\"Offline learning\">Offline learning</a> \u2013</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Online machine learning",
      "definition_text":"Online machine learning \u2013 is a method of machine learning in which data becomes available in a sequential order and is used to update the best predictor for future data at each step, as opposed to batch learning techniques which generate the best predictor by learning on the entire training data set at once. Online learning is a common technique used in areas of machine learning where it is computationally infeasible to train over the entire dataset, requiring the need of out-of-core algorithms. It is also used in situations where it is necessary for the algorithm to dynamically adapt to new patterns in the data, or when the data itself is generated as a function of time.",
      "definition_html":[
         "<li><a href=\"/wiki/Online_machine_learning\" title=\"Online machine learning\">Online machine learning</a> \u2013 is a method of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> in which data becomes available in a sequential order and is used to update the best predictor for future data at each step, as opposed to batch learning techniques which generate the best predictor by learning on the entire training data set at once. Online learning is a common technique used in areas of machine learning where it is computationally infeasible to train over the entire dataset, requiring the need of <a class=\"mw-redirect\" href=\"/wiki/Out-of-core\" title=\"Out-of-core\">out-of-core</a> algorithms. It is also used in situations where it is necessary for the algorithm to dynamically adapt to new patterns in the data, or when the data itself is generated as a function of time.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Ontology learning",
      "definition_text":"Ontology learning \u2013 (ontology extraction, ontology generation, or ontology acquisition), is the automatic or semi-automatic creation of ontologies, including extracting the corresponding domain's terms and the relationships between the concepts that these terms represent from a corpus of natural language text, and encoding them with an ontology language for easy retrieval.",
      "definition_html":[
         "<li><a href=\"/wiki/Ontology_learning\" title=\"Ontology learning\">Ontology learning</a> \u2013 (ontology extraction, ontology generation, or ontology acquisition), is the automatic or semi-automatic creation of <a href=\"/wiki/Ontology_(information_science)\" title=\"Ontology (information science)\">ontologies</a>, including extracting the corresponding <a href=\"/wiki/Domain_of_discourse\" title=\"Domain of discourse\">domain's</a> terms and the relationships between the <a href=\"/wiki/Conceptualization_(information_science)\" title=\"Conceptualization (information science)\">concepts</a> that these terms represent from a <a href=\"/wiki/Text_corpus\" title=\"Text corpus\">corpus</a> of natural language text, and encoding them with an <a href=\"/wiki/Ontology_language\" title=\"Ontology language\">ontology language</a> for easy retrieval.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"OpenAI",
      "definition_text":"OpenAI \u2013 is the for-profit corporation OpenAI LP, whose parent organization is the non-profit organization OpenAI Inc[240] that conducts research in the field of artificial intelligence (AI) with the stated aim to promote and develop friendly AI in such a way as to benefit humanity as a whole.",
      "definition_html":[
         "<li><a href=\"/wiki/OpenAI\" title=\"OpenAI\">OpenAI</a> \u2013 is the for-profit corporation OpenAI LP, whose <a href=\"/wiki/Parent_company\" title=\"Parent company\">parent organization</a> is the non-profit organization OpenAI Inc<sup class=\"reference\" id=\"cite_ref-241\"><a href=\"#cite_note-241\">[240]</a></sup> that conducts research in the field of <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> (AI) with the stated aim to promote and develop <a href=\"/wiki/Friendly_artificial_intelligence\" title=\"Friendly artificial intelligence\">friendly AI</a> in such a way as to benefit humanity as a whole.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"OpenCog",
      "definition_text":"OpenCog \u2013 is a project that aims to build an open source artificial intelligence framework. OpenCog Prime is an architecture for robot and virtual embodied cognition that defines a set of interacting components designed to give rise to human-equivalent artificial general intelligence (AGI) as an emergent phenomenon of the whole system.[241]",
      "definition_html":[
         "<li><a href=\"/wiki/OpenCog\" title=\"OpenCog\">OpenCog</a> \u2013 is a project that aims to build an <a class=\"mw-redirect\" href=\"/wiki/Open_source_software\" title=\"Open source software\">open source</a> artificial intelligence framework. OpenCog Prime is an architecture for robot and virtual <a href=\"/wiki/Embodied_cognition\" title=\"Embodied cognition\">embodied cognition</a> that defines a set of interacting components designed to give rise to human-equivalent <a href=\"/wiki/Artificial_general_intelligence\" title=\"Artificial general intelligence\">artificial general intelligence</a> (AGI) as an <a class=\"mw-redirect\" href=\"/wiki/Emergent_phenomenon\" title=\"Emergent phenomenon\">emergent phenomenon</a> of the whole system.<sup class=\"reference\" id=\"cite_ref-242\"><a href=\"#cite_note-242\">[241]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Open Mind Common Sense",
      "definition_text":"Open Mind Common Sense \u2013 is an artificial intelligence project based at the Massachusetts Institute of Technology (MIT) Media Lab whose goal is to build and utilize a large commonsense knowledge base from the contributions of many thousands of people across the Web.",
      "definition_html":[
         "<li><a href=\"/wiki/Open_Mind_Common_Sense\" title=\"Open Mind Common Sense\">Open Mind Common Sense</a> \u2013 is an artificial intelligence project based at the <a href=\"/wiki/Massachusetts_Institute_of_Technology\" title=\"Massachusetts Institute of Technology\">Massachusetts Institute of Technology</a> (MIT) <a href=\"/wiki/MIT_Media_Lab\" title=\"MIT Media Lab\">Media Lab</a> whose goal is to build and utilize a large <a class=\"mw-redirect\" href=\"/wiki/Commonsense_knowledge_base\" title=\"Commonsense knowledge base\">commonsense knowledge base</a> from the contributions of many thousands of people across the Web.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Open source software",
      "definition_text":"Open-source software \u2013 (OSS), is a type of computer software in which source code is released under a license in which the copyright holder grants users the rights to study, change, and distribute the software to anyone and for any purpose.[242] Open-source software may be developed in a collaborative public manner. Open-source software is a prominent example of open collaboration.[243]",
      "definition_html":[
         "<li><a href=\"/wiki/Open-source_software\" title=\"Open-source software\">Open-source software</a> \u2013 (OSS), is a type of <a class=\"mw-redirect\" href=\"/wiki/Computer_software\" title=\"Computer software\">computer software</a> in which <a href=\"/wiki/Source_code\" title=\"Source code\">source code</a> is released under a <a href=\"/wiki/Open-source_license\" title=\"Open-source license\">license</a> in which the <a href=\"/wiki/Copyright\" title=\"Copyright\">copyright</a> holder grants users the rights to study, change, and <a href=\"/wiki/Software_distribution\" title=\"Software distribution\">distribute the software</a> to anyone and for any purpose.<sup class=\"reference\" id=\"cite_ref-243\"><a href=\"#cite_note-243\">[242]</a></sup> Open-source <a href=\"/wiki/Software\" title=\"Software\">software</a> may be developed in a <a href=\"/wiki/Open-source_model\" title=\"Open-source model\">collaborative public manner</a>. Open-source software is a prominent example of <a href=\"/wiki/Open_collaboration\" title=\"Open collaboration\">open collaboration</a>.<sup class=\"reference\" id=\"cite_ref-Open_Collaboration_244-0\"><a href=\"#cite_note-Open_Collaboration-244\">[243]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Partial order reduction",
      "definition_text":"Partial order reduction \u2013 is a technique for reducing the size of the state-space to be searched by a model checking or automated planning and scheduling algorithm. It exploits the commutativity of concurrently executed transitions, which result in the same state when executed in different orders.",
      "definition_html":[
         "<li><a href=\"/wiki/Partial_order_reduction\" title=\"Partial order reduction\">Partial order reduction</a> \u2013 is a technique for reducing the size of the <a class=\"mw-redirect\" href=\"/wiki/State_transition_system\" title=\"State transition system\">state-space</a> to be searched by a <a href=\"/wiki/Model_checking\" title=\"Model checking\">model checking</a> or <a href=\"/wiki/Automated_planning_and_scheduling\" title=\"Automated planning and scheduling\">automated planning and scheduling</a> <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a>. It exploits the commutativity of concurrently executed <a href=\"/wiki/Transition_(computer_science)\" title=\"Transition (computer science)\">transitions</a>, which result in the same state when executed in different orders.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Partially observable Markov decision process",
      "definition_text":"Partially observable Markov decision process \u2013 (POMDP), is a generalization of a Markov decision process (MDP). A POMDP models an agent decision process in which it is assumed that the system dynamics are determined by an MDP, but the agent cannot directly observe the underlying state. Instead, it must maintain a probability distribution over the set of possible states, based on a set of observations and observation probabilities, and the underlying MDP.",
      "definition_html":[
         "<li><a href=\"/wiki/Partially_observable_Markov_decision_process\" title=\"Partially observable Markov decision process\">Partially observable Markov decision process</a> \u2013 (POMDP), is a generalization of a <a href=\"/wiki/Markov_decision_process\" title=\"Markov decision process\">Markov decision process</a> (MDP). A POMDP models an agent decision process in which it is assumed that the system dynamics are determined by an MDP, but the agent cannot directly observe the underlying state. Instead, it must maintain a probability distribution over the set of possible states, based on a set of observations and observation probabilities, and the underlying MDP.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Particle swarm optimization",
      "definition_text":"Particle swarm optimization \u2013 (PSO) is a computational method that optimizes a problem by iteratively trying to improve a candidate solution with regard to a given measure of quality. It solves a problem by having a population of candidate solutions, here dubbed particles, and moving these particles around in the search-space according to simple mathematical formulae over the particle's position and velocity. Each particle's movement is influenced by its local best known position, but is also guided toward the best known positions in the search-space, which are updated as better positions are found by other particles. This is expected to move the swarm toward the best solutions.",
      "definition_html":[
         "<li><a href=\"/wiki/Particle_swarm_optimization\" title=\"Particle swarm optimization\">Particle swarm optimization</a> \u2013 (PSO) is a computational method that <a href=\"/wiki/Mathematical_optimization\" title=\"Mathematical optimization\">optimizes</a> a problem by <a href=\"/wiki/Iterative_method\" title=\"Iterative method\">iteratively</a> trying to improve a <a class=\"mw-redirect\" href=\"/wiki/Candidate_solution\" title=\"Candidate solution\">candidate solution</a> with regard to a given measure of quality. It solves a problem by having a population of candidate solutions, here dubbed <a href=\"/wiki/Point_particle\" title=\"Point particle\">particles</a>, and moving these particles around in the <a class=\"mw-redirect\" href=\"/wiki/Optimization_(mathematics)#Concepts_and_notation\" title=\"Optimization (mathematics)\">search-space</a> according to simple <a href=\"/wiki/Formula\" title=\"Formula\">mathematical formulae</a> over the particle's <a class=\"mw-redirect\" href=\"/wiki/Position_(vector)\" title=\"Position (vector)\">position</a> and <a href=\"/wiki/Velocity\" title=\"Velocity\">velocity</a>. Each particle's movement is influenced by its local best known position, but is also guided toward the best known positions in the search-space, which are updated as better positions are found by other particles. This is expected to move the swarm toward the best solutions.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Pathfinding",
      "definition_text":"Pathfinding \u2013  or pathing, is the plotting, by a computer application, of the shortest route between two points. It is a more practical variant on solving mazes. This field of research is based heavily on Dijkstra's algorithm for finding a shortest path on a weighted graph.",
      "definition_html":[
         "<li><a href=\"/wiki/Pathfinding\" title=\"Pathfinding\">Pathfinding</a> \u2013  or pathing, is the plotting, by a computer application, of the shortest route between two points. It is a more practical variant on <a href=\"/wiki/Maze#Solving_mazes\" title=\"Maze\">solving mazes</a>. This field of research is based heavily on <a href=\"/wiki/Dijkstra%27s_algorithm\" title=\"Dijkstra's algorithm\">Dijkstra's algorithm</a> for finding a shortest path on a <a class=\"mw-redirect\" href=\"/wiki/Glossary_of_graph_theory#Weighted_graphs_and_networks\" title=\"Glossary of graph theory\">weighted graph</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Pattern recognition",
      "definition_text":"Pattern recognition \u2013  is concerned with the automatic discovery of regularities in data through the use of computer algorithms and with the use of these regularities to take actions such as classifying the data into different categories.[244]",
      "definition_html":[
         "<li><a href=\"/wiki/Pattern_recognition\" title=\"Pattern recognition\">Pattern recognition</a> \u2013  is concerned with the automatic discovery of regularities in data through the use of computer algorithms and with the use of these regularities to take actions such as classifying the data into different categories.<sup class=\"reference\" id=\"cite_ref-245\"><a href=\"#cite_note-245\">[244]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Predicate logic",
      "definition_text":"Predicate logic \u2013 First-order logic\u2014also known as predicate logic and first-order predicate calculus\u2014is a collection of formal systems used in mathematics, philosophy, linguistics, and computer science. First-order logic uses quantified variables over non-logical objects and allows the use of sentences that contain variables, so that rather than propositions such as Socrates is a man one can have expressions in the form \"there exists x such that x is Socrates and x is a man\" and there exists is a quantifier while x is a variable.[174] This distinguishes it from propositional logic, which does not use quantifiers or relations;[245] in this sense, propositional logic is the foundation of first-order logic.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Predicate_logic\" title=\"Predicate logic\">Predicate logic</a> \u2013 First-order logic\u2014also known as predicate logic and first-order predicate calculus\u2014is a collection of <a href=\"/wiki/Formal_system\" title=\"Formal system\">formal systems</a> used in <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, <a href=\"/wiki/Philosophy\" title=\"Philosophy\">philosophy</a>, <a href=\"/wiki/Linguistics\" title=\"Linguistics\">linguistics</a>, and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>. First-order logic uses <a class=\"mw-redirect\" href=\"/wiki/Quantification_(logic)\" title=\"Quantification (logic)\">quantified variables</a> over non-logical objects and allows the use of sentences that contain variables, so that rather than propositions such as <i>Socrates is a man</i> one can have expressions in the form \"there exists x such that x is Socrates and x is a man\" and <i>there exists</i> is a quantifier while <i>x</i> is a variable.<sup class=\"reference\" id=\"cite_ref-auto_174-1\"><a href=\"#cite_note-auto-174\">[174]</a></sup> This distinguishes it from <a class=\"mw-redirect\" href=\"/wiki/Propositional_logic\" title=\"Propositional logic\">propositional logic</a>, which does not use quantifiers or <a href=\"/wiki/Finitary_relation\" title=\"Finitary relation\">relations</a>;<sup class=\"reference\" id=\"cite_ref-246\"><a href=\"#cite_note-246\">[245]</a></sup> in this sense, propositional logic is the foundation of first-order logic.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Predictive analytics",
      "definition_text":"Predictive analytics \u2013 encompasses a variety of statistical techniques from data mining, predictive modelling, and machine learning, that analyze current and historical facts to make predictions about future or otherwise unknown events.[246][247]",
      "definition_html":[
         "<li><a href=\"/wiki/Predictive_analytics\" title=\"Predictive analytics\">Predictive analytics</a> \u2013 encompasses a variety of statistical techniques from <a href=\"/wiki/Data_mining\" title=\"Data mining\">data mining</a>, <a href=\"/wiki/Predictive_modelling\" title=\"Predictive modelling\">predictive modelling</a>, and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, that analyze current and historical facts to make predictions about future or otherwise unknown events.<sup class=\"reference\" id=\"cite_ref-Nyce_247-0\"><a href=\"#cite_note-Nyce-247\">[246]</a></sup><sup class=\"reference\" id=\"cite_ref-Eckerson_248-0\"><a href=\"#cite_note-Eckerson-248\">[247]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Principal component analysis",
      "definition_text":"Principal component analysis \u2013 (PCA), is a statistical procedure that uses an orthogonal transformation to convert a set of observations of possibly correlated variables (entities each of which takes on various numerical values) into a set of values of linearly uncorrelated variables called principal components. This transformation is defined in such a way that the first principal component has the largest possible variance (that is, accounts for as much of the variability in the data as possible), and each succeeding component, in turn, has the highest variance possible under the constraint that it is orthogonal to the preceding components. The resulting vectors (each being a linear combination of the variables and containing n observations) are an uncorrelated orthogonal basis set. PCA is sensitive to the relative scaling of the original variables.",
      "definition_html":[
         "<li><a href=\"/wiki/Principal_component_analysis\" title=\"Principal component analysis\">Principal component analysis</a> \u2013 (PCA), is a statistical procedure that uses an <a href=\"/wiki/Orthogonal_transformation\" title=\"Orthogonal transformation\">orthogonal transformation</a> to convert a set of observations of possibly correlated variables (entities each of which takes on various numerical values) into a set of values of <a href=\"/wiki/Correlation_and_dependence\" title=\"Correlation and dependence\">linearly uncorrelated</a> variables called principal components. This transformation is defined in such a way that the first principal component has the largest possible <a href=\"/wiki/Variance\" title=\"Variance\">variance</a> (that is, accounts for as much of the variability in the data as possible), and each succeeding component, in turn, has the highest variance possible under the constraint that it is <a class=\"mw-redirect\" href=\"/wiki/Orthogonal\" title=\"Orthogonal\">orthogonal</a> to the preceding components. The resulting vectors (each being a <a href=\"/wiki/Linear_combination\" title=\"Linear combination\">linear combination</a> of the variables and containing <i>n</i> observations) are an uncorrelated <a class=\"mw-redirect\" href=\"/wiki/Orthogonal_basis_set\" title=\"Orthogonal basis set\">orthogonal basis set</a>. PCA is sensitive to the relative scaling of the original variables.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Principle of rationality",
      "definition_text":"Principle of rationality \u2013 (or rationality principle), was coined by Karl R. Popper in his Harvard Lecture of 1963, and published in his book Myth of Framework.[248] It is related to what he called the 'logic of the situation' in an Economica article of 1944/1945, published later in his book The Poverty of Historicism.[249] According to Popper's rationality principle, agents act in the most adequate way according to the objective situation. It is an idealized conception of human behavior which he used to drive his model of situational analysis.",
      "definition_html":[
         "<li><a href=\"/wiki/Principle_of_rationality\" title=\"Principle of rationality\">Principle of rationality</a> \u2013 (or rationality principle), was coined by <a class=\"mw-redirect\" href=\"/wiki/Karl_R._Popper\" title=\"Karl R. Popper\">Karl R. Popper</a> in his Harvard Lecture of 1963, and published in his book <i>Myth of Framework</i>.<sup class=\"reference\" id=\"cite_ref-249\"><a href=\"#cite_note-249\">[248]</a></sup> It is related to what he called the 'logic of the situation' in an <i>Economica</i> article of 1944/1945, published later in his book <i>The Poverty of Historicism</i>.<sup class=\"reference\" id=\"cite_ref-250\"><a href=\"#cite_note-250\">[249]</a></sup> According to Popper's rationality principle, agents act in the most adequate way according to the objective situation. It is an idealized conception of human behavior which he used to drive his model of <a class=\"mw-redirect\" href=\"/wiki/Situational_analysis\" title=\"Situational analysis\">situational analysis</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Probabilistic programming",
      "definition_text":"Probabilistic programming \u2013 (PP), is a programming paradigm in which probabilistic models are specified and inference for these models is performed automatically.[250] It represents an attempt to unify probabilistic modeling and traditional general-purpose programming in order to make the former easier and more widely applicable.[251][252] It can be used to create systems that help make decisions in the face of uncertainty.  Programming languages used for probabilistic programming are referred to as \"Probabilistic programming languages\" (PPLs).",
      "definition_html":[
         "<li><a href=\"/wiki/Probabilistic_programming\" title=\"Probabilistic programming\">Probabilistic programming</a> \u2013 (PP), is a <a href=\"/wiki/Programming_paradigm\" title=\"Programming paradigm\">programming paradigm</a> in which <a class=\"mw-redirect\" href=\"/wiki/Probabilistic_model\" title=\"Probabilistic model\">probabilistic models</a> are specified and inference for these models is performed automatically.<sup class=\"reference\" id=\"cite_ref-physorg_251-0\"><a href=\"#cite_note-physorg-251\">[250]</a></sup> It represents an attempt to unify probabilistic modeling and traditional general-purpose programming in order to make the former easier and more widely applicable.<sup class=\"reference\" id=\"cite_ref-252\"><a href=\"#cite_note-252\">[251]</a></sup><sup class=\"reference\" id=\"cite_ref-Pfeffer2014_253-0\"><a href=\"#cite_note-Pfeffer2014-253\">[252]</a></sup> It can be used to create systems that help make decisions in the face of uncertainty.  Programming languages used for probabilistic programming are referred to as \"Probabilistic programming languages\" (PPLs).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Production system",
      "definition_text":"Production system \u2013",
      "definition_html":[
         "<li><a href=\"/wiki/Production_system_(computer_science)\" title=\"Production system (computer science)\">Production system</a> \u2013</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Programming language",
      "definition_text":"Programming language \u2013 is a formal language, which comprises a set of instructions that produce various kinds of output. Programming languages are used in computer programming to implement algorithms.",
      "definition_html":[
         "<li><a href=\"/wiki/Programming_language\" title=\"Programming language\">Programming language</a> \u2013 is a <a href=\"/wiki/Formal_language\" title=\"Formal language\">formal language</a>, which comprises a <a class=\"mw-redirect\" href=\"/wiki/Instruction_set\" title=\"Instruction set\">set of instructions</a> that produce various kinds of <a href=\"/wiki/Input/output\" title=\"Input/output\">output</a>. Programming languages are used in <a href=\"/wiki/Computer_programming\" title=\"Computer programming\">computer programming</a> to implement <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Prolog",
      "definition_text":"Prolog \u2013 is a  logic programming language associated with artificial intelligence and computational linguistics.[253][254][255]  Prolog has its roots in first-order logic, a formal logic, and unlike many other programming languages, Prolog is intended primarily as a declarative programming language: the program logic is expressed in terms of relations, represented as facts and rules.  A computation is initiated by running a query over these relations.[256]",
      "definition_html":[
         "<li><a href=\"/wiki/Prolog\" title=\"Prolog\">Prolog</a> \u2013 is a  <a href=\"/wiki/Logic_programming\" title=\"Logic programming\">logic programming</a> language associated with artificial intelligence and <a href=\"/wiki/Computational_linguistics\" title=\"Computational linguistics\">computational linguistics</a>.<sup class=\"reference\" id=\"cite_ref-Clocksin2003_254-0\"><a href=\"#cite_note-Clocksin2003-254\">[253]</a></sup><sup class=\"reference\" id=\"cite_ref-Bratko2012_255-0\"><a href=\"#cite_note-Bratko2012-255\">[254]</a></sup><sup class=\"reference\" id=\"cite_ref-Covington1994_256-0\"><a href=\"#cite_note-Covington1994-256\">[255]</a></sup>  Prolog has its roots in <a href=\"/wiki/First-order_logic\" title=\"First-order logic\">first-order logic</a>, a <a class=\"mw-redirect\" href=\"/wiki/Formal_logic\" title=\"Formal logic\">formal logic</a>, and unlike many other <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming languages</a>, Prolog is intended primarily as a <a href=\"/wiki/Declarative_programming\" title=\"Declarative programming\">declarative</a> programming language: the program logic is expressed in terms of relations, represented as facts and <a href=\"/wiki/Rule_of_inference\" title=\"Rule of inference\">rules</a>.  A computation is initiated by running a <i>query</i> over these relations.<sup class=\"reference\" id=\"cite_ref-257\"><a href=\"#cite_note-257\">[256]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Propositional calculus",
      "definition_text":"Propositional calculus \u2013 is a branch of logic.  It is also called propositional logic, statement logic, sentential calculus, sentential logic, or sometimes zeroth-order logic. It deals with propositions (which can be true or false) and argument flow. Compound propositions are formed by connecting propositions by logical connectives. The propositions without logical connectives are called atomic propositions.  Unlike first-order logic, propositional logic does not deal with non-logical objects, predicates about them, or quantifiers. However, all the machinery of propositional logic is included in first-order logic and higher-order logics. In this sense, propositional logic is the foundation of first-order logic and higher-order logic.",
      "definition_html":[
         "<li><a href=\"/wiki/Propositional_calculus\" title=\"Propositional calculus\">Propositional calculus</a> \u2013 is a branch of <a href=\"/wiki/Logic\" title=\"Logic\">logic</a>.  It is also called propositional logic, statement logic, sentential calculus, sentential logic, or sometimes <b><a href=\"/wiki/Zeroth-order_logic\" title=\"Zeroth-order logic\">zeroth-order logic</a></b>. It deals with <a class=\"mw-redirect\" href=\"/wiki/Propositions\" title=\"Propositions\">propositions</a> (which can be true or false) and argument flow. Compound propositions are formed by connecting propositions by <a href=\"/wiki/Logical_connective\" title=\"Logical connective\">logical connectives</a>. The propositions without logical connectives are called atomic propositions.  Unlike <a href=\"/wiki/First-order_logic\" title=\"First-order logic\">first-order logic</a>, propositional logic does not deal with non-logical objects, predicates about them, or quantifiers. However, all the machinery of propositional logic is included in first-order logic and higher-order logics. In this sense, propositional logic is the foundation of first-order logic and higher-order logic.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Python",
      "definition_text":"Python \u2013 is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.[257]",
      "definition_html":[
         "<li><a href=\"/wiki/Python_(programming_language)\" title=\"Python (programming language)\">Python</a> \u2013 is an <a href=\"/wiki/Interpreted_language\" title=\"Interpreted language\">interpreted</a>, <a href=\"/wiki/High-level_programming_language\" title=\"High-level programming language\">high-level</a>, <a href=\"/wiki/General-purpose_programming_language\" title=\"General-purpose programming language\">general-purpose</a> <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming language</a>. Created by <a href=\"/wiki/Guido_van_Rossum\" title=\"Guido van Rossum\">Guido van Rossum</a> and first released in 1991, Python's design philosophy emphasizes <a class=\"mw-redirect\" href=\"/wiki/Code_readability\" title=\"Code readability\">code readability</a> with its notable use of <a href=\"/wiki/Off-side_rule\" title=\"Off-side rule\">significant whitespace</a>. Its language constructs and <a href=\"/wiki/Object-oriented_programming\" title=\"Object-oriented programming\">object-oriented</a> approach aim to help programmers write clear, logical code for small and large-scale projects.<sup class=\"reference\" id=\"cite_ref-258\"><a href=\"#cite_note-258\">[257]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Qualification problem",
      "definition_text":"Qualification problem \u2013 In philosophy and artificial intelligence (especially, knowledge-based systems), the qualification problem is concerned with the impossibility of listing all the preconditions required for a real-world action to have its intended effect.[258][259] It might be posed as how to deal with the things that prevent me from achieving my intended result. It is strongly connected to, and opposite the ramification side of, the frame problem.[258]",
      "definition_html":[
         "<li><a href=\"/wiki/Qualification_problem\" title=\"Qualification problem\">Qualification problem</a> \u2013 In philosophy and artificial intelligence (especially, <a href=\"/wiki/Knowledge-based_systems\" title=\"Knowledge-based systems\">knowledge-based systems</a>), the qualification problem is concerned with the impossibility of listing <i>all</i> the <a href=\"/wiki/Precondition\" title=\"Precondition\">preconditions</a> required for a real-world action to have its intended effect.<sup class=\"reference\" id=\"cite_ref-reiter_259-0\"><a href=\"#cite_note-reiter-259\">[258]</a></sup><sup class=\"reference\" id=\"cite_ref-260\"><a href=\"#cite_note-260\">[259]</a></sup> It might be posed as <i>how to deal with the things that prevent me from achieving my intended result</i>. It is strongly connected to, and opposite the <a href=\"/wiki/Ramification_problem\" title=\"Ramification problem\">ramification side</a> of, the <a href=\"/wiki/Frame_problem\" title=\"Frame problem\">frame problem</a>.<sup class=\"reference\" id=\"cite_ref-reiter_259-1\"><a href=\"#cite_note-reiter-259\">[258]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Quantifier",
      "definition_text":"Quantifier \u2013 In logic, quantification specifies the quantity of specimens in the domain of discourse that satisfy an open formula. The two most common quantifiers mean \"for all\" and \"there exists\". For example, in arithmetic, quantifiers allow one to say that the natural numbers go on forever, by writing that for all n (where n is a natural number), there is another number (say, the successor of n) which is one bigger than n.",
      "definition_html":[
         "<li><a href=\"/wiki/Quantifier_(logic)\" title=\"Quantifier (logic)\">Quantifier</a> \u2013 In <a href=\"/wiki/Logic\" title=\"Logic\">logic</a>, quantification specifies the quantity of specimens in the <a href=\"/wiki/Domain_of_discourse\" title=\"Domain of discourse\">domain of discourse</a> that satisfy an <a href=\"/wiki/Open_formula\" title=\"Open formula\">open formula</a>. The two most common quantifiers mean \"<a href=\"/wiki/Universal_quantification\" title=\"Universal quantification\">for all</a>\" and \"<a href=\"/wiki/Existential_quantification\" title=\"Existential quantification\">there exists</a>\". For example, in arithmetic, quantifiers allow one to say that the natural numbers go on forever, by writing that <i>for all</i> n (where n is a natural number), there is another number (say, the successor of n) which is one bigger than n.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Quantum computing",
      "definition_text":"Quantum computing \u2013 is the use of quantum-mechanical phenomena such as superposition and entanglement to perform computation. A quantum computer is used to perform such computation, which can be implemented theoretically or physically.[260]:I-5",
      "definition_html":[
         "<li><a href=\"/wiki/Quantum_computing\" title=\"Quantum computing\">Quantum computing</a> \u2013 is the use of <a href=\"/wiki/Quantum_mechanics\" title=\"Quantum mechanics\">quantum-mechanical</a> <a class=\"mw-redirect\" href=\"/wiki/Phenomena\" title=\"Phenomena\">phenomena</a> such as <a href=\"/wiki/Quantum_superposition\" title=\"Quantum superposition\">superposition</a> and <a href=\"/wiki/Quantum_entanglement\" title=\"Quantum entanglement\">entanglement</a> to perform <a href=\"/wiki/Computation\" title=\"Computation\">computation</a>. A quantum computer is used to perform such computation, which can be implemented theoretically or physically.<sup class=\"reference\" id=\"cite_ref-2018Report_261-0\"><a href=\"#cite_note-2018Report-261\">[260]</a></sup><sup class=\"reference\" style=\"white-space:nowrap;\">:<span>I-5</span></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Query language",
      "definition_text":"Query language \u2013 Query languages or data query languages (DQLs) are computer languages used to make queries in databases and information systems.  Broadly, query languages can be classified according to whether they are database query languages or information retrieval query languages. The difference is that a database query language attempts to give factual answers to factual questions, while an information retrieval query language attempts to find documents containing information that is relevant to an area of inquiry.",
      "definition_html":[
         "<li><a href=\"/wiki/Query_language\" title=\"Query language\">Query language</a> \u2013 Query languages or data query languages (DQLs) are <a href=\"/wiki/Computer_language\" title=\"Computer language\">computer languages</a> used to make queries in <a href=\"/wiki/Database\" title=\"Database\">databases</a> and <a href=\"/wiki/Information_system\" title=\"Information system\">information systems</a>.  Broadly, query languages can be classified according to whether they are database query languages or <a href=\"/wiki/Information_retrieval_query_language\" title=\"Information retrieval query language\">information retrieval query languages</a>. The difference is that a database query language attempts to give factual answers to factual questions, while an information retrieval query language attempts to find documents containing information that is relevant to an area of inquiry.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"R programming language",
      "definition_text":"R programming language \u2013 is a programming language and free software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing.[261] The R language is widely used among statisticians and data miners for developing statistical software[262] and data analysis.[263]",
      "definition_html":[
         "<li><a href=\"/wiki/R_(programming_language)\" title=\"R (programming language)\">R programming language</a> \u2013 is a <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming language</a> and <a href=\"/wiki/Free_software\" title=\"Free software\">free software</a> environment for <a class=\"mw-redirect\" href=\"/wiki/Statistical_computing\" title=\"Statistical computing\">statistical computing</a> and graphics supported by the R Foundation for Statistical Computing.<sup class=\"reference\" id=\"cite_ref-262\"><a href=\"#cite_note-262\">[261]</a></sup> The R language is widely used among <a href=\"/wiki/Statistician\" title=\"Statistician\">statisticians</a> and <a href=\"/wiki/Data_mining\" title=\"Data mining\">data miners</a> for developing <a class=\"mw-redirect\" href=\"/wiki/Statistical_software\" title=\"Statistical software\">statistical software</a><sup class=\"reference\" id=\"cite_ref-263\"><a href=\"#cite_note-263\">[262]</a></sup> and <a href=\"/wiki/Data_analysis\" title=\"Data analysis\">data analysis</a>.<sup class=\"reference\" id=\"cite_ref-264\"><a href=\"#cite_note-264\">[263]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Radial basis function network",
      "definition_text":"Radial basis function network \u2013 In the field of mathematical modeling, a radial basis function network is an artificial neural network that uses radial basis functions as activation functions. The output of the network is a linear combination of radial basis functions of the inputs and neuron parameters. Radial basis function networks have many uses, including function approximation, time series prediction, classification, and system control. They were first formulated in a 1988 paper by Broomhead and Lowe, both researchers at the Royal Signals and Radar Establishment.[264][265][266]",
      "definition_html":[
         "<li><a href=\"/wiki/Radial_basis_function_network\" title=\"Radial basis function network\">Radial basis function network</a> \u2013 In the field of <a class=\"mw-redirect\" href=\"/wiki/Mathematical_modeling\" title=\"Mathematical modeling\">mathematical modeling</a>, a radial basis function network is an <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> that uses <a href=\"/wiki/Radial_basis_function\" title=\"Radial basis function\">radial basis functions</a> as <a href=\"/wiki/Activation_function\" title=\"Activation function\">activation functions</a>. The output of the network is a <a href=\"/wiki/Linear_combination\" title=\"Linear combination\">linear combination</a> of radial basis functions of the inputs and neuron parameters. Radial basis function networks have many uses, including <a href=\"/wiki/Function_approximation\" title=\"Function approximation\">function approximation</a>, <a class=\"mw-redirect\" href=\"/wiki/Time_series_prediction\" title=\"Time series prediction\">time series prediction</a>, <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classification</a>, and system <a href=\"/wiki/Control_theory\" title=\"Control theory\">control</a>. They were first formulated in a 1988 paper by Broomhead and Lowe, both researchers at the <a href=\"/wiki/Royal_Signals_and_Radar_Establishment\" title=\"Royal Signals and Radar Establishment\">Royal Signals and Radar Establishment</a>.<sup class=\"reference\" id=\"cite_ref-265\"><a href=\"#cite_note-265\">[264]</a></sup><sup class=\"reference\" id=\"cite_ref-266\"><a href=\"#cite_note-266\">[265]</a></sup><sup class=\"reference\" id=\"cite_ref-267\"><a href=\"#cite_note-267\">[266]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Random forest",
      "definition_text":"Random forest \u2013 Random forests, or random decision forests, are an ensemble learning method for classification, regression and other tasks that operates by constructing a multitude of decision trees at training time and outputting the class that is the mode of the classes (classification) or mean prediction (regression) of the individual trees.[267][268] Random decision forests correct for decision trees' habit of overfitting to their training set.[269]",
      "definition_html":[
         "<li><a href=\"/wiki/Random_forest\" title=\"Random forest\">Random forest</a> \u2013 Random forests, or random decision forests, are an <a href=\"/wiki/Ensemble_learning\" title=\"Ensemble learning\">ensemble learning</a> method for <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classification</a>, <a href=\"/wiki/Regression_analysis\" title=\"Regression analysis\">regression</a> and other tasks that operates by constructing a multitude of <a href=\"/wiki/Decision_tree_learning\" title=\"Decision tree learning\">decision trees</a> at training time and outputting the class that is the <a href=\"/wiki/Mode_(statistics)\" title=\"Mode (statistics)\">mode</a> of the classes (classification) or mean prediction (regression) of the individual trees.<sup class=\"reference\" id=\"cite_ref-268\"><a href=\"#cite_note-268\">[267]</a></sup><sup class=\"reference\" id=\"cite_ref-269\"><a href=\"#cite_note-269\">[268]</a></sup> Random decision forests correct for decision trees' habit of <a href=\"/wiki/Overfitting\" title=\"Overfitting\">overfitting</a> to their <a class=\"mw-redirect\" href=\"/wiki/Test_set\" title=\"Test set\">training set</a>.<sup class=\"reference\" id=\"cite_ref-270\"><a href=\"#cite_note-270\">[269]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Reasoning system",
      "definition_text":"Reasoning system \u2013 In information technology a reasoning system is a software system that generates conclusions from available knowledge using logical techniques such as deduction and induction. Reasoning systems play an important role in the implementation of artificial intelligence and knowledge-based systems.",
      "definition_html":[
         "<li><a href=\"/wiki/Reasoning_system\" title=\"Reasoning system\">Reasoning system</a> \u2013 In <a href=\"/wiki/Information_technology\" title=\"Information technology\">information technology</a> a reasoning system is a <a href=\"/wiki/Software_system\" title=\"Software system\">software system</a> that generates conclusions from available <a href=\"/wiki/Knowledge\" title=\"Knowledge\">knowledge</a> using <a href=\"/wiki/Logic\" title=\"Logic\">logical</a> techniques such as <a href=\"/wiki/Deductive_reasoning\" title=\"Deductive reasoning\">deduction</a> and <a href=\"/wiki/Inductive_reasoning\" title=\"Inductive reasoning\">induction</a>. Reasoning systems play an important role in the implementation of artificial intelligence and <a href=\"/wiki/Knowledge-based_systems\" title=\"Knowledge-based systems\">knowledge-based systems</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Recurrent neural network",
      "definition_text":"Recurrent neural network \u2013 (RNN), is a class of artificial neural networks where connections between nodes form a directed graph along a temporal sequence. This allows it to exhibit temporal dynamic behavior. Unlike feedforward neural networks, RNNs can use their internal state (memory) to process sequences of inputs. This makes them applicable to tasks such as unsegmented, connected handwriting recognition[270] or speech recognition.[271][272]",
      "definition_html":[
         "<li><a href=\"/wiki/Recurrent_neural_network\" title=\"Recurrent neural network\">Recurrent neural network</a> \u2013 (RNN), is a class of <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural networks</a> where connections between nodes form a <a href=\"/wiki/Directed_graph\" title=\"Directed graph\">directed graph</a> along a temporal sequence. This allows it to exhibit temporal dynamic behavior. Unlike <a class=\"mw-redirect\" href=\"/wiki/Feedforward_neural_networks\" title=\"Feedforward neural networks\">feedforward neural networks</a>, RNNs can use their internal state (memory) to process sequences of inputs. This makes them applicable to tasks such as unsegmented, connected <a href=\"/wiki/Handwriting_recognition\" title=\"Handwriting recognition\">handwriting recognition</a><sup class=\"reference\" id=\"cite_ref-271\"><a href=\"#cite_note-271\">[270]</a></sup> or <a href=\"/wiki/Speech_recognition\" title=\"Speech recognition\">speech recognition</a>.<sup class=\"reference\" id=\"cite_ref-sak2014_272-0\"><a href=\"#cite_note-sak2014-272\">[271]</a></sup><sup class=\"reference\" id=\"cite_ref-liwu2015_273-0\"><a href=\"#cite_note-liwu2015-273\">[272]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Region connection calculus",
      "definition_text":"Region connection calculus \u2013",
      "definition_html":[
         "<li><a href=\"/wiki/Region_connection_calculus\" title=\"Region connection calculus\">Region connection calculus</a> \u2013</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Reinforcement learning",
      "definition_text":"Reinforcement learning \u2013 (RL), is an area of machine learning concerned with how software agents ought to take actions in an environment so as to maximize some notion of cumulative reward. Reinforcement learning is one of three basic machine learning paradigms, alongside supervised learning and unsupervised learning.  It differs from supervised learning in that labelled input/output pairs need not be presented, and sub-optimal actions need not be explicitly corrected. Instead the focus is finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge).[273]",
      "definition_html":[
         "<li><a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">Reinforcement learning</a> \u2013 (RL), is an area of <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> concerned with how <a href=\"/wiki/Software_agent\" title=\"Software agent\">software agents</a> ought to take <a href=\"/wiki/Action_selection\" title=\"Action selection\">actions</a> in an environment so as to maximize some notion of cumulative reward. Reinforcement learning is one of three basic machine learning paradigms, alongside <a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">supervised learning</a> and <a href=\"/wiki/Unsupervised_learning\" title=\"Unsupervised learning\">unsupervised learning</a>.  It differs from supervised learning in that labelled input/output pairs need not be presented, and sub-optimal actions need not be explicitly corrected. Instead the focus is finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge).<sup class=\"reference\" id=\"cite_ref-kaelbling_274-0\"><a href=\"#cite_note-kaelbling-274\">[273]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Reservoir computing",
      "definition_text":"Reservoir computing \u2013 is a framework for computation that may be viewed as an extension of neural networks.[274] Typically an input signal is fed into a fixed (random) dynamical system called a reservoir and the dynamics of the reservoir map the input to a higher dimension. Then a simple readout mechanism is trained to read the state of the reservoir and map it to the desired output. The main benefit is that training is performed only at the readout stage and the reservoir is fixed. Liquid-state machines[275] and echo state networks[276] are two major types of reservoir computing.[277]",
      "definition_html":[
         "<li><a href=\"/wiki/Reservoir_computing\" title=\"Reservoir computing\">Reservoir computing</a> \u2013 is a framework for computation that may be viewed as an extension of <a href=\"/wiki/Neural_network\" title=\"Neural network\">neural networks</a>.<sup class=\"reference\" id=\"cite_ref-275\"><a href=\"#cite_note-275\">[274]</a></sup> Typically an input signal is fed into a fixed (random) <a href=\"/wiki/Dynamical_system\" title=\"Dynamical system\">dynamical system</a> called a <i>reservoir</i> and the dynamics of the reservoir map the input to a higher dimension. Then a simple <i>readout</i> mechanism is trained to read the state of the reservoir and map it to the desired output. The main benefit is that training is performed only at the readout stage and the reservoir is fixed. <a class=\"mw-redirect\" href=\"/wiki/Liquid-state_machine\" title=\"Liquid-state machine\">Liquid-state machines</a><sup class=\"reference\" id=\"cite_ref-276\"><a href=\"#cite_note-276\">[275]</a></sup> and <a href=\"/wiki/Echo_state_network\" title=\"Echo state network\">echo state networks</a><sup class=\"reference\" id=\"cite_ref-277\"><a href=\"#cite_note-277\">[276]</a></sup> are two major types of reservoir computing.<sup class=\"reference\" id=\"cite_ref-278\"><a href=\"#cite_note-278\">[277]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Resource Description Framework",
      "definition_text":"Resource Description Framework \u2013 (RDF), is a family of World Wide Web Consortium (W3C) specifications[278] originally designed as a metadata data model. It has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources, using a variety of syntax notations and data serialization formats. It is also used in knowledge management applications.",
      "definition_html":[
         "<li><a href=\"/wiki/Resource_Description_Framework\" title=\"Resource Description Framework\">Resource Description Framework</a> \u2013 (RDF), is a family of <a href=\"/wiki/World_Wide_Web_Consortium\" title=\"World Wide Web Consortium\">World Wide Web Consortium</a> (W3C) <a class=\"mw-redirect\" href=\"/wiki/Specification\" title=\"Specification\">specifications</a><sup class=\"reference\" id=\"cite_ref-279\"><a href=\"#cite_note-279\">[278]</a></sup> originally designed as a <a href=\"/wiki/Metadata\" title=\"Metadata\">metadata</a> <a href=\"/wiki/Data_model\" title=\"Data model\">data model</a>. It has come to be used as a general method for conceptual description or modeling of information that is implemented in <a href=\"/wiki/Web_resource\" title=\"Web resource\">web resources</a>, using a variety of syntax notations and <a class=\"mw-redirect\" href=\"/wiki/Data_serialization\" title=\"Data serialization\">data serialization</a> formats. It is also used in <a href=\"/wiki/Knowledge_management\" title=\"Knowledge management\">knowledge management</a> applications.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Restricted Boltzmann machine",
      "definition_text":"Restricted Boltzmann machine \u2013 (RBM), is a generative stochastic artificial neural network that can learn a probability distribution over its set of inputs.",
      "definition_html":[
         "<li><a href=\"/wiki/Restricted_Boltzmann_machine\" title=\"Restricted Boltzmann machine\">Restricted Boltzmann machine</a> \u2013 (RBM), is a <a href=\"/wiki/Generative_model\" title=\"Generative model\">generative</a> <a href=\"/wiki/Stochastic_neural_network\" title=\"Stochastic neural network\">stochastic</a> <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a> that can learn a <a href=\"/wiki/Probability_distribution\" title=\"Probability distribution\">probability distribution</a> over its set of inputs.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Rete algorithm",
      "definition_text":"Rete algorithm \u2013 is a pattern matching algorithm for implementing rule-based systems. The algorithm was developed to efficiently apply many rules or patterns to many objects, or facts, in a knowledge base. It is used to determine which of the system's rules should fire based on its data store, its facts.",
      "definition_html":[
         "<li><a href=\"/wiki/Rete_algorithm\" title=\"Rete algorithm\">Rete algorithm</a> \u2013 is a <a href=\"/wiki/Pattern_matching\" title=\"Pattern matching\">pattern matching</a> <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a> for implementing <a href=\"/wiki/Rule-based_system\" title=\"Rule-based system\">rule-based systems</a>. The algorithm was developed to efficiently apply many <a href=\"/wiki/Rule_of_inference\" title=\"Rule of inference\">rules</a> or patterns to many objects, or <a href=\"/wiki/Fact\" title=\"Fact\">facts</a>, in a <a href=\"/wiki/Knowledge_base\" title=\"Knowledge base\">knowledge base</a>. It is used to determine which of the system's rules should fire based on its data store, its facts.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Robotics",
      "definition_text":"Robotics \u2013 is an interdisciplinary branch of engineering and science that includes mechanical engineering, electronic engineering, information engineering, computer science, and others. Robotics deals with the design, construction, operation, and use of robots, as well as computer systems for their control, sensory feedback, and information processing.",
      "definition_html":[
         "<li><a href=\"/wiki/Robotics\" title=\"Robotics\">Robotics</a> \u2013 is an <a href=\"/wiki/Interdisciplinarity\" title=\"Interdisciplinarity\">interdisciplinary</a> branch of <a href=\"/wiki/List_of_engineering_branches\" title=\"List of engineering branches\">engineering</a> and <a class=\"mw-redirect\" href=\"/wiki/Branch_of_science\" title=\"Branch of science\">science</a> that includes <a href=\"/wiki/Mechanical_engineering\" title=\"Mechanical engineering\">mechanical engineering</a>, <a href=\"/wiki/Electronic_engineering\" title=\"Electronic engineering\">electronic engineering</a>, <a href=\"/wiki/Information_engineering_(field)\" title=\"Information engineering (field)\">information engineering</a>, <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, and others. Robotics deals with the design, construction, operation, and use of <a href=\"/wiki/Robot\" title=\"Robot\">robots</a>, as well as <a class=\"mw-redirect\" href=\"/wiki/Computer_system\" title=\"Computer system\">computer systems</a> for their control, <a class=\"mw-redirect\" href=\"/wiki/Sensory_feedback\" title=\"Sensory feedback\">sensory feedback</a>, and <a href=\"/wiki/Information_processing\" title=\"Information processing\">information processing</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Rule based system",
      "definition_text":"Rule-based system \u2013 In computer science, a rule-based system is used to store and manipulate knowledge to interpret information in a useful way. It is often used in artificial intelligence applications and research.  Normally, the term rule-based system is applied to systems involving human-crafted or curated rule sets.  Rule-based systems constructed using automatic rule inference, such as rule-based machine learning, are normally excluded from this system type.",
      "definition_html":[
         "<li><a href=\"/wiki/Rule-based_system\" title=\"Rule-based system\">Rule-based system</a> \u2013 In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, a rule-based system is used to store and manipulate knowledge to interpret information in a useful way. It is often used in artificial intelligence applications and research.  Normally, the term <i>rule-based system</i> is applied to systems involving human-crafted or curated rule sets.  Rule-based systems constructed using automatic rule inference, such as <a href=\"/wiki/Rule-based_machine_learning\" title=\"Rule-based machine learning\">rule-based machine learning</a>, are normally excluded from this system type.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Satisfiability",
      "definition_text":"Satisfiability \u2013 In mathematical logic, satisfiability and validity are elementary concepts of semantics. A formula is satisfiable if it is possible to find an interpretation (model) that makes the formula true.[279]  A formula is valid if all interpretations make the formula true. The opposites of these concepts are unsatisfiability and invalidity, that is, a formula is unsatisfiable if none of the interpretations make the formula true, and invalid if some such interpretation makes the formula false. These four concepts are related to each other in a manner exactly analogous to Aristotle's square of opposition.",
      "definition_html":[
         "<li><a href=\"/wiki/Satisfiability\" title=\"Satisfiability\">Satisfiability</a> \u2013 In <a href=\"/wiki/Mathematical_logic\" title=\"Mathematical logic\">mathematical logic</a>, satisfiability and <a href=\"/wiki/Validity_(logic)\" title=\"Validity (logic)\">validity</a> are elementary concepts of <a href=\"/wiki/Semantics\" title=\"Semantics\">semantics</a>. A <a class=\"mw-redirect\" href=\"/wiki/Formula_(mathematical_logic)\" title=\"Formula (mathematical logic)\">formula</a> is <i>satisfiable</i> if it is possible to find an <a href=\"/wiki/Interpretation_(logic)\" title=\"Interpretation (logic)\">interpretation</a> (<a href=\"/wiki/Model_theory\" title=\"Model theory\">model</a>) that makes the formula true.<sup class=\"reference\" id=\"cite_ref-280\"><a href=\"#cite_note-280\">[279]</a></sup>  A formula is <i>valid</i> if all interpretations make the formula true. The opposites of these concepts are unsatisfiability and invalidity, that is, a formula is <i>unsatisfiable</i> if none of the interpretations make the formula true, and <i>invalid</i> if some such interpretation makes the formula false. These four concepts are related to each other in a manner exactly analogous to <a href=\"/wiki/Aristotle\" title=\"Aristotle\">Aristotle</a>'s <a href=\"/wiki/Square_of_opposition\" title=\"Square of opposition\">square of opposition</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Search algorithm",
      "definition_text":"Search algorithm \u2013 is any algorithm which solves the search problem, namely, to retrieve information stored within some data structure, or calculated in the search space of a problem domain, either with discrete or continuous values.",
      "definition_html":[
         "<li><a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">Search algorithm</a> \u2013 is any <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a> which solves the <a href=\"/wiki/Search_problem\" title=\"Search problem\">search problem</a>, namely, to retrieve information stored within some data structure, or calculated in the <a href=\"/wiki/Feasible_region\" title=\"Feasible region\">search space</a> of a <a href=\"/wiki/Problem_domain\" title=\"Problem domain\">problem domain</a>, either with <a href=\"/wiki/Continuous_or_discrete_variable\" title=\"Continuous or discrete variable\">discrete or continuous values</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Selection",
      "definition_text":"Selection \u2013 is the stage of a genetic algorithm in which individual genomes are chosen from a population for later breeding (using the crossover operator).",
      "definition_html":[
         "<li><a href=\"/wiki/Selection_(genetic_algorithm)\" title=\"Selection (genetic algorithm)\">Selection</a> \u2013 is the stage of a <a href=\"/wiki/Genetic_algorithm\" title=\"Genetic algorithm\">genetic algorithm</a> in which individual genomes are chosen from a population for later breeding (using the <a href=\"/wiki/Crossover_(genetic_algorithm)\" title=\"Crossover (genetic algorithm)\">crossover operator</a>).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Self management",
      "definition_text":"Self-management \u2013 is the process by which computer systems shall manage their own operation without human intervention.",
      "definition_html":[
         "<li><a href=\"/wiki/Self-management_(computer_science)\" title=\"Self-management (computer science)\">Self-management</a> \u2013 is the process by which <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> systems shall manage their own operation without human intervention.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Semantic network",
      "definition_text":"Semantic network \u2013 or frame network, is a knowledge base that represents semantic relations between concepts in a network. This is often used as a form of knowledge representation. It is a directed or undirected graph consisting of vertices, which represent concepts, and edges, which represent semantic relations between concepts,[280] mapping or connecting semantic fields.",
      "definition_html":[
         "<li><a href=\"/wiki/Semantic_network\" title=\"Semantic network\">Semantic network</a> \u2013 or frame network, is a <a href=\"/wiki/Knowledge_base\" title=\"Knowledge base\">knowledge base</a> that represents <a href=\"/wiki/Semantics\" title=\"Semantics\">semantic</a> relations between <a href=\"/wiki/Concept\" title=\"Concept\">concepts</a> in a network. This is often used as a form of <a href=\"/wiki/Knowledge_representation_and_reasoning\" title=\"Knowledge representation and reasoning\">knowledge representation</a>. It is a <a href=\"/wiki/Directed_graph\" title=\"Directed graph\">directed</a> or <a class=\"mw-redirect\" href=\"/wiki/Undirected_graph\" title=\"Undirected graph\">undirected graph</a> consisting of <a href=\"/wiki/Vertex_(graph_theory)\" title=\"Vertex (graph theory)\">vertices</a>, which represent <a href=\"/wiki/Concept\" title=\"Concept\">concepts</a>, and <a href=\"/wiki/Graph_theory\" title=\"Graph theory\">edges</a>, which represent <a class=\"mw-redirect\" href=\"/wiki/Semantic_relationship\" title=\"Semantic relationship\">semantic relations</a> between concepts,<sup class=\"reference\" id=\"cite_ref-Sowa_281-0\"><a href=\"#cite_note-Sowa-281\">[280]</a></sup> mapping or connecting <a href=\"/wiki/Semantic_field\" title=\"Semantic field\">semantic fields</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Semantic reasoner",
      "definition_text":"Semantic reasoner \u2013A semantic reasoner, reasoning engine, rules engine, or simply a reasoner, is a piece of software able to infer logical consequences from a set of asserted facts or axioms. The notion of a semantic reasoner generalizes that of an inference engine, by providing a richer set of mechanisms to work with. The inference rules are commonly specified by means of an ontology language, and often a description logic language.  Many reasoners use first-order predicate logic to perform reasoning; inference commonly proceeds by forward chaining and backward chaining.",
      "definition_html":[
         "<li><a href=\"/wiki/Semantic_reasoner\" title=\"Semantic reasoner\">Semantic reasoner</a> \u2013A semantic reasoner, reasoning engine, rules engine, or simply a reasoner, is a piece of software able to infer <a href=\"/wiki/Logical_consequence\" title=\"Logical consequence\">logical consequences</a> from a set of asserted facts or <a class=\"mw-redirect\" href=\"/wiki/Axioms\" title=\"Axioms\">axioms</a>. The notion of a semantic reasoner generalizes that of an <a href=\"/wiki/Inference_engine\" title=\"Inference engine\">inference engine</a>, by providing a richer set of mechanisms to work with. The <a class=\"mw-redirect\" href=\"/wiki/Inference_rules\" title=\"Inference rules\">inference rules</a> are commonly specified by means of an <a href=\"/wiki/Ontology_language\" title=\"Ontology language\">ontology language</a>, and often a <a href=\"/wiki/Description_logic\" title=\"Description logic\">description logic</a> language.  Many reasoners use <a class=\"mw-redirect\" href=\"/wiki/First-order_predicate_logic\" title=\"First-order predicate logic\">first-order predicate logic</a> to perform reasoning; <a href=\"/wiki/Inference\" title=\"Inference\">inference</a> commonly proceeds by <a href=\"/wiki/Forward_chaining\" title=\"Forward chaining\">forward chaining</a> and <a href=\"/wiki/Backward_chaining\" title=\"Backward chaining\">backward chaining</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Semantic query",
      "definition_text":"Semantic query \u2013 allows for queries and analytics of associative and contextual nature. Semantic queries enable the retrieval of both explicitly and implicitly derived information based on syntactic, semantic and structural information contained in data. They are designed to deliver precise results (possibly the distinctive selection of one single piece of information) or to answer more fuzzy and wide open questions through pattern matching and digital reasoning.",
      "definition_html":[
         "<li><a href=\"/wiki/Semantic_query\" title=\"Semantic query\">Semantic query</a> \u2013 allows for queries and analytics of associative and <a href=\"/wiki/Contextualization_(computer_science)\" title=\"Contextualization (computer science)\">contextual</a> nature. Semantic queries enable the retrieval of both explicitly and implicitly derived information based on syntactic, semantic and structural information contained in data. They are designed to deliver precise results (possibly the distinctive selection of one single piece of information) or to answer more fuzzy and wide open questions through <a href=\"/wiki/Pattern_matching\" title=\"Pattern matching\">pattern matching</a> and <a href=\"/wiki/Reasoning_system\" title=\"Reasoning system\">digital reasoning</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Semantics",
      "definition_text":"Semantics \u2013 In programming language theory, semantics is the field concerned with the rigorous mathematical study of the meaning of programming languages. It does so by evaluating the meaning of syntactically valid strings defined by a specific programming language, showing the computation involved. In such a case that the evaluation would be of syntactically invalid strings, the result would be non-computation. Semantics describes the processes a computer follows when executing a program in that specific language. This can be shown by describing the relationship between the input and output of a program, or an explanation of how the program will be executed on a certain platform, hence creating a model of computation.",
      "definition_html":[
         "<li><a href=\"/wiki/Semantics_(computer_science)\" title=\"Semantics (computer science)\">Semantics</a> \u2013 In <a href=\"/wiki/Programming_language_theory\" title=\"Programming language theory\">programming language theory</a>, semantics is the field concerned with the rigorous mathematical study of the meaning of <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming languages</a>. It does so by evaluating the meaning of <a class=\"mw-redirect\" href=\"/wiki/Programming_language_syntax\" title=\"Programming language syntax\">syntactically</a> valid <a href=\"/wiki/String_(computer_science)\" title=\"String (computer science)\">strings</a> defined by a specific programming language, showing the computation involved. In such a case that the evaluation would be of syntactically invalid strings, the result would be non-computation. Semantics describes the processes a computer follows when executing a program in that specific language. This can be shown by describing the relationship between the input and output of a program, or an explanation of how the program will be executed on a certain <a class=\"mw-redirect\" href=\"/wiki/Computer_platform\" title=\"Computer platform\">platform</a>, hence creating a <a href=\"/wiki/Model_of_computation\" title=\"Model of computation\">model of computation</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Sensor fusion",
      "definition_text":"Sensor fusion \u2013 is combining of sensory data or data derived from disparate sources such that the resulting information has less uncertainty than would be possible when these sources were used individually.",
      "definition_html":[
         "<li><a href=\"/wiki/Sensor_fusion\" title=\"Sensor fusion\">Sensor fusion</a> \u2013 is combining of <a href=\"/wiki/Sensor\" title=\"Sensor\">sensory</a> data or data derived from disparate sources such that the resulting <a href=\"/wiki/Information\" title=\"Information\">information</a> has less uncertainty than would be possible when these sources were used individually.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Separation logic",
      "definition_text":"Separation logic \u2013  is an extension of Hoare logic, a way of reasoning about programs. The assertion language of separation logic is a special case of the logic of bunched implications (BI).[281]",
      "definition_html":[
         "<li><a href=\"/wiki/Separation_logic\" title=\"Separation logic\">Separation logic</a> \u2013  is an extension of <a href=\"/wiki/Hoare_logic\" title=\"Hoare logic\">Hoare logic</a>, a way of reasoning about programs. The assertion language of separation logic is a special case of the <a class=\"mw-redirect\" href=\"/wiki/Logic_of_bunched_implications\" title=\"Logic of bunched implications\">logic of bunched implications</a> (BI).<sup class=\"reference\" id=\"cite_ref-bi_282-0\"><a href=\"#cite_note-bi-282\">[281]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Similarity learning",
      "definition_text":"Similarity learning \u2013 is an area of supervised machine learning in artificial intelligence. It is closely related to regression and classification, but the goal is to learn from a similarity function that measures how similar or related two objects are. It has applications in ranking, in recommendation systems, visual identity tracking, face verification, and speaker verification.",
      "definition_html":[
         "<li><a href=\"/wiki/Similarity_learning\" title=\"Similarity learning\">Similarity learning</a> \u2013 is an area of supervised <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> in artificial intelligence. It is closely related to <a class=\"mw-redirect\" href=\"/wiki/Regression_(machine_learning)\" title=\"Regression (machine learning)\">regression</a> and <a class=\"mw-redirect\" href=\"/wiki/Classification_in_machine_learning\" title=\"Classification in machine learning\">classification</a>, but the goal is to learn from a similarity function that measures how similar or related two objects are. It has applications in <a href=\"/wiki/Ranking\" title=\"Ranking\">ranking</a>, in <a class=\"mw-redirect\" href=\"/wiki/Recommendation_systems\" title=\"Recommendation systems\">recommendation systems</a>, visual identity tracking, face verification, and speaker verification.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Simulated annealing",
      "definition_text":"Simulated annealing \u2013 (SA), is a probabilistic technique for approximating the global optimum of a given function. Specifically, it is a metaheuristic to approximate global optimization in a large search space for an optimization problem.",
      "definition_html":[
         "<li><a href=\"/wiki/Simulated_annealing\" title=\"Simulated annealing\">Simulated annealing</a> \u2013 (SA), is a <a class=\"mw-redirect\" href=\"/wiki/Probabilistic_algorithm\" title=\"Probabilistic algorithm\">probabilistic technique</a> for approximating the <a class=\"mw-redirect\" href=\"/wiki/Global_optimum\" title=\"Global optimum\">global optimum</a> of a given <a href=\"/wiki/Function_(mathematics)\" title=\"Function (mathematics)\">function</a>. Specifically, it is a <a href=\"/wiki/Metaheuristic\" title=\"Metaheuristic\">metaheuristic</a> to approximate <a href=\"/wiki/Global_optimization\" title=\"Global optimization\">global optimization</a> in a large <a class=\"mw-redirect\" href=\"/wiki/Solution_space\" title=\"Solution space\">search space</a> for an <a href=\"/wiki/Optimization_problem\" title=\"Optimization problem\">optimization problem</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Situated approach",
      "definition_text":"Situated approach \u2013 In artificial intelligence research, the situated approach builds agents that are designed to behave effectively successfully in their environment. This requires designing AI \"from the bottom-up\" by focussing on the basic perceptual and motor skills required to survive. The situated approach gives a much lower priority to abstract reasoning or problem-solving skills.",
      "definition_html":[
         "<li><a href=\"/wiki/Artificial_intelligence,_situated_approach\" title=\"Artificial intelligence, situated approach\">Situated approach</a> \u2013 In artificial intelligence research, the situated approach builds agents that are designed to behave effectively successfully in their environment. This requires designing AI \"from the bottom-up\" by focussing on the basic perceptual and motor skills required to survive. The situated approach gives a much lower priority to abstract reasoning or problem-solving skills.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Situation calculus",
      "definition_text":"Situation calculus \u2013 is a logic formalism designed for representing and reasoning about dynamical domains.",
      "definition_html":[
         "<li><a href=\"/wiki/Situation_calculus\" title=\"Situation calculus\">Situation calculus</a> \u2013 is a <a href=\"/wiki/Logic\" title=\"Logic\">logic</a> formalism designed for representing and reasoning about dynamical domains.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"SLD resolution",
      "definition_text":"SLD resolution \u2013 (Selective Linear Definite clause resolution), is the basic inference rule used in logic programming. It is a refinement of resolution, which is both sound and refutation complete for Horn clauses.",
      "definition_html":[
         "<li><a href=\"/wiki/SLD_resolution\" title=\"SLD resolution\">SLD resolution</a> \u2013 (<i>Selective Linear Definite</i> clause resolution), is the basic <a href=\"/wiki/Rule_of_inference\" title=\"Rule of inference\">inference rule</a> used in <a href=\"/wiki/Logic_programming\" title=\"Logic programming\">logic programming</a>. It is a refinement of <a href=\"/wiki/Resolution_(logic)\" title=\"Resolution (logic)\">resolution</a>, which is both <a href=\"/wiki/Soundness\" title=\"Soundness\">sound</a> and refutation <a href=\"/wiki/Completeness_(logic)\" title=\"Completeness (logic)\">complete</a> for <a href=\"/wiki/Horn_clause\" title=\"Horn clause\">Horn clauses</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Software",
      "definition_text":"Software \u2013 Computer software, or simply software, is a collection of data or computer instructions that tell the computer how to work. This is in contrast to physical hardware, from which the system is built and actually performs the work. In computer science and software engineering, computer software is all information processed by computer systems, programs and data. Computer software includes computer programs, libraries and related non-executable data, such as online documentation or digital media.",
      "definition_html":[
         "<li><a href=\"/wiki/Software\" title=\"Software\">Software</a> \u2013 Computer software, or simply software, is a collection of <a href=\"/wiki/Data_(computing)\" title=\"Data (computing)\">data</a> or <a href=\"/wiki/Computer\" title=\"Computer\">computer</a> instructions that tell the computer how to work. This is in contrast to <a href=\"/wiki/Computer_hardware\" title=\"Computer hardware\">physical hardware</a>, from which the system is built and actually performs the work. In <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> and <a href=\"/wiki/Software_engineering\" title=\"Software engineering\">software engineering</a>, computer software is all <a href=\"/wiki/Information\" title=\"Information\">information</a> processed by <a class=\"mw-redirect\" href=\"/wiki/Computer_system\" title=\"Computer system\">computer systems</a>, <a href=\"/wiki/Computer_program\" title=\"Computer program\">programs</a> and <a href=\"/wiki/Data\" title=\"Data\">data</a>. Computer software includes <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer programs</a>, <a href=\"/wiki/Library_(computing)\" title=\"Library (computing)\">libraries</a> and related non-executable <a href=\"/wiki/Data_(computing)\" title=\"Data (computing)\">data</a>, such as <a href=\"/wiki/Software_documentation\" title=\"Software documentation\">online documentation</a> or <a href=\"/wiki/Digital_media\" title=\"Digital media\">digital media</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Software engineering",
      "definition_text":"Software engineering \u2013 is the application of engineering to the development of software in a systematic method.[282][283][284]",
      "definition_html":[
         "<li><a href=\"/wiki/Software_engineering\" title=\"Software engineering\">Software engineering</a> \u2013 is the application of <a href=\"/wiki/Engineering\" title=\"Engineering\">engineering</a> to the <a href=\"/wiki/Software_development\" title=\"Software development\">development</a> of <a href=\"/wiki/Software\" title=\"Software\">software</a> in a systematic method.<sup class=\"reference\" id=\"cite_ref-BoDu04_283-0\"><a href=\"#cite_note-BoDu04-283\">[282]</a></sup><sup class=\"reference\" id=\"cite_ref-284\"><a href=\"#cite_note-284\">[283]</a></sup><sup class=\"reference\" id=\"cite_ref-285\"><a href=\"#cite_note-285\">[284]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Spatial temporal reasoning",
      "definition_text":"Spatial-temporal reasoning \u2013 is an area of artificial intelligence which draws from the fields of computer science, cognitive science, and cognitive psychology. The theoretic goal\u2014on the cognitive side\u2014involves representing and reasoning spatial-temporal knowledge in mind. The applied goal\u2014on the computing side\u2014involves developing high-level control systems of automata for navigating and understanding time and space.",
      "definition_html":[
         "<li><a class=\"mw-redirect\" href=\"/wiki/Spatial-temporal_reasoning\" title=\"Spatial-temporal reasoning\">Spatial-temporal reasoning</a> \u2013 is an area of artificial intelligence which draws from the fields of <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, <a href=\"/wiki/Cognitive_science\" title=\"Cognitive science\">cognitive science</a>, and <a href=\"/wiki/Cognitive_psychology\" title=\"Cognitive psychology\">cognitive psychology</a>. The theoretic goal\u2014on the cognitive side\u2014involves representing and reasoning spatial-temporal knowledge in mind. The applied goal\u2014on the computing side\u2014involves developing high-level control systems of automata for <a class=\"mw-redirect\" href=\"/wiki/Robotic_navigation\" title=\"Robotic navigation\">navigating</a> and understanding time and space.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"SPARQL",
      "definition_text":"SPARQL \u2013 is an RDF query language\u2014that is, a semantic query language for databases\u2014able to retrieve and manipulate data stored in Resource Description Framework (RDF) format.[285][286]",
      "definition_html":[
         "<li><a href=\"/wiki/SPARQL\" title=\"SPARQL\">SPARQL</a> \u2013 is an <a href=\"/wiki/RDF_query_language\" title=\"RDF query language\">RDF query language</a>\u2014that is, a <a class=\"mw-redirect\" href=\"/wiki/Semantic_Query\" title=\"Semantic Query\">semantic</a> <a href=\"/wiki/Query_language\" title=\"Query language\">query language</a> for <a href=\"/wiki/Database\" title=\"Database\">databases</a>\u2014able to retrieve and manipulate data stored in <a href=\"/wiki/Resource_Description_Framework\" title=\"Resource Description Framework\">Resource Description Framework (RDF)</a> format.<sup class=\"reference\" id=\"cite_ref-286\"><a href=\"#cite_note-286\">[285]</a></sup><sup class=\"reference\" id=\"cite_ref-287\"><a href=\"#cite_note-287\">[286]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Speech recognition",
      "definition_text":"Speech recognition \u2013 is an interdisciplinary subfield of computational linguistics that develops methodologies and technologies that enables the recognition and translation of spoken language into text by computers. It is also known as automatic speech recognition (ASR), computer speech recognition or speech to text (STT). It incorporates knowledge and research in the linguistics, computer science, and electrical engineering fields.",
      "definition_html":[
         "<li><a href=\"/wiki/Speech_recognition\" title=\"Speech recognition\">Speech recognition</a> \u2013 is an <a class=\"mw-redirect\" href=\"/wiki/Interdisciplinary\" title=\"Interdisciplinary\">interdisciplinary</a> subfield of <a href=\"/wiki/Computational_linguistics\" title=\"Computational linguistics\">computational linguistics</a> that develops methodologies and technologies that enables the recognition and <a href=\"/wiki/Translation\" title=\"Translation\">translation</a> of spoken language into text by computers. It is also known as automatic speech recognition (ASR), computer speech recognition or speech to text (STT). It incorporates knowledge and research in the <a href=\"/wiki/Linguistics\" title=\"Linguistics\">linguistics</a>, <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, and <a href=\"/wiki/Electrical_engineering\" title=\"Electrical engineering\">electrical engineering</a> fields.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Spiking neural network",
      "definition_text":"Spiking neural network \u2013 (SNNs), are artificial neural networks that more closely mimic natural neural networks.[287] In addition to neuronal and synaptic state, SNNs incorporate the concept of time into their operating model.",
      "definition_html":[
         "<li><a href=\"/wiki/Spiking_neural_network\" title=\"Spiking neural network\">Spiking neural network</a> \u2013 (SNNs), are <a href=\"/wiki/Artificial_neural_network\" title=\"Artificial neural network\">artificial neural network</a>s that more closely mimic natural neural networks.<sup class=\"reference\" id=\"cite_ref-Maas_1996_288-0\"><a href=\"#cite_note-Maas_1996-288\">[287]</a></sup> In addition to <a href=\"/wiki/Artificial_neuron\" title=\"Artificial neuron\">neuronal</a> and <a href=\"/wiki/Electrical_synapse\" title=\"Electrical synapse\">synaptic</a> state, SNNs incorporate the concept of time into their <a class=\"mw-redirect\" href=\"/wiki/Operating_Model\" title=\"Operating Model\">operating model</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"State",
      "definition_text":"State \u2013 In information technology and computer science, a program is described as stateful if it is designed to remember preceding events or user interactions;[288] the remembered information is called the state of the system.",
      "definition_html":[
         "<li><a href=\"/wiki/State_(computer_science)\" title=\"State (computer science)\">State</a> \u2013 In <a href=\"/wiki/Information_technology\" title=\"Information technology\">information technology</a> and <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a>, a program is described as stateful if it is designed to remember preceding events or user interactions;<sup class=\"reference\" id=\"cite_ref-289\"><a href=\"#cite_note-289\">[288]</a></sup> the remembered information is called the state of the system.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Statistical classification",
      "definition_text":"Statistical classification \u2013 In machine learning and statistics, classification is the problem of identifying to which of a set of categories (sub-populations) a new observation belongs, on the basis of a training set of data containing observations (or instances) whose category membership is known.  Examples are assigning a given email to the \"spam\" or \"non-spam\" class, and assigning a diagnosis to a given patient based on observed characteristics of the patient (sex, blood pressure, presence or absence of certain symptoms, etc.).  Classification is an example of pattern recognition.",
      "definition_html":[
         "<li><a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">Statistical classification</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> and <a href=\"/wiki/Statistics\" title=\"Statistics\">statistics</a>, classification is the problem of identifying to which of a set of <a class=\"mw-redirect\" href=\"/wiki/Categorical_data\" title=\"Categorical data\">categories</a> (sub-populations) a new <a href=\"/wiki/Observation\" title=\"Observation\">observation</a> belongs, on the basis of a <a class=\"mw-redirect\" href=\"/wiki/Training_set\" title=\"Training set\">training set</a> of data containing observations (or instances) whose category membership is known.  Examples are assigning a given email to the <a class=\"mw-redirect\" href=\"/wiki/Spam_filtering\" title=\"Spam filtering\">\"spam\" or \"non-spam\"</a> class, and assigning a diagnosis to a given patient based on observed characteristics of the patient (sex, blood pressure, presence or absence of certain symptoms, etc.).  Classification is an example of <a href=\"/wiki/Pattern_recognition\" title=\"Pattern recognition\">pattern recognition</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Statistical relational learning",
      "definition_text":"Statistical relational learning \u2013 (SRL), is a subdiscipline of artificial intelligence and machine learning that is concerned with domain models that exhibit both uncertainty (which can be dealt with using statistical methods) and complex, relational structure.[289][290] Note that SRL is sometimes called Relational Machine Learning (RML) in the literature. Typically, the knowledge representation formalisms developed in SRL use (a subset of) first-order logic to describe relational properties of a domain in a general manner (universal quantification) and draw upon probabilistic graphical models (such as Bayesian networks or Markov networks) to model the uncertainty; some also build upon the methods of inductive logic programming.",
      "definition_html":[
         "<li><a href=\"/wiki/Statistical_relational_learning\" title=\"Statistical relational learning\">Statistical relational learning</a> \u2013 (SRL), is a subdiscipline of artificial intelligence and <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> that is concerned with <a href=\"/wiki/Domain_model\" title=\"Domain model\">domain models</a> that exhibit both <a href=\"/wiki/Uncertainty\" title=\"Uncertainty\">uncertainty</a> (which can be dealt with using statistical methods) and complex, <a class=\"mw-redirect\" href=\"/wiki/Relation_(mathematics)\" title=\"Relation (mathematics)\">relational</a> structure.<sup class=\"reference\" id=\"cite_ref-Getoor2007_290-0\"><a href=\"#cite_note-Getoor2007-290\">[289]</a></sup><sup class=\"reference\" id=\"cite_ref-291\"><a href=\"#cite_note-291\">[290]</a></sup> Note that SRL is sometimes called Relational Machine Learning (RML) in the literature. Typically, the <a class=\"mw-redirect\" href=\"/wiki/Knowledge_representation\" title=\"Knowledge representation\">knowledge representation</a> formalisms developed in SRL use (a subset of) <a href=\"/wiki/First-order_logic\" title=\"First-order logic\">first-order logic</a> to describe relational properties of a domain in a general manner (<a href=\"/wiki/Universal_quantification\" title=\"Universal quantification\">universal quantification</a>) and draw upon <a class=\"mw-redirect\" href=\"/wiki/Probabilistic_graphical_model\" title=\"Probabilistic graphical model\">probabilistic graphical models</a> (such as <a href=\"/wiki/Bayesian_network\" title=\"Bayesian network\">Bayesian networks</a> or <a class=\"mw-redirect\" href=\"/wiki/Markov_network\" title=\"Markov network\">Markov networks</a>) to model the uncertainty; some also build upon the methods of <a href=\"/wiki/Inductive_logic_programming\" title=\"Inductive logic programming\">inductive logic programming</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Stochastic optimization",
      "definition_text":"Stochastic optimization \u2013 Stochastic optimization, (SO), methods are optimization methods that generate and use random variables. For stochastic problems, the random variables appear in the formulation of the optimization problem itself, which involves random objective functions or random constraints. Stochastic optimization methods also include methods with random iterates. Some stochastic optimization methods use random iterates to solve stochastic problems, combining both meanings of stochastic optimization.[291] Stochastic optimization methods generalize deterministic methods for deterministic problems.",
      "definition_html":[
         "<li><a href=\"/wiki/Stochastic_optimization\" title=\"Stochastic optimization\">Stochastic optimization</a> \u2013 Stochastic optimization, (SO), methods are <a class=\"mw-redirect\" href=\"/wiki/Optimization_(mathematics)\" title=\"Optimization (mathematics)\">optimization</a> <a href=\"/wiki/Iterative_method\" title=\"Iterative method\">methods</a> that generate and use <a href=\"/wiki/Random_variable\" title=\"Random variable\">random variables</a>. For stochastic problems, the random variables appear in the formulation of the optimization problem itself, which involves random <a class=\"mw-redirect\" href=\"/wiki/Objective_function\" title=\"Objective function\">objective functions</a> or random constraints. Stochastic optimization methods also include methods with random iterates. Some stochastic optimization methods use random iterates to solve stochastic problems, combining both meanings of stochastic optimization.<sup class=\"reference\" id=\"cite_ref-spall2003_292-0\"><a href=\"#cite_note-spall2003-292\">[291]</a></sup> Stochastic optimization methods generalize <a class=\"mw-redirect\" href=\"/wiki/Deterministic_system_(mathematics)\" title=\"Deterministic system (mathematics)\">deterministic</a> methods for deterministic problems.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Stochastic semantic analysis",
      "definition_text":"Stochastic semantic analysis \u2013 is an approach used in computer science as a semantic component of natural language understanding.  Stochastic models generally use the definition of segments of words as basic semantic units for the semantic models, and in some cases involve a two layered approach.[292]",
      "definition_html":[
         "<li><a href=\"/wiki/Stochastic_semantic_analysis\" title=\"Stochastic semantic analysis\">Stochastic semantic analysis</a> \u2013 is an approach used in <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> as a <a class=\"mw-redirect\" href=\"/wiki/Semantic\" title=\"Semantic\">semantic</a> component of <a class=\"mw-redirect\" href=\"/wiki/Natural_language_understanding\" title=\"Natural language understanding\">natural language understanding</a>.  Stochastic models generally use the definition of segments of words as basic semantic units for the semantic models, and in some cases involve a two layered approach.<sup class=\"reference\" id=\"cite_ref-293\"><a href=\"#cite_note-293\">[292]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Stanford Research Institute Problem Solver",
      "definition_text":"Stanford Research Institute Problem Solver (STRIPS) \u2013",
      "definition_html":[
         "<li><a href=\"/wiki/Stanford_Research_Institute_Problem_Solver\" title=\"Stanford Research Institute Problem Solver\">Stanford Research Institute Problem Solver</a> (STRIPS) \u2013</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Subject matter expert",
      "definition_text":"Subject-matter expert \u2013",
      "definition_html":[
         "<li><a href=\"/wiki/Subject-matter_expert\" title=\"Subject-matter expert\">Subject-matter expert</a> \u2013</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Superintelligence",
      "definition_text":"Superintelligence \u2013 is a hypothetical agent that possesses intelligence far surpassing that of the brightest and most gifted human minds. Superintelligence may also refer to a property of problem-solving systems (e.g., superintelligent language translators or engineering assistants) whether or not these high-level intellectual competencies are embodied in agents that act in the world. A superintelligence may or may not be created by an intelligence explosion and associated with a technological singularity.",
      "definition_html":[
         "<li><a href=\"/wiki/Superintelligence\" title=\"Superintelligence\">Superintelligence</a> \u2013 is a hypothetical <a href=\"/wiki/Intelligent_agent\" title=\"Intelligent agent\">agent</a> that possesses <a href=\"/wiki/Intelligence\" title=\"Intelligence\">intelligence</a> far surpassing that of the <a href=\"/wiki/Genius\" title=\"Genius\">brightest</a> and most <a href=\"/wiki/Intellectual_giftedness\" title=\"Intellectual giftedness\">gifted</a> human minds. Superintelligence may also refer to a property of problem-solving systems (e.g., superintelligent language translators or engineering assistants) whether or not these high-level intellectual competencies are embodied in agents that act in the world. A superintelligence may or may not be created by an <a href=\"/wiki/Technological_singularity#Intelligence_explosion\" title=\"Technological singularity\">intelligence explosion</a> and associated with a <a href=\"/wiki/Technological_singularity\" title=\"Technological singularity\">technological singularity</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Supervised learning",
      "definition_text":"Supervised learning \u2013 is the machine learning task of learning a function that maps an input to an output based on example input-output pairs.[293] It infers a function from labeled training data consisting of a set of training examples.[294]  In supervised learning, each example is a pair consisting of an input object (typically a vector) and a desired output value (also called the supervisory signal).  A supervised learning algorithm analyzes the training data and produces an inferred function, which can be used for mapping new examples. An optimal scenario will allow for the algorithm to correctly determine the class labels for unseen instances. This requires the learning algorithm to generalize from the training data to unseen situations in a \"reasonable\" way (see inductive bias).",
      "definition_html":[
         "<li><a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">Supervised learning</a> \u2013 is the <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> task of learning a function that maps an input to an output based on example input-output pairs.<sup class=\"reference\" id=\"cite_ref-294\"><a href=\"#cite_note-294\">[293]</a></sup> It infers a function from <i><span id=\"LABELLED_DATA\"></span><span id=\"labeled_[[training_set|training_data]]\">labeled <a class=\"mw-redirect\" href=\"/wiki/Training_set\" title=\"Training set\">training data</a></span></i> consisting of a set of <i>training examples</i>.<sup class=\"reference\" id=\"cite_ref-295\"><a href=\"#cite_note-295\">[294]</a></sup>  In supervised learning, each example is a <i>pair</i> consisting of an input object (typically a vector) and a desired output value (also called the <i>supervisory signal</i>).  A supervised learning algorithm analyzes the training data and produces an inferred function, which can be used for mapping new examples. An optimal scenario will allow for the algorithm to correctly determine the class labels for unseen instances. This requires the learning algorithm to generalize from the training data to unseen situations in a \"reasonable\" way (see <a href=\"/wiki/Inductive_bias\" title=\"Inductive bias\">inductive bias</a>).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Support vector machines",
      "definition_text":"Support-vector machines \u2013 In machine learning, support-vector machines (SVMs, also support-vector networks[295]) are supervised learning models with associated learning algorithms that analyze data used for classification and regression analysis.",
      "definition_html":[
         "<li><a href=\"/wiki/Support-vector_machine\" title=\"Support-vector machine\">Support-vector machines</a> \u2013 In <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a>, support-vector machines (SVMs, also support-vector networks<sup class=\"reference\" id=\"cite_ref-296\"><a href=\"#cite_note-296\">[295]</a></sup>) are <a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">supervised learning</a> models with associated learning <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithms</a> that analyze data used for <a href=\"/wiki/Statistical_classification\" title=\"Statistical classification\">classification</a> and <a href=\"/wiki/Regression_analysis\" title=\"Regression analysis\">regression analysis</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Swarm intelligence",
      "definition_text":"Swarm intelligence \u2013 (SI), is the collective behavior of decentralized, self-organized systems, natural or artificial. The expression was introduced in the context of cellular robotic systems.[296]",
      "definition_html":[
         "<li><a href=\"/wiki/Swarm_intelligence\" title=\"Swarm intelligence\">Swarm intelligence</a> \u2013 (SI), is the <a href=\"/wiki/Collective_behavior\" title=\"Collective behavior\">collective behavior</a> of <a href=\"/wiki/Decentralization\" title=\"Decentralization\">decentralized</a>, <a href=\"/wiki/Self-organization\" title=\"Self-organization\">self-organized</a> systems, natural or artificial. The expression was introduced in the context of cellular robotic systems.<sup class=\"reference\" id=\"cite_ref-297\"><a href=\"#cite_note-297\">[296]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Symbolic artificial intelligence",
      "definition_text":"Symbolic artificial intelligence \u2013 is the term for the collection of all methods in artificial intelligence research that are based on high-level \"symbolic\" (human-readable) representations of problems, logic and search.",
      "definition_html":[
         "<li><a href=\"/wiki/Symbolic_artificial_intelligence\" title=\"Symbolic artificial intelligence\">Symbolic artificial intelligence</a> \u2013 is the term for the collection of all methods in <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> research that are based on high-level \"symbolic\" (human-readable) representations of problems, <a class=\"mw-redirect\" href=\"/wiki/Formal_logic\" title=\"Formal logic\">logic</a> and <a href=\"/wiki/Search_algorithm\" title=\"Search algorithm\">search</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Synthetic intelligence",
      "definition_text":"Synthetic intelligence \u2013(SI), is an alternative term for artificial intelligence which emphasizes that the intelligence of machines need not be an imitation or in any way artificial; it can be a genuine form of intelligence.[297][298]",
      "definition_html":[
         "<li><a href=\"/wiki/Synthetic_intelligence\" title=\"Synthetic intelligence\">Synthetic intelligence</a> \u2013(SI), is an alternative term for <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> which emphasizes that the intelligence of machines need not be an imitation or in any way artificial; it can be a genuine form of intelligence.<sup class=\"reference\" id=\"cite_ref-FOOTNOTEHaugeland1985255_298-0\"><a href=\"#cite_note-FOOTNOTEHaugeland1985255-298\">[297]</a></sup><sup class=\"reference\" id=\"cite_ref-FOOTNOTEPooleMackworthGoebbel19981_299-0\"><a href=\"#cite_note-FOOTNOTEPooleMackworthGoebbel19981-299\">[298]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Systems neuroscience",
      "definition_text":"Systems neuroscience \u2013 is a subdiscipline of neuroscience and systems biology that studies the structure and function of neural circuits and systems.  It is an umbrella term, encompassing a number of areas of study concerned with how nerve cells behave when connected together to form neural pathways, neural circuits, and larger brain networks.",
      "definition_html":[
         "<li><a href=\"/wiki/Systems_neuroscience\" title=\"Systems neuroscience\">Systems neuroscience</a> \u2013 is a subdiscipline of <a href=\"/wiki/Neuroscience\" title=\"Neuroscience\">neuroscience</a> and <a href=\"/wiki/Systems_biology\" title=\"Systems biology\">systems biology</a> that studies the structure and function of neural circuits and systems.  It is an umbrella term, encompassing a number of areas of study concerned with how <a href=\"/wiki/Neuron\" title=\"Neuron\">nerve cells</a> behave when connected together to form <a href=\"/wiki/Neural_pathway\" title=\"Neural pathway\">neural pathways</a>, <a href=\"/wiki/Neural_circuit\" title=\"Neural circuit\">neural circuits</a>, and larger <a class=\"mw-redirect\" href=\"/wiki/Large_scale_brain_networks\" title=\"Large scale brain networks\">brain networks</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Technological singularity",
      "definition_text":"Technological singularity \u2013 (also, simply, the singularity)[299] is a hypothetical point in the future when technological growth becomes uncontrollable and irreversible, resulting in unfathomable changes to human civilization.[300][301]",
      "definition_html":[
         "<li><a href=\"/wiki/Technological_singularity\" title=\"Technological singularity\">Technological singularity</a> \u2013 (also, simply, the singularity)<sup class=\"reference\" id=\"cite_ref-300\"><a href=\"#cite_note-300\">[299]</a></sup> is a <a class=\"mw-redirect\" href=\"/wiki/Hypothetical\" title=\"Hypothetical\">hypothetical</a> point in the future when technological growth becomes uncontrollable and irreversible, resulting in unfathomable changes to human civilization.<sup class=\"reference\" id=\"cite_ref-301\"><a href=\"#cite_note-301\">[300]</a></sup><sup class=\"reference\" id=\"cite_ref-Singularity_hypotheses_302-0\"><a href=\"#cite_note-Singularity_hypotheses-302\">[301]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Temporal difference learning",
      "definition_text":"Temporal difference learning \u2013 (TD) learning refers to a class of model-free reinforcement learning methods which learn by bootstrapping from the current estimate of the value function. These methods sample from the environment, like Monte Carlo methods, and perform updates based on current estimates, like dynamic programming methods.[302]",
      "definition_html":[
         "<li><a href=\"/wiki/Temporal_difference_learning\" title=\"Temporal difference learning\">Temporal difference learning</a> \u2013 (TD) learning refers to a class of <a href=\"/wiki/Model-free_(reinforcement_learning)\" title=\"Model-free (reinforcement learning)\">model-free</a> <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a> methods which learn by <a href=\"/wiki/Bootstrapping_(statistics)\" title=\"Bootstrapping (statistics)\">bootstrapping</a> from the current estimate of the value function. These methods sample from the environment, like <a href=\"/wiki/Monte_Carlo_method\" title=\"Monte Carlo method\">Monte Carlo methods</a>, and perform updates based on current estimates, like <a href=\"/wiki/Dynamic_programming\" title=\"Dynamic programming\">dynamic programming</a> methods.<sup class=\"reference\" id=\"cite_ref-RSutton-1998_303-0\"><a href=\"#cite_note-RSutton-1998-303\">[302]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Tensor network theory",
      "definition_text":"Tensor network theory \u2013 is a theory of brain function (particularly that of the cerebellum) that provides a mathematical model of the transformation of sensory space-time coordinates into motor coordinates and vice versa by cerebellar neuronal networks. The theory was developed as a geometrization of brain function (especially of the central nervous system) using tensors.[303][304]",
      "definition_html":[
         "<li><a href=\"/wiki/Tensor_network_theory\" title=\"Tensor network theory\">Tensor network theory</a> \u2013 is a theory of <a href=\"/wiki/Brain\" title=\"Brain\">brain</a> function (particularly that of the <a href=\"/wiki/Cerebellum\" title=\"Cerebellum\">cerebellum</a>) that provides a mathematical model of the <a href=\"/wiki/Transformation_geometry\" title=\"Transformation geometry\">transformation</a> of sensory <a class=\"mw-redirect\" href=\"/wiki/Space-time\" title=\"Space-time\">space-time</a> coordinates into motor coordinates and vice versa by cerebellar <a class=\"mw-redirect\" href=\"/wiki/Neuronal_networks\" title=\"Neuronal networks\">neuronal networks</a>. The theory was developed as a <a class=\"mw-redirect\" href=\"/wiki/Geometrization\" title=\"Geometrization\">geometrization</a> of brain function (especially of the <a href=\"/wiki/Central_nervous_system\" title=\"Central nervous system\">central nervous system</a>) using <a href=\"/wiki/Tensor\" title=\"Tensor\">tensors</a>.<sup class=\"reference\" id=\"cite_ref-Neuroscience1980-Pellionisz_304-0\"><a href=\"#cite_note-Neuroscience1980-Pellionisz-304\">[303]</a></sup><sup class=\"reference\" id=\"cite_ref-Neuroscience1985-Pellionisz_305-0\"><a href=\"#cite_note-Neuroscience1985-Pellionisz-305\">[304]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"TensorFlow",
      "definition_text":"TensorFlow \u2013 is a free and open-source software library for dataflow and differentiable programming across a range of tasks. It is a symbolic math library, and is also used for machine learning applications such as neural networks.[305]",
      "definition_html":[
         "<li><a href=\"/wiki/TensorFlow\" title=\"TensorFlow\">TensorFlow</a> \u2013 is a <a href=\"/wiki/Free_software\" title=\"Free software\">free</a> and <a href=\"/wiki/Open-source_software\" title=\"Open-source software\">open-source</a> <a href=\"/wiki/Library_(computing)\" title=\"Library (computing)\">software library</a> for <a href=\"/wiki/Dataflow_programming\" title=\"Dataflow programming\">dataflow</a> and <a href=\"/wiki/Differentiable_programming\" title=\"Differentiable programming\">differentiable</a> programming across a range of tasks. It is a symbolic math library, and is also used for <a href=\"/wiki/Machine_learning\" title=\"Machine learning\">machine learning</a> applications such as <a class=\"mw-redirect\" href=\"/wiki/Neural_networks\" title=\"Neural networks\">neural networks</a>.<sup class=\"reference\" id=\"cite_ref-YoutubeClip_306-0\"><a href=\"#cite_note-YoutubeClip-306\">[305]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Theoretical computer science",
      "definition_text":"Theoretical computer science \u2013 (TCS), is a subset of general computer science and mathematics that focuses on more mathematical topics of computing and includes the theory of computation.",
      "definition_html":[
         "<li><a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">Theoretical computer science</a> \u2013 (TCS), is a subset of general <a href=\"/wiki/Computer_science\" title=\"Computer science\">computer science</a> and <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a> that focuses on more mathematical topics of computing and includes the <a href=\"/wiki/Theory_of_computation\" title=\"Theory of computation\">theory of computation</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Theory of computation",
      "definition_text":"Theory of computation \u2013 In theoretical computer science and mathematics, the theory of computation is the branch that deals with how efficiently problems can be solved on a model of computation, using an algorithm.  The field is divided into three major branches: automata theory and languages, computability theory, and computational complexity theory, which are linked by the question: \"What are the fundamental capabilities and limitations of computers?\".[306]",
      "definition_html":[
         "<li><a href=\"/wiki/Theory_of_computation\" title=\"Theory of computation\">Theory of computation</a> \u2013 In <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a> and <a href=\"/wiki/Mathematics\" title=\"Mathematics\">mathematics</a>, the theory of computation is the branch that deals with how efficiently problems can be solved on a <a href=\"/wiki/Model_of_computation\" title=\"Model of computation\">model of computation</a>, using an <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a>.  The field is divided into three major branches: <a href=\"/wiki/Automata_theory\" title=\"Automata theory\">automata theory</a> and languages, <a href=\"/wiki/Computability_theory\" title=\"Computability theory\">computability theory</a>, and <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, which are linked by the question: <i>\"What are the fundamental capabilities and limitations of computers?\".</i><sup class=\"reference\" id=\"cite_ref-Sipser-3rd_307-0\"><a href=\"#cite_note-Sipser-3rd-307\">[306]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Thompson sampling",
      "definition_text":"Thompson sampling \u2013 is a heuristic for choosing actions that addresses the exploration-exploitation dilemma in the multi-armed bandit problem. It consists in choosing the action that maximizes the expected reward with respect to a randomly drawn belief.[307][308]",
      "definition_html":[
         "<li><a href=\"/wiki/Thompson_sampling\" title=\"Thompson sampling\">Thompson sampling</a> \u2013 is a heuristic for choosing actions that addresses the exploration-exploitation dilemma in the <a href=\"/wiki/Multi-armed_bandit\" title=\"Multi-armed bandit\">multi-armed bandit</a> problem. It consists in choosing the action that maximizes the expected reward with respect to a randomly drawn belief.<sup class=\"reference\" id=\"cite_ref-308\"><a href=\"#cite_note-308\">[307]</a></sup><sup class=\"reference\" id=\"cite_ref-309\"><a href=\"#cite_note-309\">[308]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Time complexity",
      "definition_text":"Time complexity \u2013 is the computational complexity that describes the amount of time it takes to run an algorithm. Time complexity is commonly estimated by counting the number of elementary operations performed by the algorithm, supposing that each elementary operation takes a fixed amount of time to perform. Thus, the amount of time taken and the number of elementary operations performed by the algorithm are taken to differ by at most a constant factor.",
      "definition_html":[
         "<li><a href=\"/wiki/Time_complexity\" title=\"Time complexity\">Time complexity</a> \u2013 is the <a href=\"/wiki/Computational_complexity\" title=\"Computational complexity\">computational complexity</a> that describes the amount of time it takes to run an <a href=\"/wiki/Algorithm\" title=\"Algorithm\">algorithm</a>. Time complexity is commonly estimated by counting the number of elementary operations performed by the algorithm, supposing that each elementary operation takes a fixed amount of time to perform. Thus, the amount of time taken and the number of elementary operations performed by the algorithm are taken to differ by at most a <a class=\"mw-redirect\" href=\"/wiki/Constant_factor\" title=\"Constant factor\">constant factor</a>.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Transhumanism",
      "definition_text":"Transhumanism \u2013 (abbreviated as H+ or h+), is an international philosophical movement that advocates for the transformation of the human condition by developing and making widely available sophisticated technologies to greatly enhance human intellect and physiology.[309][310]",
      "definition_html":[
         "<li><a href=\"/wiki/Transhumanism\" title=\"Transhumanism\">Transhumanism</a> \u2013 (abbreviated as H+ or h+), is an international <a href=\"/wiki/School_of_thought\" title=\"School of thought\">philosophical movement</a> that advocates for the transformation of the <a href=\"/wiki/Human_condition\" title=\"Human condition\">human condition</a> by developing and making widely available sophisticated technologies to greatly <a href=\"/wiki/Human_enhancement\" title=\"Human enhancement\">enhance human</a> intellect and physiology.<sup class=\"reference\" id=\"cite_ref-Mercer_310-0\"><a href=\"#cite_note-Mercer-310\">[309]</a></sup><sup class=\"reference\" id=\"cite_ref-Bostrom_2005_311-0\"><a href=\"#cite_note-Bostrom_2005-311\">[310]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Transition system",
      "definition_text":"Transition system \u2013 In theoretical computer science, a transition system is a concept used in the study of computation. It is used to describe the potential behavior of discrete systems.  It consists of states and transitions between states, which may be labeled with labels chosen from a set; the same label may appear on more than one transition. If the label set is a singleton, the system is essentially unlabeled, and a simpler definition that omits the labels is possible.",
      "definition_html":[
         "<li><a href=\"/wiki/Transition_system\" title=\"Transition system\">Transition system</a> \u2013 In <a href=\"/wiki/Theoretical_computer_science\" title=\"Theoretical computer science\">theoretical computer science</a>, a transition system is a concept used in the study of <a href=\"/wiki/Computation\" title=\"Computation\">computation</a>. It is used to describe the potential behavior of <a href=\"/wiki/Discrete_system\" title=\"Discrete system\">discrete systems</a>.  It consists of <a href=\"/wiki/State_(computer_science)\" title=\"State (computer science)\">states</a> and transitions between states, which may be labeled with labels chosen from a set; the same label may appear on more than one transition. If the label set is a <a href=\"/wiki/Singleton_(mathematics)\" title=\"Singleton (mathematics)\">singleton</a>, the system is essentially unlabeled, and a simpler definition that omits the labels is possible.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Tree traversal",
      "definition_text":"Tree traversal \u2013 (also known as tree search), is a form of graph traversal and refers to the process of visiting (checking and/or updating) each node in a tree data structure, exactly once. Such traversals are classified by the order in which the nodes are visited.",
      "definition_html":[
         "<li><a href=\"/wiki/Tree_traversal\" title=\"Tree traversal\">Tree traversal</a> \u2013 (also known as tree search), is a form of <a href=\"/wiki/Graph_traversal\" title=\"Graph traversal\">graph traversal</a> and refers to the process of visiting (checking and/or updating) each node in a <a href=\"/wiki/Tree_(data_structure)\" title=\"Tree (data structure)\">tree data structure</a>, exactly once. Such traversals are classified by the order in which the nodes are visited.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"True quantified Boolean formula",
      "definition_text":"True quantified Boolean formula \u2013 In computational complexity theory, the language TQBF is a formal language consisting of the true quantified Boolean formulas.  A (fully) quantified Boolean formula is a formula in quantified propositional logic where every variable is quantified (or bound), using either existential or universal quantifiers, at the beginning of the sentence. Such a formula is equivalent to either true or false (since there are no free variables). If such a formula evaluates to true, then that formula is in the language TQBF. It is also known as QSAT (Quantified SAT).",
      "definition_html":[
         "<li><a href=\"/wiki/True_quantified_Boolean_formula\" title=\"True quantified Boolean formula\">True quantified Boolean formula</a> \u2013 In <a href=\"/wiki/Computational_complexity_theory\" title=\"Computational complexity theory\">computational complexity theory</a>, the language TQBF is a <a href=\"/wiki/Formal_language\" title=\"Formal language\">formal language</a> consisting of the true quantified Boolean formulas.  A (fully) quantified Boolean formula is a formula in <a class=\"mw-redirect\" href=\"/wiki/Quantification_(logic)\" title=\"Quantification (logic)\">quantified</a> <a class=\"mw-redirect\" href=\"/wiki/Propositional_logic\" title=\"Propositional logic\">propositional logic</a> where every variable is quantified (or <a class=\"mw-redirect\" href=\"/wiki/Bound_variable\" title=\"Bound variable\">bound</a>), using either <a href=\"/wiki/Existential_quantification\" title=\"Existential quantification\">existential</a> or <a href=\"/wiki/Universal_quantification\" title=\"Universal quantification\">universal</a> quantifiers, at the beginning of the sentence. Such a formula is equivalent to either true or false (since there are no <a class=\"mw-redirect\" href=\"/wiki/Bound_variable\" title=\"Bound variable\">free</a> variables). If such a formula evaluates to true, then that formula is in the language TQBF. It is also known as QSAT (Quantified <a href=\"/wiki/Boolean_satisfiability_problem\" title=\"Boolean satisfiability problem\">SAT</a>).</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Turing test",
      "definition_text":"Turing test \u2013 developed by Alan Turing in 1950, is a test of a machine's ability to exhibit intelligent behaviour equivalent to, or indistinguishable from, that of a human. Turing proposed that a human evaluator would judge natural language conversations between a human and a machine designed to generate human-like responses. The evaluator would be aware that one of the two partners in conversation is a machine, and all participants would be separated from one another. The conversation would be limited to a text-only channel such as a computer keyboard and screen so the result would not depend on the machine's ability to render words as speech.[311] If the evaluator cannot reliably tell the machine from the human, the machine is said to have passed the test. The test results do not depend on the machine's ability to give correct answers to questions, only how closely its answers resemble those a human would give.",
      "definition_html":[
         "<li><a href=\"/wiki/Turing_test\" title=\"Turing test\">Turing test</a> \u2013 developed by <a href=\"/wiki/Alan_Turing\" title=\"Alan Turing\">Alan Turing</a> in 1950, is a test of a machine's ability to <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">exhibit intelligent behaviour</a> equivalent to, or indistinguishable from, that of a human. Turing proposed that a human evaluator would <a class=\"mw-redirect\" href=\"/wiki/Natural_language_understanding\" title=\"Natural language understanding\">judge natural language conversations</a> between a human and a machine designed to generate human-like responses. The evaluator would be aware that one of the two partners in conversation is a machine, and all participants would be separated from one another. The conversation would be limited to a text-only channel such as a <a class=\"mw-redirect\" href=\"/wiki/Keyboard_(computing)\" title=\"Keyboard (computing)\">computer keyboard</a> and <a class=\"mw-redirect\" href=\"/wiki/Visual_display_unit\" title=\"Visual display unit\">screen</a> so the result would not depend on the machine's ability to render words as speech.<sup class=\"reference\" id=\"cite_ref-312\"><a href=\"#cite_note-312\">[311]</a></sup> If the evaluator cannot reliably tell the machine from the human, the machine is said to have passed the test. The test results do not depend on the machine's ability to give correct answers to questions, only how closely its answers resemble those a human would give.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Type system",
      "definition_text":"Type system \u2013 In programming languages, a type system is a set of rules that assigns a property called type to the various constructs of a computer program, such as variables, expressions, functions or modules.[312] These types formalize and enforce the otherwise implicit categories the programmer uses for algebraic data types, data structures, or other components (e.g. \"string\", \"array of float\", \"function returning boolean\"). The main purpose of a type system is to reduce possibilities for bugs in computer programs[313] by defining interfaces between different parts of a computer program, and then checking that the parts have been connected in a consistent way. This checking can happen statically (at compile time), dynamically (at run time), or as a combination of static and dynamic checking. Type systems have other purposes as well, such as expressing business rules, enabling certain compiler optimizations, allowing for multiple dispatch, providing a form of documentation, etc.",
      "definition_html":[
         "<li><a href=\"/wiki/Type_system\" title=\"Type system\">Type system</a> \u2013 In <a href=\"/wiki/Programming_language\" title=\"Programming language\">programming languages</a>, a type system is a set of rules that assigns a property called <a class=\"mw-redirect\" href=\"/wiki/Type_(computer_science)\" title=\"Type (computer science)\">type</a> to the various constructs of a <a href=\"/wiki/Computer_program\" title=\"Computer program\">computer program</a>, such as <a href=\"/wiki/Variable_(computer_science)\" title=\"Variable (computer science)\">variables</a>, <a href=\"/wiki/Expression_(computer_science)\" title=\"Expression (computer science)\">expressions</a>, <a class=\"mw-redirect\" href=\"/wiki/Function_(computer_science)\" title=\"Function (computer science)\">functions</a> or <a href=\"/wiki/Modular_programming\" title=\"Modular programming\">modules</a>.<sup class=\"reference\" id=\"cite_ref-FOOTNOTEPierce20021_313-0\"><a href=\"#cite_note-FOOTNOTEPierce20021-313\">[312]</a></sup> These types formalize and enforce the otherwise implicit categories the programmer uses for <a href=\"/wiki/Algebraic_data_type\" title=\"Algebraic data type\">algebraic data types</a>, data structures, or other components (e.g. \"string\", \"array of float\", \"function returning boolean\"). The main purpose of a type system is to reduce possibilities for <a class=\"mw-redirect\" href=\"/wiki/Bug_(computer_programming)\" title=\"Bug (computer programming)\">bugs</a> in computer programs<sup class=\"reference\" id=\"cite_ref-FOOTNOTECardelli20041_314-0\"><a href=\"#cite_note-FOOTNOTECardelli20041-314\">[313]</a></sup> by defining <a class=\"mw-redirect\" href=\"/wiki/Interface_(computer_science)\" title=\"Interface (computer science)\">interfaces</a> between different parts of a computer program, and then checking that the parts have been connected in a consistent way. This checking can happen statically (at <a href=\"/wiki/Compile_time\" title=\"Compile time\">compile time</a>), dynamically (at <a class=\"mw-redirect\" href=\"/wiki/Run_time_(program_lifecycle_phase)\" title=\"Run time (program lifecycle phase)\">run time</a>), or as a combination of static and dynamic checking. Type systems have other purposes as well, such as expressing business rules, enabling certain compiler optimizations, allowing for <a href=\"/wiki/Multiple_dispatch\" title=\"Multiple dispatch\">multiple dispatch</a>, providing a form of documentation, etc.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Unsupervised learning",
      "definition_text":"Unsupervised learning \u2013 is a type of self-organized Hebbian learning that helps find previously unknown patterns in data set without pre-existing labels. It is also known as self-organization and allows modeling probability densities of given inputs.[314] It is one of the main three categories of machine learning, along with supervised and reinforcement learning. Semi-supervised learning has also been described and is a hybridization of supervised and unsupervised techniques.",
      "definition_html":[
         "<li><a href=\"/wiki/Unsupervised_learning\" title=\"Unsupervised learning\">Unsupervised learning</a> \u2013 is a type of self-organized <a class=\"mw-redirect\" href=\"/wiki/Hebbian_learning\" title=\"Hebbian learning\">Hebbian learning</a> that helps find previously unknown patterns in data set without pre-existing labels. It is also known as <a href=\"/wiki/Self-organization\" title=\"Self-organization\">self-organization</a> and allows modeling <a href=\"/wiki/Probability_density_function\" title=\"Probability density function\">probability densities</a> of given inputs.<sup class=\"reference\" id=\"cite_ref-Hinton99a_315-0\"><a href=\"#cite_note-Hinton99a-315\">[314]</a></sup> It is one of the main three categories of machine learning, along with <a href=\"/wiki/Supervised_learning\" title=\"Supervised learning\">supervised</a> and <a href=\"/wiki/Reinforcement_learning\" title=\"Reinforcement learning\">reinforcement learning</a>. Semi-supervised learning has also been described and is a hybridization of supervised and unsupervised techniques.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Vision processing unit",
      "definition_text":"Vision processing unit \u2013 (VPU), is a type of microprocessor designed to accelerate machine vision tasks.[315][316]",
      "definition_html":[
         "<li><a href=\"/wiki/Vision_processing_unit\" title=\"Vision processing unit\">Vision processing unit</a> \u2013 (VPU), is a type of <a href=\"/wiki/Microprocessor\" title=\"Microprocessor\">microprocessor</a> designed to <a href=\"/wiki/Hardware_acceleration\" title=\"Hardware acceleration\">accelerate</a> <a href=\"/wiki/Machine_vision\" title=\"Machine vision\">machine vision</a> tasks.<sup class=\"reference\" id=\"cite_ref-316\"><a href=\"#cite_note-316\">[315]</a></sup><sup class=\"reference\" id=\"cite_ref-317\"><a href=\"#cite_note-317\">[316]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Watson",
      "definition_text":"Watson \u2013 is a question-answering computer system capable of answering questions posed in natural language,[317] developed in IBM's DeepQA project by a research team led by principal investigator David Ferrucci.[318] Watson was named after IBM's first CEO, industrialist Thomas J. Watson.[319][320]",
      "definition_html":[
         "<li><a href=\"/wiki/Watson_(computer)\" title=\"Watson (computer)\">Watson</a> \u2013 is a <a href=\"/wiki/Question_answering\" title=\"Question answering\">question-answering</a> computer system capable of answering questions posed in <a href=\"/wiki/Natural_language\" title=\"Natural language\">natural language</a>,<sup class=\"reference\" id=\"cite_ref-ibm_318-0\"><a href=\"#cite_note-ibm-318\">[317]</a></sup> developed in <a href=\"/wiki/IBM\" title=\"IBM\">IBM</a>'s DeepQA project by a research team led by <a href=\"/wiki/Principal_investigator\" title=\"Principal investigator\">principal investigator</a> <a href=\"/wiki/David_Ferrucci\" title=\"David Ferrucci\">David Ferrucci</a>.<sup class=\"reference\" id=\"cite_ref-319\"><a href=\"#cite_note-319\">[318]</a></sup> Watson was named after IBM's first CEO, industrialist <a href=\"/wiki/Thomas_J._Watson\" title=\"Thomas J. Watson\">Thomas J. Watson</a>.<sup class=\"reference\" id=\"cite_ref-NYT_20110208_320-0\"><a href=\"#cite_note-NYT_20110208-320\">[319]</a></sup><sup class=\"reference\" id=\"cite_ref-321\"><a href=\"#cite_note-321\">[320]</a></sup></li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Weak AI",
      "definition_text":"Weak AI \u2013 (weak AI), also known as narrow AI,[321][322][323] is artificial intelligence that is focused on one narrow task.",
      "definition_html":[
         "<li><a href=\"/wiki/Weak_AI\" title=\"Weak AI\">Weak AI</a> \u2013 (weak AI), also known as narrow AI,<sup class=\"reference\" id=\"cite_ref-322\"><a href=\"#cite_note-322\">[321]</a></sup><sup class=\"reference\" id=\"cite_ref-323\"><a href=\"#cite_note-323\">[322]</a></sup><sup class=\"reference\" id=\"cite_ref-324\"><a href=\"#cite_note-324\">[323]</a></sup> is <a href=\"/wiki/Artificial_intelligence\" title=\"Artificial intelligence\">artificial intelligence</a> that is focused on one narrow task.</li>"
      ],
      "link":"https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence",
      "source":"Wikipedia Glossary of Artificial Intelligence"
   },
   {
      "terms":"Agenda",
      "definition_text":"A prioritized list of parser tasks still to be executed.",
      "definition_html":"A prioritized list of parser tasks still to be executed.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Alignment",
      "definition_text":"Mapping the text segments of a parallel text onto each other.",
      "definition_html":"Mapping the text segments of a parallel text onto each other.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Ambiguity",
      "definition_text":"Ambiguity is a situation in which a word, phrase or sentence conveys more than one meaning.",
      "definition_html":"Ambiguity is a situation in which a word, phrase or sentence conveys more than one meaning.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Back-off",
      "definition_text":"A mechanism for smoothing the estimates of the probabilities of rare events by relying on less specific models.",
      "definition_html":"A mechanism for smoothing the estimates of the probabilities of rare events by relying on less specific models.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Bilingual corpus",
      "definition_text":"A collection of texts in  which each text appears in two languages.",
      "definition_html":"A collection of texts in  which each text appears in two languages.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Bilingual dictionary",
      "definition_text":"A dictionary that provides translations of words into another language.",
      "definition_html":"A dictionary that provides translations of words into another language.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Chunk",
      "definition_text":"A sequence of words in text that constitutes a non-recursive, elementary grouping of a particular syntactic category.",
      "definition_html":"A sequence of words in text that constitutes a non-recursive, elementary grouping of a particular syntactic category.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Concordance",
      "definition_text":"A list showing all the occurrences and contexts of a given word or phrase, as found in a corpus, typically in the form of KWIC index.",
      "definition_html":"A list showing all the occurrences and contexts of a given word or phrase, as found in a <a href=\"http://language.worldofcomputing.net/linguistics/introduction/what-is-corpus.html\">corpus</a>, typically in the form of KWIC index.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Corpus",
      "definition_text":"Corpus is a body of text. In Latin corpus means body.",
      "definition_html":"<a href=\"http://language.worldofcomputing.net/linguistics/introduction/what-is-corpus.html\">Corpus</a> is a body of text. In Latin corpus means body.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Corpora",
      "definition_text":"Collection of texts. Plural form of corpus.",
      "definition_html":"Collection of texts. Plural form of <a href=\"http://language.worldofcomputing.net/linguistics/introduction/what-is-corpus.html\">corpus</a>.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Derivation tree",
      "definition_text":"The structure characterized by a set of nodes and a dominance relation between them.",
      "definition_html":"The structure characterized by a set of nodes and a dominance relation between them.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Dialogue",
      "definition_text":"Communicative linguistic activity in which at least two speakers or agents participate.",
      "definition_html":"Communicative linguistic activity in which at least two speakers or agents participate.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Discourse",
      "definition_text":"An extended sequence of sentences produced by one or more people with the aim of conveying or exchanging information.",
      "definition_html":"An extended sequence of sentences produced by one or more people with the aim of conveying or exchanging information.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Entropy",
      "definition_text":"The degree of disorder or randomness in a system, often taken as a measuer of how difficult it is to predict the outcome of a random variabe.",
      "definition_html":"The degree of disorder or randomness in a system, often taken as a measuer of how difficult it is to predict the outcome of a random variabe.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Formal language",
      "definition_text":"Any set of strings over an alphabet.",
      "definition_html":"Any set of strings over an alphabet.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Glossing",
      "definition_text":"Providing a rough word-by-word translation of a document.",
      "definition_html":"Providing a rough word-by-word <a href=\"http://language.worldofcomputing.net/machine-translation/machine-translation-overview.html\">translation </a>of a document.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Headword",
      "definition_text":"A word or phrase that is defined or explained in a dictionary.",
      "definition_html":"A word or phrase that is defined or explained in a dictionary.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Interlingua",
      "definition_text":"A language netutral text representation used in machine translation.",
      "definition_html":"A language netutral text representation used in machine translation.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Lambda calculus",
      "definition_text":"A universal model of computation, used widely in semantics and computer science to model the functional behaviour of linguistic expressions.",
      "definition_html":"A universal model of computation, used widely in semantics and computer science to model the functional behaviour of linguistic expressions.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Lexicalization",
      "definition_text":"The process of generating an appropriate lexical item for given semantic content, typically a phase of the automatic text generation process.",
      "definition_html":"The process of generating an appropriate lexical item for given semantic content, typically a phase of the automatic text generation process.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Mal-rules",
      "definition_text":"Rules inappropriate to the true structure of a language, but which describe the systemic errors that learners make. Mal-rules are used for finding and diagnosing learners’ errors.",
      "definition_html":"Rules inappropriate to the true structure of a language, but which describe the systemic errors that learners make. Mal-rules are used for finding and diagnosing learners’ errors.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"n-gram",
      "definition_text":"A sequence of n tokens.",
      "definition_html":"A sequence of n tokens.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Natural language generation",
      "definition_text":"The automatic production of natural langauge text.",
      "definition_html":"The automatic production of natural langauge text.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Ontolingua",
      "definition_text":"A standardized knowledge representation formalism developed at Stanford University.",
      "definition_html":"A standardized knowledge representation formalism developed at Stanford University.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Ontology",
      "definition_text":"An inventory of the objects or processes in a domain, together with a specification of some or all of the relations that hold among them, generally arranged as a hierarchy.",
      "definition_html":"An inventory of the objects or processes in a domain, together with a specification of some or all of the relations that hold among them, generally arranged as a hierarchy.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Overacceptance",
      "definition_text":"The error of returning too many phrases for a grammatical input.",
      "definition_html":"The error of returning too many phrases for a grammatical input.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Phrase-structure grammar",
      "definition_text":"A type of grammar where no restriction is imposed on the form of its productions.",
      "definition_html":"A type of grammar where no restriction is imposed on the form of its productions.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Polysemy",
      "definition_text":"The phenomenon of words having multiple meanings.",
      "definition_html":"The phenomenon of words having multiple meanings.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Production",
      "definition_text":"A rewriting rule in grammar.",
      "definition_html":"A rewriting rule in grammar.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Regular grammar",
      "definition_text":"A type of grammar where every production is of any of the forms A->wB or A->w, where A, B are nonterminal letters and w is any terminal string.",
      "definition_html":"A type of grammar where every production is of any of the forms A->wB or A->w, where A, B are nonterminal letters and w is any terminal string.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Semantics",
      "definition_text":"The study of linguistic meaning.",
      "definition_html":"The study of linguistic meaning.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Sublanguage",
      "definition_text":"A proper subset of expressions in a natural or artificial language which exhibits language-like behaviour.",
      "definition_html":"A proper subset of expressions in a natural or artificial language which exhibits language-like behaviour.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Synset",
      "definition_text":"A set of one or more words that are considered to be synonyms in some or all contexts.",
      "definition_html":"A set of one or more words that are considered to be synonyms in some or all contexts.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Treebank",
      "definition_text":"A syntactically analysed text corpus.",
      "definition_html":"A syntactically analysed text <a href=\"http://language.worldofcomputing.net/linguistics/introduction/what-is-corpus.html\">corpus</a>.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Word-token",
      "definition_text":"An occurrence in text of a word from a language vocabulary.",
      "definition_html":"An occurrence in text of a word from a language vocabulary.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   },
   {
      "terms":"Zero anaphora",
      "definition_text":"Anaphora where an elliptically omitted word or expression acts as an anaphor. Example: Sullivan attacked the Lion but not able to find it. Here after but the anaphor he is omitted.",
      "definition_html":"Anaphora where an elliptically omitted word or expression acts as an anaphor. Example: Sullivan attacked the Lion but not able to find it. Here after but the anaphor he is omitted.",
      "link":"http://language.worldofcomputing.net/category/nlp-glossary",
      "source":"World of Natural Language Processing"
   }
]