{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      /*
       * This launch configuration is based on a launch configuration for debugging Typescript
       * projects using ts-node-dev. Link to GitHub discussion:
       * https://github.com/whitecolor/ts-node-dev/issues/9#issuecomment-480565136
       * Also see the other launch configurations in that thread.
       *
       * One issue with this launch configuration is that it doesn't always release the
       * debugging port when the program is terminated. If you see an error like
       * "Starting inspector on 127.0.0.1:9229 failed: address already in use", then
       * follow the instructions here to find the PID (process ID) that has claimed the
       * port, and then kill that process:
       * https://github.com/microsoft/vscode/issues/73818#issuecomment-553318646
       */
      "type": "node",
      "request": "launch",
      "name": "Run Server",
      "program": "${workspaceRoot}/node_modules/ts-node-dev/bin/ts-node-dev",
      "args": [
        "--inspect",
        "--no-notify",
        "--respawn",
        "--transpileOnly",
        "./src",
        "--",
        /*
         * Uncomment the following argument to set the API to use an experimental database
         * schema, instead of the default 'public' database schema, for instance 'dev'.
         */
        "--database:schema=public"
      ],
      "protocol": "inspector",
      "internalConsoleOptions": "openOnSessionStart",
      "port": 9229
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Run tests",
      "program": "${workspaceFolder}/node_modules/.bin/jest",
      "args": [
        "--runInBand",
        /*
         * Test timeout can be set to a very large value to prevent the test runner from
         * terminating one of our tests when we are stepping through the code. This is particularly
         * important when inspecting database queries, as a quick timeout might result in the
         * test runner destroying the test database while it's being inspected.
         */
        "--testTimeout",
        "3600000"
        /*
         * If jest reports test failures that look like the result of stale code,
         * enable this option for a single run of this launch config to clear the cache.
         */
        // "--clearCache"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "openOnFirstSessionStart",
      "disableOptimisticBPs": true,
      /*
       * Uncomment the following to show debugging information from 'knex'. This command is
       * particularly handy for debugging the SQL queries submitted to the database.
       */
      "env": { "DEBUG": "knex:*" }
    }
  ]
}
