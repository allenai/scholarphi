user              nginx;
worker_processes  auto;

error_log  stderr warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # Accept `X-Forwarded-For` from local clients (other things running
    # on the Kubernetes cluster, and on our internal network). This ensures
    # the server can resolve the correct IP address of the actual client, rather
    # than that of the ingress controller.
    set_real_ip_from    10.0.0.0/8;
    set_real_ip_from    172.16.0.0/12;
    real_ip_header      X-Forwarded-For;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    keepalive_timeout   65;

    gzip  on;

    # Don't tell everyone we're running nginx, security through obscurity and
    # all that
    server_tokens off;

    # Output request logs in a fashion that's parseable by Google so we can
    # execute structure searches against aggregated logs.
    log_format json escape=json '{'
        '"time": "$time_iso8601",'
        '"request_method": "$request_method",'
        '"request_uri": "$scheme://$host$request_uri",'
        '"status": $status,'
        '"request_length": $request_length,'
        '"body_bytes_sent": $body_bytes_sent,'
        '"user_agent": "$http_user_agent",'
        '"ip": "$remote_addr",'
        '"realip": "$realip_remote_addr",'
        '"referer": "$http_referer",'
        '"host": "$host",'
        '"scheme": "$scheme"'
    '}';

    server {
        listen [::]:80;
        listen 80;

        charset utf-8;

        # Print the request log (access log) to stdout and use the json format
        # we defined up above.
        access_log /dev/stdout json;

        # By default, send requests to the UI server (which is another nginx
        # server that simply serves from disk)
        location / {
            proxy_pass http://localhost:4000/;
        }

        # Send requests that start with /api to the API server
        location /api/ {
            proxy_pass http://localhost:3000/;
        }
    }
}
